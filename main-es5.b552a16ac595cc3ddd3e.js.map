{"version":3,"sources":["webpack:///node_modules/@igo2/core/locale sync ^\\.\\/.*\\.json$","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/environments/environment.ts","webpack:///src/app/pages/portal/map-overlay/map-overlay.component.html","webpack:///src/app/pages/portal/map-overlay/map-overlay.component.ts","webpack:///src/app/pages/portal/map-overlay/map-overlay.module.ts","webpack:///src/app/pages/portal/expansion-panel/expansion-panel-header.component.html","webpack:///src/app/pages/portal/expansion-panel/expansion-panel-header.component.ts","webpack:///src/app/pages/portal/expansion-panel/expansion-panel.component.ts","webpack:///src/app/pages/portal/expansion-panel/expansion-panel.component.html","webpack:///src/app/pages/portal/expansion-panel/expansion-panel.animations.ts","webpack:///src/app/pages/portal/expansion-panel/expansion-panel.module.ts","webpack:///src/app/pages/portal/toast-panel/toast-panel.component.html","webpack:///src/app/pages/portal/toast-panel/toast-panel.component.ts","webpack:///src/app/pages/portal/toast-panel/toast-panel.module.ts","webpack:///src/app/pages/portal/sidenav/sidenav.component.html","webpack:///src/app/pages/portal/sidenav/sidenav.component.ts","webpack:///src/app/pages/portal/sidenav/sidenav.module.ts","webpack:///src/app/pages/portal/welcome-window/welcome-window.service.ts","webpack:///src/app/pages/portal/welcome-window/welcome-window.component.html","webpack:///src/app/pages/portal/welcome-window/welcome-window.component.ts","webpack:///src/app/pages/portal/toast-panel-for-expansion/toast-panel-for-expansion.component.ts","webpack:///src/app/pages/portal/toast-panel-for-expansion/toast-panel-for-expansion.component.html","webpack:///src/app/pages/portal/toast-panel-for-expansion/toast-panel-for-expansion.animations.ts","webpack:///src/app/pages/portal/portal.component.html","webpack:///src/app/pages/portal/portal.component.ts","webpack:///src/app/pages/portal/portal.animation.ts","webpack:///src/app/pages/portal/toast-panel-for-expansion/toast-panel-for-expansion.module.ts","webpack:///src/app/pages/portal/welcome-window/welcome-window.module.ts","webpack:///src/app/pages/portal/portal.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyAsyncContext","Promise","then","environment","production","igo","app","forceCoordsNA","catalog","sources","title","url","showLegend","depot","importExport","language","prefix","interactiveTour","tourInMobile","pathToConfigFile","searchSources","nominatim","available","storedqueries","icherche","searchUrl","order","params","limit","coordinatesreverse","showInPointerSummary","icherchereverse","enabled","ilayer","cadastre","projections","alias","def","extent","searchOverlayStyle","base","markerColor","markerOpacity","markerOutlineColor","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWidth","focus","selection","queryOverlayStyle","MapOverlayComponent","contextService","mediaService","configService","mapOverlay","this","context$$","context$","subscribe","context","handleContextChange","media$$","media$","media","unsubscribe","getConfig","overlay","getMedia","includes","push","MapOverlayModule","expandedChange","expanded","_expanded","value","emit","onToggleClick","maximized","backdropShown","_backdropShown","onBackdropClick","duration","delay","easing","opacity","display","showContent","AppExpansionPanelModule","languageService","storageState","queryState","_opened","hasFeatureEmphasisOnSelection","_zoomAuto","_fullExtent","fullExtent$","BehaviorSubject","fullExtent","isHtmlDisplay","iconResizeWindows","icon","actionStore","actionbarMode","Overlay","multiple$","isResultSelected$","isSelectedResultOutOfView$","initialized","format","focusedResult$","withZoomButton","zoomAuto$","openedChange","fullExtentEvent","windowHtmlDisplayEvent","resultSelected$","opened","storageService","get","zoomAuto","setResizeWindowIcon","event","clear","unselectResult","getValue","localOlFeature","readFeature","data","dataProjection","projection","featureProjection","Default","isSelectedResultOutOfView$$","combineLatest","viewController","state$","pipe","debounceTime","bunch","selectedResult","selectedOlFeature","selectedOlFeatureExtent","next","latestResult","trigger","store","entities$","monitorResultOutOfView","resultOrResolution$$","tap","res","resolution$","buildResultEmphasis","storageChange$$","storageChange$","skipWhile","storageChange","key","change","currentValue","load","translate","instant","tooltip","handler","Zoom","availability","multiple","olFeatures","all","result","checkbox","checkCondition","selectResult","v","isDesktop","clearFeatureEmphasis","olGeometry","getGeometry","getExtent","x","y","feature1","name","geometry","abstractFocusedOrSelectedResult","meta","style","assign","feature","queryOverlayStyleSelection","queryOverlayStyleFocus","setZIndex","queryResultsOverlay","addFeature","None","removeFeature","force","state","focused","update","selected","properties","target","setHtmlDisplay","features","removeFeatures","addFeatures","setFeatures","Mobile","preventDefault","keyCode","previousResult","nextResult","i","results","indexOf","action","SWIPE_ACTION","RIGHT","LEFT","UP","DOWN","className","args","set","reduceWindow","enlargeWindows","_map","_store","_entities","SESSION","length","AppToastPanelModule","toolState","catalogState","title$","toolChange","activeTool$$","toolbox","activeTool$","tool","sidenavTitle","catalogStore","layers","layer","options","active","activatePreviousTool","deactivateTool","AppSidenavModule","igoVersionDifferentFromStorage","isVersionDifferentFromStorage","setStorageConfig","nbVisit","Number","remove","dialogConfig","disableClose","autoFocus","maxWidth","showAgain","dialog","welcomeWindowService","discoverTitleInLocale$","of","html$","computeHtml","closeAll","deltaDay","isDateParsable","releaseDate","Date","releaseDateAppConfig","releaseDateApp","isNaN","getDate","console","log","releaseDateString","day","month","getMonth","year","getFullYear","title$$","description","version","r","withHeader","route","workspaceState","authService","layerService","dataSourceService","cdRef","capabilitiesService","contextState","mapState","searchState","searchSourceService","importService","http","messageService","dialogWindow","queryService","toastPanelOffsetX$","sidenavOpened$","minSearchTermLength","hasExpansionPanel","hasGeolocateButton","showRotationButtonIfNoRotation","workspaceNotAvailableMessage","workspaceEntitySortChange$","paginatorOptions","pageSize","pageSizeOptions","workspaceMenuClass","workspaceMaximize$$","workspaceMaximize$","searchBarTerm","onSettingsChange$","termDefinedInUrl","termSplitter","termDefinedInUrlTriggered","addedLayers$$","contextMenuStore","contextLoaded","toastPanelForExpansionOpened","showToastPanelForExpansionToggle","selectedWorkspace$","menuButtonReverseColor","toastPanelHtmlDisplay","_toastPanelOpened","igoSearchPointerSummaryEnabled","Tablet","getOrientation","Landscape","Portrait","window","searchTermSplitter$","initWelcomeWindow","authenticate$","authenticated","onChangeContext","searchCoordinate","contextMenuCoord","openGoogleMaps","openGoogleStreetView","queryStore","count$","pairwise","currentCnt","prevCnt","padding","isMobile","expansionPanelExpanded","toastPanelOpened","ol","once","readQueryParams","setSearchSettingsChange","selectedResult$","closeSidenav","workspaceEnabled$","empty$","workspaceEmpty","updateMapBrowserClass","workspaceMaximize","workspace$","activeWks","activeWidget$$","activeWorkspaceWidget$","widget","openToastPanelForExpansion","closeToastPanelForExpansion","openSidenav$$","openSidenav$","openSidenav","menuButtonClass","getClassMenuButton","sidenavMediaAndOrientation$$","orientation$","sidenavMediaAndOrientation","computeToastPanelOffsetX","isLandscape","getToastPanelExtent","sidenavOpened","wks","inResolutionRange$","entityStore","visible","matPaginator","workspacePaginator","querySearchSourceArray","getQuerySearchSource","added","getProperties","_featureStore","featureStoreLayer","getAllowedFieldsAndAlias","getQueryTitle","querySearchSource","find","s","sourceTitle","queryResults","f","forEach","sub","toggleSidenav","term","routeParams","search","deactivateCustomFilterTermStrategy","setSearchTerm","replace","trim","onClearSearch","onBeforeSearch","enabledSources","isReverseSearch","research","source","getEnabledSources","filter","newResults","searchStore","concat","updateMany","setSearchResultsGeometryStatus","searchBar","nativeElement","getElementsByTagName","cancelOngoingAddLayer","queryParams","qParams","uri","readLayersQueryParams","contextManager","getTool","toolToOpen","toolToOpenOnContextChange","toolName","activateTool","handleExpansionAndToastOnMobile","searchResultsOverlay","setSelectedResult","getSources","searchSource","getClickCoordinate","contextmenuPoint","boundingMapBrowser","mapBrowser","getBoundingClientRect","top","scrollY","pageYOffset","left","scrollX","pageXOffset","pixel","coord","getCoordinateFromPixel","proj","open","getGoogleMapsCoordLink","getGoogleStreetViewLink","c","toFixed","join","header","classList","add","isTablet","readToolParams","readSearchParams","readFocusFirst","setTimeout","resultItem","document","item","click","entities$$","stateView","all$","entities","take","computeFocusFirst","activateCustomFilterTermStrategy","searchResultsOlFeatures","entity","dataType","totalExtent","zoomToExtent","searchResultsGeometryEnabled$","readLayersQueryParamsByType","readVectorQueryParams","type","nameParamLayersKey","urlsKey","layersByService","split","urls","cnt","extractLayersByService","layerFromUrl","layerOptions","removeUndefined","LAYERS","visibility","computeLayerVisibilityFromUrl","addLayerFromURL","parseInt","lastIndex","lastIndexOf","fileName","slice","responseType","file","File","lastModified","now","onFileImportSuccess","error","onFileImportError","outLayersByService","startsWith","substr","endsWith","zIndex","commonSourceOptions","optionsFromCapabilities","optionsFromApi","crossOrigin","arcgisClause","sourceOptions","queryable","queryFormat","createAsyncLayer","l","addLayer","currentLayerid","visibleOnLayersParams","visibleOffLayersParams","visiblelayers","invisiblelayers","toString","auth","logged$","logged","createWelcomeWindow","hasWelcomeWindow","welcomWindowConfig","afterClosed","afterClosedWelcomeWindow","detectChanges","isPortrait","workspacePanelExpanded","content","workspace","hasWidget","onToggleSidenavClick","onSearchTermChange","onPointerSummaryStatusChange","onSearchResultsGeometryStatusChange","onSearch","onSearchSettingsChange","toolChanged","onMapQuery","onContextMenuOpen","bottom","AppToastPanelForExpansionModule","IgoWelcomeWindowModule","PortalModule","forRoot","analyticsService","analyticsListenerService","renderer","titleService","metaService","themeClass","authConfig","readTitleConfig","readThemeConfig","readDescriptionConfig","listen","detectOldBrowser","setTitle","addTag","theme","addClass","body","satisfies","ie","chrome","firefox","message$","zip","message","rep","alert","timeOut","AppModule","default","path","err"],"mappings":"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","file":"x","sourcesContent":["var map = {\n\t\"./en.auth.json\": \"4FNE\",\n\t\"./en.common.json\": \"MoB1\",\n\t\"./en.context.json\": \"N2Ms\",\n\t\"./en.core.json\": \"mPxz\",\n\t\"./en.geo.json\": \"/7uZ\",\n\t\"./en.integration.json\": \"TSY2\",\n\t\"./en.json\": \"Oh3F\",\n\t\"./fr.auth.json\": \"qcjx\",\n\t\"./fr.common.json\": \"O94P\",\n\t\"./fr.context.json\": \"Z1WX\",\n\t\"./fr.core.json\": \"wpjW\",\n\t\"./fr.geo.json\": \"8ktl\",\n\t\"./fr.integration.json\": \"Tzk/\",\n\t\"./fr.json\": \"+etH\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"I74T\";","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { LanguageOptions } from '@igo2/core';\nimport {\n  SearchSourceOptions,\n  ImportExportServiceOptions,\n  CatalogServiceOptions,\n  Projection,\n  CommonVectorStyleOptions\n} from '@igo2/geo';\n\ninterface Environment {\n  production: boolean;\n  igo: {\n    app: {\n      forceCoordsNA: boolean;\n    };\n    catalog?: CatalogServiceOptions;\n    importExport?: ImportExportServiceOptions;\n    language?: LanguageOptions;\n    searchSources?: { [key: string]: SearchSourceOptions };\n    projections?: Projection[];\n    interactiveTour?: { tourInMobile: boolean; pathToConfigFile: string };\n    depot?: { url: string; trainingGuides?: string[]; };\n    queryOverlayStyle?: {\n      base?: CommonVectorStyleOptions,\n      selection?: CommonVectorStyleOptions,\n      focus?: CommonVectorStyleOptions\n    };\n    searchOverlayStyle?: {\n      base?: CommonVectorStyleOptions,\n      selection?: CommonVectorStyleOptions,\n      focus?: CommonVectorStyleOptions\n    };\n  };\n}\n\nexport const environment: Environment = {\n  production: true,\n  igo: {\n    app: {\n      forceCoordsNA: false\n    },\n    catalog: {\n      sources: [\n        {\n          id: 'Gououvert',\n          title: 'Gouvouvert',\n          url: 'https://geoegl.msp.gouv.qc.ca/apis/ws/igo_gouvouvert.fcgi'\n        },\n        {\n          id: 'glace',\n          title: 'Carte de glace',\n          url: 'https://geoegl.msp.gouv.qc.ca/apis/ws/radarsat.fcgi',\n          showLegend: true\n        }\n      ]\n    },\n    depot: {\n      url: '/apis/depot'\n    },\n    importExport: {\n      url: 'https://geoegl.msp.gouv.qc.ca/apis/ogre'\n    },\n    language: {\n      prefix: './locale/'\n    },\n    interactiveTour: {\n      tourInMobile: true,\n      pathToConfigFile: './config/interactiveTour.json'\n    },\n    searchSources: {\n      nominatim: {\n        available: false\n      },\n      storedqueries: {\n        available: false\n      },\n      icherche: {\n        searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/icherche',\n        order: 2,\n        params: {\n          limit: '8'\n        }\n      },\n      coordinatesreverse: {\n        showInPointerSummary: true\n      },\n      icherchereverse: {\n        showInPointerSummary: true,\n        searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/terrapi',\n        order: 3,\n        enabled: true\n      },\n      ilayer: {\n        searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/icherche/layers',\n        order: 4,\n        params: {\n          limit: '5'\n        }\n      },\n      cadastre: {\n        enabled: false\n      }\n    },\n    projections: [\n      {\n        code: 'EPSG:32198',\n        alias: 'Quebec Lambert',\n        def:\n          '+proj=lcc +lat_1=60 +lat_2=46 +lat_0=44 +lon_0=-68.5 +x_0=0 +y_0=0 \\\n          +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs',\n        extent: [-799574, 45802, 891595.4, 1849567.5]\n      },\n      {\n        code: 'EPSG:3798',\n        alias: 'MTQ Lambert',\n        def:\n          '+proj=lcc +lat_1=50 +lat_2=46 +lat_0=44 +lon_0=-70 +x_0=800000 +y_0=0 \\\n          +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs',\n        extent: [31796.5834, 158846.2231, 1813323.4284, 2141241.0978]\n      }\n    ],\n    searchOverlayStyle: {\n      base: {\n        markerColor: '#5ed0fb',          // marker fill\n        markerOpacity: 0.8,              // marker opacity not applied if a rgba markerColor is provided\n        markerOutlineColor: '#a7e7ff',   // marker contour\n        fillColor: '#5ed0fb',            // poly\n        fillOpacity: 0.2,                // poly fill opacity not applied if a rgba fillColor is provided\n        strokeColor: '#5ed0fb',          // line and poly\n        strokeOpacity: 0.7,              // line and poly not applied if a rgba strokeColor is provided\n        strokeWidth: 2                   // line and poly\n      },\n      focus: {\n        markerColor: '#5ed0fb',          // marker fill\n        markerOpacity: 1,                // marker opacity not applied if a rgba markerColor is provided\n        markerOutlineColor: '#DFF7FF',   // marker contour\n        fillColor: '#5ed0fb',            // poly\n        fillOpacity: 0.3,                // poly fill opacity not applied if a rgba fillColor is provided\n        strokeColor: '#DFF7FF',          // line and poly\n        strokeOpacity: 1,                // line and poly not applied if a rgba strokeColor is provided\n        strokeWidth: 2                   // line and poly\n      },\n      selection: {\n        markerColor: '#00a1de',           // marker fill\n        markerOpacity: 1,                 // marker opacity not applied if a rgba markerColor is provided\n        markerOutlineColor: '#ffffff',    // marker contour\n        fillColor: '#00a1de',             // poly\n        fillOpacity: 0.3,                 // poly fill opacity not applied if a rgba fillColor is provided\n        strokeColor: '#00A1DE',           // line and poly\n        strokeOpacity: 1,                 // line and poly not applied if a rgba strokeColor is provided\n        strokeWidth: 2                    // line and poly\n      }\n    },\n    queryOverlayStyle: {\n      base: {\n        markerColor: '#5ed0fb',          // marker fill\n        markerOpacity: 0.8,              // marker opacity not applied if a rgba markerColor is provided\n        markerOutlineColor: '#a7e7ff',   // marker contour\n        fillColor: '#5ed0fb',            // poly\n        fillOpacity: 0.2,                // poly fill opacity not applied if a rgba fillColor is provided\n        strokeColor: '#5ed0fb',          // line and poly\n        strokeOpacity: 0.7,              // line and poly not applied if a rgba strokeColor is provided\n        strokeWidth: 2                   // line and poly\n      },\n      focus: {\n        markerColor: '#5ed0fb',          // marker fill\n        markerOpacity: 1,                // marker opacity not applied if a rgba markerColor is provided\n        markerOutlineColor: '#DFF7FF',   // marker contour\n        fillColor: '#5ed0fb',            // poly\n        fillOpacity: 0.3,                // poly fill opacity not applied if a rgba fillColor is provided\n        strokeColor: '#DFF7FF',          // line and poly\n        strokeOpacity: 1,                // line and poly not applied if a rgba strokeColor is provided\n        strokeWidth: 2                   // line and poly\n      },\n      selection: {\n        markerColor: '#00a1de',           // marker fill\n        markerOpacity: 1,                 // marker opacity not applied if a rgba markerColor is provided\n        markerOutlineColor: '#ffffff',    // marker contour\n        fillColor: '#00a1de',             // poly\n        fillOpacity: 0.3,                 // poly fill opacity not applied if a rgba fillColor is provided\n        strokeColor: '#00A1DE',           // line and poly\n        strokeOpacity: 1,                 // line and poly not applied if a rgba strokeColor is provided\n        strokeWidth: 2                    // line and poly\n      }\n    }\n  }\n};\n","<ng-container *ngFor=\"let element of mapOverlay; let i = index\">\n  <div class=\"mapOverlayDefault\" [ngClass]=\"element.cssClass\"\n       [style.position]=\"element.fixed ? 'fixed' : 'absolute'\"\n       [style.marginLeft]=\"element.marginLeft\"\n       [style.marginRight]=\"element.marginRight\"\n       [style.marginTop]=\"element.marginTop\"\n       [style.marginBottom]=\"element.marginBottom\"\n       [style.fontSize]=\"element.fontSize\">\n    <a *ngIf=\"element.link; else templateNoLink\"\n        target=\"_blank\" [href]='element.link'>\n        {{ element.text }}\n        <ng-container *ngIf=\"element.imgSrc\">\n          <img [src]=\"element.imgSrc\"\n               [alt]=\"element.alt\"\n               [ngStyle]=\"{ 'width': element.imgSize }\">\n        </ng-container>\n    </a>\n\n\n  <ng-template #templateNoLink>\n    {{ element.text }}\n    <ng-container *ngIf=\"element.imgSrc\">\n      <img [src]=\"element.imgSrc\" [alt]=\"element.alt\" [ngStyle]=\"{ 'width': element.imgSize }\">\n    </ng-container>\n\n  </ng-template>\n  </div>\n</ng-container>\n","import { Component, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Context, ContextService } from '@igo2/context';\nimport { MediaService, ConfigService } from '@igo2/core';\nimport { MapOverlay } from './map-overlay.interface';\n\n@Component({\n  selector: 'app-map-overlay',\n  templateUrl: './map-overlay.component.html',\n  styleUrls: ['./map-overlay.component.scss']\n})\n\nexport class MapOverlayComponent implements AfterViewInit, OnDestroy {\n  public mapOverlay: MapOverlay[] = [];\n  private context$$: Subscription;\n  private media$$: Subscription;\n  private context: Context;\n\n  constructor(\n    private contextService: ContextService,\n    private mediaService: MediaService,\n    private configService: ConfigService\n  ) { }\n\n  ngAfterViewInit() {\n    this.context$$ = this.contextService.context$.subscribe(context => {\n        this.handleContextChange(context);\n        this.context = context;\n        }\n    );\n    this.media$$ = this.mediaService.media$.subscribe(media =>\n      this.handleContextChange(this.context)\n    );\n  }\n\n  ngOnDestroy() {\n    this.context$$.unsubscribe();\n    this.media$$.unsubscribe();\n  }\n\n  private handleContextChange(context: Context) {\n    let mapOverlay = [];\n    if (context !== undefined) {\n      this.mapOverlay = [];\n\n      if (context['mapOverlay']) {\n        mapOverlay = context['mapOverlay'];\n      } else if (this.configService.getConfig('mapOverlay')) {\n        mapOverlay = this.configService.getConfig('mapOverlay');\n      }\n      for (const overlay of mapOverlay) {\n\n        // If no media define use default to desktop, display only if current media is on context definition\n        if ((!overlay.media && this.mediaService.getMedia() === 'desktop') ||\n        (overlay.media && overlay.media.includes(this.mediaService.getMedia()))) {\n          this.mapOverlay.push(overlay);\n        }\n      }\n    }\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { MapOverlayComponent } from './map-overlay.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [MapOverlayComponent],\n  declarations: [MapOverlayComponent]\n})\nexport class MapOverlayModule {}\n","<div>\n  <div class=\"app-expansion-panel-trigger-container\">\n    <button mat-icon-button (click)=\"onToggleClick()\" \n    [matTooltip]=\"(!expanded ? 'workspace.open' : 'workspace.close') | translate\"\n    color=\"primary\">\n      <mat-icon *ngIf=\"!expanded\" svgIcon=\"launch\"></mat-icon>\n      <mat-icon *ngIf=\"expanded\" style=\"transform: rotate(180deg)\" svgIcon=\"launch\"></mat-icon>\n    </button>\n  </div>\n\n  <div class=\"app-expansion-panel-content\">\n    <ng-content></ng-content>\n  </div>\n</div>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n@Component({\n  selector: 'app-expansion-panel-header',\n  templateUrl: './expansion-panel-header.component.html',\n  styleUrls: ['./expansion-panel-header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExpansionPanelHeaderComponent {\n  @Input()\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    if (value === this._expanded) {\n      return;\n    }\n\n    this._expanded = value;\n    this.expandedChange.emit(this._expanded);\n  }\n  private _expanded: boolean;\n\n  @Output() expandedChange = new EventEmitter<boolean>();\n\n  @HostBinding('class.app-expansion-panel-header-expanded')\n  get hasExpandedClass() {\n    return this.expanded;\n  }\n\n  constructor() {}\n\n  onToggleClick() {\n    this.expanded = !this.expanded;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { showContent } from './expansion-panel.animations';\n\n@Component({\n  selector: 'app-expansion-panel',\n  templateUrl: './expansion-panel.component.html',\n  styleUrls: ['./expansion-panel.component.scss'],\n  animations: [showContent()],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExpansionPanelComponent {\n  @Input()\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    if (value === this._expanded) {\n      return;\n    }\n\n    this._expanded = value;\n    this.expandedChange.emit(this._expanded);\n  }\n  private _expanded: boolean;\n\n  @Input() maximized: Boolean = false;\n\n  @Input()\n  get backdropShown(): boolean {\n    return this._backdropShown;\n  }\n  set backdropShown(value: boolean) {\n    this._backdropShown = value;\n  }\n  private _backdropShown: boolean;\n\n  @Output() expandedChange = new EventEmitter<boolean>();\n\n  @HostBinding('class.app-expansion-panel-expanded')\n  get hasExpandedClass() {\n    return this.expanded && !this.maximized;\n  }\n\n  @HostBinding('class.app-expansion-panel-expanded-maximized')\n  get hasExpandedFullClass() {\n    return this.expanded && this.maximized;\n  }\n\n  constructor() {}\n\n  onBackdropClick() {\n    this.expanded = false;\n    this.backdropShown = false;\n  }\n}\n","<div>\n\n  <div class=\"app-expansion-panel-container\">\n    <igo-backdrop\n      [shown]=\"backdropShown\"\n      (click)=\"onBackdropClick()\">\n    </igo-backdrop>\n\n    <app-expansion-panel-header [(expanded)]=\"expanded\">\n      <ng-content select=\"[expansionPanelHeader]\"></ng-content>\n    </app-expansion-panel-header>\n\n    <div\n      class=\"app-expansion-panel-content mat-elevation-z4\"\n      [@showContent]=\"expanded\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n\n</div>\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport function showContent(\n  duration = '150ms',\n  delay = '300ms',\n  easing = 'ease-in-out'\n): AnimationTriggerMetadata {\n  return trigger('showContent', [\n    state(\n      'true',\n      style({\n        opacity: 1,\n        display: 'block'\n      })\n    ),\n    state(\n      'false',\n      style({\n        opacity: 0,\n        display: 'none'\n      })\n    ),\n    transition('false => true', animate(`${duration} ${delay} ${easing}`)),\n    transition('true => false', animate('0ms'))\n  ]);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoBackdropModule } from '@igo2/common';\n\nimport { ExpansionPanelComponent } from './expansion-panel.component';\nimport { ExpansionPanelHeaderComponent } from './expansion-panel-header.component';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatListModule,\n    MatSelectModule,\n    MatTooltipModule,\n    IgoLanguageModule,\n    IgoBackdropModule\n  ],\n  exports: [ExpansionPanelComponent],\n  declarations: [ExpansionPanelComponent, ExpansionPanelHeaderComponent]\n})\nexport class AppExpansionPanelModule {}\n","<ng-template #toast>\n  <igo-panel\n    *ngIf=\"store.entities$ | async\"\n    [ngClass] = \"getClassPanel()\"\n    [title]=\"resultSelected$.value ? getTitle(resultSelected$.value) : ('toastPanel.title' | translate )\"\n    (click)=\"onToggleClick($event)\"\n    tabindex=\"0\"\n    (keydown)=\"handleKeyboardEvent($event)\">\n\n    <igo-actionbar\n      id=\"igo-actionbar\"\n      panelLeftButton\n      [store]=\"actionStore\"\n      [withIcon]=\"true\"\n      [icon]=\"icon\"\n      [withTitle]=\"actionbarMode === 'overlay'\"\n      [horizontal]=\"true\"\n      [mode]=\"actionbarMode\">\n    </igo-actionbar>\n\n    <button\n      *ngIf=\"resultSelected$.value\"\n      mat-icon-button\n      igoStopPropagation\n      panelLeftButton\n      [matTooltip]=\"((isSelectedResultOutOfView$ | async) ? 'toastPanel.zoomOnFeatureTooltipOutOfView' : 'toastPanel.zoomOnFeatureTooltip') | translate\"\n      matTooltipShowDelay=\"500\"\n      (click)=\"zoomTo()\">\n      <mat-icon\n      [matBadge]=\"(isSelectedResultOutOfView$ | async) ? '!' : ''\"\n      matBadgeColor=\"accent\"\n      matBadgeSize=\"small\"\n      [matBadgeHidden]=\"!(isSelectedResultOutOfView$ | async)\"     \n      svgIcon=\"magnify-plus-outline\"></mat-icon>\n    </button>\n\n    <button\n      *ngIf=\"resultSelected$.value\"\n      [disabled]=\"results[0].meta.id === resultSelected$.value.meta.id\"\n      mat-icon-button\n      igoStopPropagation\n      panelLeftButton\n      [matTooltip]=\"'toastPanel.previousFeatureTooltip' | translate\"\n      matTooltipShowDelay=\"500\"\n      (click)=\"previousResult()\">\n      <mat-icon svgIcon=\"chevron-left\"></mat-icon>\n    </button>\n\n    <button\n      *ngIf=\"resultSelected$.value\"\n      [disabled]=\"results[results.length-1].meta.id === resultSelected$.value.meta.id\"\n      mat-icon-button\n      igoStopPropagation\n      panelRightButton\n      [matTooltip]=\"'toastPanel.nextFeatureTooltip' | translate\"\n      matTooltipShowDelay=\"500\"\n      (click)=\"nextResult()\">\n      <mat-icon svgIcon=\"chevron-right\"></mat-icon>\n    </button>\n\n    <button\n     *ngIf = \"isDesktop()\"\n      mat-icon-button\n      igoStopPropagation\n      panelRightButton\n      (click)=\"resizeWindows()\"\n      [matTooltip]=\"((this.fullExtent$ | async) ? 'toastPanel.standardExtentTooltip' : 'toastPanel.fullExtentTooltip') | translate\"\n      matTooltipShowDelay=\"500\">\n      <mat-icon svgIcon={{iconResizeWindows}}></mat-icon>\n    </button>\n    <button\n      mat-icon-button\n      igoStopPropagation\n      panelRightButton\n      (click)=\"clear()\">\n      <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n\n    <div #content class=\"toast-content\">\n\n      <igo-feature-details\n        *ngIf=\"resultSelected$.value\"\n        [feature]=\"resultSelected$.value.data\"\n        (htmlDisplayEvent)=setHtmlDisplay($event)>\n      </igo-feature-details>\n\n      <igo-search-results\n        *ngIf=\"!resultSelected$.value\"\n        [map]=\"map\"\n        [store]=\"store\"\n        [showIcons]=\"true\"\n        [withZoomButton]=\"withZoomButton\"\n        (resultFocus)=\"focusResult($event)\"\n        (resultUnfocus)=\"unfocusResult($event, true)\"\n        (resultSelect)=\"selectResult($event)\">\n      </igo-search-results>\n    </div>\n  </igo-panel>\n</ng-template>\n\n<div *ngIf=\"isMobile(); else toast\"\nclass=\"swipe-fix\"\n(swipeleft)=\"swipe($event.type)\"\n(swiperight)=\"swipe($event.type)\"\n(swipeup)=\"swipe($event.type)\"\n(swipedown)=\"swipe($event.type)\">\n\n<ng-template [ngTemplateOutlet]=\"toast\"></ng-template>\n</div>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  ChangeDetectionStrategy,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { BehaviorSubject, Observable, combineLatest, Subscription } from 'rxjs';\nimport { debounceTime, map, skipWhile, tap } from 'rxjs/operators';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\nimport olFeature from 'ol/Feature';\nimport olPoint from 'ol/geom/Point';\n\nimport {\n  getEntityTitle,\n  EntityStore,\n  ActionStore,\n  Action,\n  ActionbarMode\n} from '@igo2/common';\nimport {\n  Feature,\n  SearchResult,\n  IgoMap,\n  FeatureMotion,\n  moveToOlFeatures,\n  featureToOl,\n  featuresAreTooDeepInView,\n  featureFromOl,\n  getCommonVectorStyle,\n  getCommonVectorSelectedStyle,\n  featuresAreOutOfView,\n  computeOlFeaturesExtent\n} from '@igo2/geo';\nimport {\n  Media,\n  MediaService,\n  LanguageService,\n  StorageService,\n  StorageScope,\n  StorageServiceEvent\n} from '@igo2/core';\nimport { QueryState, StorageState } from '@igo2/integration';\n\n@Component({\n  selector: 'app-toast-panel',\n  templateUrl: './toast-panel.component.html',\n  styleUrls: ['./toast-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToastPanelComponent implements OnInit, OnDestroy {\n  static SWIPE_ACTION = {\n    RIGHT: 'swiperight',\n    LEFT: 'swipeleft',\n    UP: 'swipeup',\n    DOWN: 'swipedown'\n  };\n\n  get storageService(): StorageService {\n    return this.storageState.storageService;\n  }\n\n  @Input()\n  get map(): IgoMap {\n    return this._map;\n  }\n  set map(value: IgoMap) {\n    this._map = value;\n  }\n  private _map: IgoMap;\n\n  @Input()\n  get store(): EntityStore<SearchResult<Feature>> {\n    return this._store;\n  }\n  set store(value: EntityStore<SearchResult<Feature>>) {\n    this._store = value;\n    this.store.entities$.subscribe((_entities) => {\n      this.unselectResult();\n    });\n  }\n  private _store: EntityStore<SearchResult<Feature>>;\n\n  @Input()\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    if (value !== !this._opened) {\n      return;\n    }\n    this._opened = value;\n    this.storageService.set('toastOpened', value, StorageScope.SESSION);\n    this.openedChange.emit(value);\n  }\n  private _opened = true;\n\n  @Input() hasFeatureEmphasisOnSelection: Boolean = false;\n\n  get zoomAuto(): boolean {\n    return this._zoomAuto;\n  }\n  set zoomAuto(value) {\n    if (value !== !this._zoomAuto) {\n      return;\n    }\n    this._zoomAuto = value;\n    this.zoomAuto$.next(value);\n    this.storageService.set('zoomAuto', value);\n  }\n  private _zoomAuto = false;\n\n  // To allow the toast to use much larger extent on the map\n  get fullExtent(): boolean {\n    return this._fullExtent;\n  }\n  set fullExtent(value) {\n    if (value !== !this._fullExtent) {\n      return;\n    }\n    this._fullExtent = value;\n    this.fullExtent$.next(value);\n    this.fullExtentEvent.emit(value);\n    this.storageService.set('fullExtent', value);\n  }\n  private _fullExtent = false;\n\n  public fullExtent$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.fullExtent\n  );\n  public isHtmlDisplay = false;\n  public iconResizeWindows = '';\n\n  public icon = 'menu';\n\n  public actionStore = new ActionStore([]);\n  public actionbarMode = ActionbarMode.Overlay;\n\n  private multiple$ = new BehaviorSubject(false);\n  private isResultSelected$ = new BehaviorSubject(false);\n  public isSelectedResultOutOfView$ = new BehaviorSubject(false);\n  private isSelectedResultOutOfView$$: Subscription;\n  private storageChange$$: Subscription;\n  private initialized = true;\n\n  private format = new olFormatGeoJSON();\n\n  private resultOrResolution$$: Subscription;\n  private focusedResult$: BehaviorSubject<\n    SearchResult<Feature>\n  > = new BehaviorSubject(undefined);\n  private abstractFocusedOrSelectedResult: Feature;\n\n  public withZoomButton = true;\n  zoomAuto$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  @Output() openedChange = new EventEmitter<boolean>();\n\n  @Output() fullExtentEvent = new EventEmitter<boolean>();\n  @Output() windowHtmlDisplayEvent = new EventEmitter<boolean>();\n\n  resultSelected$ = new BehaviorSubject<SearchResult<Feature>>(undefined);\n\n  // @HostBinding('class.app-toast-panel-opened')\n  // get hasOpenedClass() {\n  //   return this.opened;\n  // }\n\n  // @HostBinding('class.app-full-toast-panel-collapsed')\n  // get hasFullCollapsedClass() {\n  //   return !this.opened && this.fullExtent;\n  // }\n  getClassPanel() {\n    return {\n      'app-toast-panel-opened' : this.opened && !this.fullExtent && !this.isHtmlDisplay,\n      'app-full-toast-panel-opened' :\n        this.opened && this.fullExtent &&\n        !this.isHtmlDisplay,\n\n      'app-toast-panel-html' :\n        this.opened &&\n        !this.fullExtent &&\n        this.resultSelected$.value &&\n        this.isHtmlDisplay,\n\n      'app-toast-panel-html-large' :\n        this.opened &&\n        this.fullExtent &&\n        this.resultSelected$.value &&\n        this.isHtmlDisplay,\n\n      'app-toast-panel-collapsed': !this.opened && !this.fullExtent && !this.isHtmlDisplay,\n      'app-full-toast-panel-collapsed' : !this.opened && this.fullExtent && !this.isHtmlDisplay,\n      'app-toast-panel-html-collapsed' : !this.opened && this.isHtmlDisplay\n    };\n  }\n\n\n  @HostBinding('style.visibility')\n  get displayStyle() {\n    if (this.results.length) {\n      if (this.results.length === 1 && this.initialized) {\n        this.selectResult(this.results[0]);\n      }\n      return 'visible';\n    }\n    return 'hidden';\n  }\n\n  // @HostBinding('class.app-full-toast-panel-opened')\n  // get hasFullOpenedClass() {\n  //   return this.opened && this.fullExtent;\n  // }\n\n  @HostListener('document:keydown.escape', ['$event']) onEscapeHandler(\n    event: KeyboardEvent\n  ) {\n    this.clear();\n  }\n\n  @HostListener('document:keydown.backspace', ['$event']) onBackHandler(\n    event: KeyboardEvent\n  ) {\n    this.unselectResult();\n  }\n\n  @HostListener('document:keydown.z', ['$event']) onZoomHandler(\n    event: KeyboardEvent\n  ) {\n    if (this.isResultSelected$.getValue() === true) {\n      const localOlFeature = this.format.readFeature(\n        this.resultSelected$.getValue().data,\n        {\n          dataProjection: this.resultSelected$.getValue().data.projection,\n          featureProjection: this.map.projection\n        }\n      );\n      moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Default);\n    }\n  }\n\n  get results(): SearchResult<Feature>[] {\n    // return this.store.view.filter((e) => e.meta.dataType === FEATURE).all();\n    return this.store.all();\n  }\n\n  get multiple(): Observable<boolean> {\n    this.results.length\n      ? this.multiple$.next(true)\n      : this.multiple$.next(false);\n    return this.multiple$;\n  }\n\n  constructor(\n    public mediaService: MediaService,\n    public languageService: LanguageService,\n    private storageState: StorageState,\n    private queryState: QueryState\n  ) {\n    this.opened = this.storageService.get('toastOpened') as boolean;\n    this.zoomAuto = this.storageService.get('zoomAuto') as boolean;\n    this.fullExtent = this.storageService.get('fullExtent') as boolean;\n    this.setResizeWindowIcon();\n  }\n\n  private monitorResultOutOfView() {\n    this.isSelectedResultOutOfView$$ = combineLatest([\n      this.map.viewController.state$,\n      this.resultSelected$\n    ])\n      .pipe(debounceTime(100))\n      .subscribe((bunch) => {\n        const selectedResult = bunch[1];\n        if (!selectedResult) {\n          this.isSelectedResultOutOfView$.next(false);\n          return;\n        }\n        const selectedOlFeature = featureToOl(selectedResult.data, this.map.projection);\n        const selectedOlFeatureExtent = computeOlFeaturesExtent(this.map, [selectedOlFeature]);\n        this.isSelectedResultOutOfView$.next(featuresAreOutOfView(this.map, selectedOlFeatureExtent));\n      });\n  }\n\n\n  ngOnInit() {\n    this.store.entities$.subscribe(() => {\n      this.initialized = true;\n    });\n    this.monitorResultOutOfView();\n\n    let latestResult;\n    let trigger;\n    if (this.hasFeatureEmphasisOnSelection) {\n      this.resultOrResolution$$ = combineLatest([\n        this.focusedResult$.pipe(\n          tap((res) => {\n            latestResult = res;\n            trigger = 'focused';\n          })\n        ),\n        this.resultSelected$.pipe(\n          tap((res) => {\n            latestResult = res;\n            trigger = 'selected';\n          })\n        ),\n        this.map.viewController.resolution$,\n        this.store.entities$\n      ]).subscribe(() => this.buildResultEmphasis(latestResult, trigger));\n    }\n\n    this.storageChange$$ = this.storageService.storageChange$\n      .pipe(skipWhile((storageChange: StorageServiceEvent) => storageChange.key !== 'zoomAuto'))\n      .subscribe((change) => {\n        this.zoomAuto = change.currentValue;\n      });\n\n    this.actionStore.load([\n      {\n        id: 'list',\n        title: this.languageService.translate.instant('toastPanel.backToList'),\n        icon: 'format-list-bulleted-square',\n        tooltip: this.languageService.translate.instant(\n          'toastPanel.listButton'\n        ),\n        display: () => {\n          return this.isResultSelected$;\n        },\n        handler: () => {\n          this.unselectResult();\n        }\n      },\n      {\n        id: 'zoomFeature',\n        title: this.languageService.translate.instant(\n          'toastPanel.zoomOnFeature'\n        ),\n        icon: 'magnify-plus-outline',\n        tooltip: this.languageService.translate.instant(\n          'toastPanel.zoomOnFeatureTooltip'\n        ),\n        display: () => {\n          return this.isResultSelected$;\n        },\n        handler: () => {\n          const localOlFeature = this.format.readFeature(\n            this.resultSelected$.getValue().data,\n            {\n              dataProjection: this.resultSelected$.getValue().data.projection,\n              featureProjection: this.map.projection\n            }\n          );\n          moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Zoom);\n        }\n      },\n      {\n        id: 'zoomResults',\n        title: this.languageService.translate.instant(\n          'toastPanel.zoomOnFeatures'\n        ),\n        tooltip: this.languageService.translate.instant(\n          'toastPanel.zoomOnFeaturesTooltip'\n        ),\n        icon: 'magnify-scan',\n        availability: () => {\n          return this.multiple;\n        },\n        handler: () => {\n          const olFeatures = [];\n          for (const result of this.store.all()) {\n            const localOlFeature = this.format.readFeature(result.data, {\n              dataProjection: result.data.projection,\n              featureProjection: this.map.projection\n            });\n            olFeatures.push(localOlFeature);\n          }\n          moveToOlFeatures(this.map, olFeatures, FeatureMotion.Zoom);\n        }\n      },\n      {\n        id: 'zoomAuto',\n        title: this.languageService.translate.instant('toastPanel.zoomAuto'),\n        tooltip: this.languageService.translate.instant(\n          'toastPanel.zoomAutoTooltip'\n        ),\n        checkbox: true,\n        checkCondition: this.zoomAuto$,\n        handler: () => {\n          this.zoomAuto = !this.zoomAuto;\n          if (this.zoomAuto && this.isResultSelected$.value === true) {\n            this.selectResult(this.resultSelected$.getValue());\n          }\n        }\n      },\n      {\n        id: 'fullExtent',\n        title: this.languageService.translate.instant('toastPanel.fullExtent'),\n        tooltip: this.languageService.translate.instant(\n          'toastPanel.fullExtentTooltip'\n        ),\n        icon: 'arrow-expand',\n        display: () => {\n          return this.fullExtent$.pipe(map((v) => !v  && !this.isDesktop()));\n        },\n        handler: () => {\n          this.fullExtent = true;\n        }\n      },\n      {\n        id: 'standardExtent',\n        title: this.languageService.translate.instant(\n          'toastPanel.standardExtent'\n        ),\n        tooltip: this.languageService.translate.instant(\n          'toastPanel.standardExtentTooltip'\n        ),\n        icon: 'arrow-collapse',\n        display: () => {\n          return this.fullExtent$.pipe(map((v) => v && !this.isDesktop()));\n        },\n        handler: () => {\n          this.fullExtent = false;\n        }\n      }\n    ]);\n  }\n\n  ngOnDestroy(): void {\n    if (this.resultOrResolution$$) {\n      this.resultOrResolution$$.unsubscribe();\n    }\n    if (this.isSelectedResultOutOfView$$) {\n      this.isSelectedResultOutOfView$$.unsubscribe();\n    }\n    if (this.storageChange$$) {\n      this.storageChange$$.unsubscribe();\n    }\n  }\n\n  private buildResultEmphasis(\n    result: SearchResult<Feature>,\n    trigger: 'selected' | 'focused' | undefined\n  ) {\n    this.clearFeatureEmphasis();\n    if (!result || (trigger === 'selected' && this.zoomAuto)) {\n      return;\n    }\n    const myOlFeature = featureToOl(result.data, this.map.projection);\n    const olGeometry = myOlFeature.getGeometry();\n    if (featuresAreTooDeepInView(this.map, olGeometry.getExtent() as [number, number, number, number], 0.0025)) {\n      const extent = olGeometry.getExtent();\n      const x = extent[0] + (extent[2] - extent[0]) / 2;\n      const y = extent[1] + (extent[3] - extent[1]) / 2;\n      const feature1 = new olFeature({\n        name: 'abstractFocusedOrSelectedResult',\n        geometry: new olPoint([x, y])\n      });\n      this.abstractFocusedOrSelectedResult = featureFromOl(\n        feature1,\n        this.map.projection\n      );\n      this.abstractFocusedOrSelectedResult.meta.style =\n        getCommonVectorSelectedStyle(\n          Object.assign({},\n            { feature: this.abstractFocusedOrSelectedResult },\n            trigger === 'selected' ?\n              this.queryState.queryOverlayStyleSelection :\n              this.queryState.queryOverlayStyleFocus));\n      this.abstractFocusedOrSelectedResult.meta.style.setZIndex(2000);\n      this.map.queryResultsOverlay.addFeature(\n        this.abstractFocusedOrSelectedResult,\n        FeatureMotion.None\n      );\n    }\n  }\n\n  private clearFeatureEmphasis() {\n    if (this.abstractFocusedOrSelectedResult) {\n      this.map.queryResultsOverlay.removeFeature(this.abstractFocusedOrSelectedResult);\n      this.abstractFocusedOrSelectedResult = undefined;\n    }\n  }\n\n  getTitle(result: SearchResult) {\n    return getEntityTitle(result);\n  }\n\n  focusResult(result: SearchResult<Feature>) {\n    this.focusedResult$.next(result);\n    this.map.queryResultsOverlay.removeFeature(result.data);\n\n    result.data.meta.style = getCommonVectorSelectedStyle(\n      Object.assign({},\n        { feature: result.data },\n        this.queryState.queryOverlayStyleFocus));\n    result.data.meta.style.setZIndex(2000);\n    this.map.queryResultsOverlay.addFeature(result.data, FeatureMotion.None);\n  }\n\n  unfocusResult(result: SearchResult<Feature>, force?) {\n    this.focusedResult$.next(undefined);\n    if (!force && this.store.state.get(result).focused) {\n      return;\n    }\n    this.map.queryResultsOverlay.removeFeature(result.data);\n\n    result.data.meta.style = getCommonVectorStyle(\n      Object.assign({},\n        { feature: result.data },\n        this.queryState.queryOverlayStyle));\n    result.data.meta.style.setZIndex(undefined);\n    this.map.queryResultsOverlay.addFeature(result.data, FeatureMotion.None);\n  }\n\n  selectResult(result: SearchResult<Feature>) {\n    this.store.state.update(\n      result,\n      {\n        focused: true,\n        selected: true\n      },\n      true\n    );\n    this.resultSelected$.next(result);\n    if (result.data.properties && result.data.properties.target === 'iframe') {\n      this.setHtmlDisplay(true);\n    } else {\n      this.setHtmlDisplay(false);\n    }\n\n    const features = [];\n    for (const feature of this.store.all()) {\n      if (feature.meta.id === result.meta.id) {\n        feature.data.meta.style = getCommonVectorSelectedStyle(\n          Object.assign({}, { feature: feature.data },\n            this.queryState.queryOverlayStyleSelection));\n        feature.data.meta.style.setZIndex(2000);\n      } else {\n        feature.data.meta.style = getCommonVectorStyle(\n          Object.assign({},\n            { feature: feature.data },\n            this.queryState.queryOverlayStyle));\n      }\n      features.push(feature.data);\n    }\n    this.map.queryResultsOverlay.removeFeatures(features);\n    this.map.queryResultsOverlay.addFeatures(features, FeatureMotion.None);\n\n    if (this.zoomAuto) {\n      const localOlFeature = this.format.readFeature(\n        this.resultSelected$.getValue().data,\n        {\n          dataProjection: this.resultSelected$.getValue().data.projection,\n          featureProjection: this.map.projection\n        }\n      );\n      moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Default);\n    }\n\n    this.isResultSelected$.next(true);\n    this.initialized = false;\n  }\n\n  unselectResult() {\n    this.resultSelected$.next(undefined);\n    this.isResultSelected$.next(false);\n    this.setHtmlDisplay(false);\n    this.store.state.clear();\n\n    const features = [];\n    for (const feature of this.store.all()) {\n      feature.data.meta.style = getCommonVectorStyle(\n        Object.assign({},\n          { feature: feature.data },\n          this.queryState.queryOverlayStyle));\n      features.push(feature.data);\n    }\n    this.map.queryResultsOverlay.setFeatures(features, FeatureMotion.None, 'map');\n  }\n\n  clear() {\n    this.clearFeatureEmphasis();\n    this.map.queryResultsOverlay.clear();\n    this.store.clear();\n    this.unselectResult();\n    this.setHtmlDisplay(false);\n  }\n\n  isMobile(): boolean {\n    return this.mediaService.getMedia() === Media.Mobile;\n  }\n  isDesktop(): boolean {\n    return this.mediaService.isDesktop();\n  }\n\n  handleKeyboardEvent(event) {\n    event.preventDefault();\n    if (event.keyCode === 37) {\n      this.previousResult();\n    } else if (event.keyCode === 39) {\n      this.nextResult();\n    }\n  }\n\n  previousResult() {\n    if (!this.resultSelected$.value) {\n      return;\n    }\n    let i = this.results.indexOf(this.resultSelected$.value);\n    const previousResult = this.results[--i];\n    if (previousResult) {\n      this.selectResult(previousResult);\n    }\n  }\n\n  nextResult() {\n    if (!this.resultSelected$.value) {\n      return;\n    }\n    let i = this.results.indexOf(this.resultSelected$.value);\n    const nextResult = this.results[++i];\n    if (nextResult) {\n      this.selectResult(nextResult);\n    }\n  }\n\n  zoomTo() {\n    const localOlFeature = this.format.readFeature(\n      this.resultSelected$.getValue().data,\n      {\n        dataProjection: this.resultSelected$.getValue().data.projection,\n        featureProjection: this.map.projection\n      }\n    );\n    moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Zoom);\n  }\n\n  swipe(action: string) {\n    if (action === ToastPanelComponent.SWIPE_ACTION.RIGHT) {\n      this.previousResult();\n    } else if (action === ToastPanelComponent.SWIPE_ACTION.LEFT) {\n      this.nextResult();\n    } else if (action === ToastPanelComponent.SWIPE_ACTION.UP) {\n      this.opened = true;\n    } else if (action === ToastPanelComponent.SWIPE_ACTION.DOWN) {\n      this.opened = false;\n    }\n  }\n\n  onToggleClick(e: MouseEvent) {\n    if ((e.target as any).className !== 'igo-panel-title') {\n      return;\n    }\n    this.opened = !this.opened;\n  }\n\n  /**\n   * Invoke the action handler\n   * @internal\n   */\n  onTriggerAction(action: Action) {\n    const args = action.args || [];\n    action.handler(...args);\n  }\n\n  setHtmlDisplay(value: boolean) {\n    if (value === true) {\n      this.isHtmlDisplay = true;\n      this.windowHtmlDisplayEvent.emit(true);\n    } else {\n      this.isHtmlDisplay = false;\n      this.windowHtmlDisplayEvent.emit(false);\n    }\n  }\n\n  isHtmlAndDesktop(): boolean {\n    if (this.isHtmlDisplay && this.isDesktop()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  setResizeWindowIcon() {\n    if (this.fullExtent) {\n      this.iconResizeWindows = 'arrow-collapse';\n      // this.iconResizeWindows = 'vector-arrange-below';\n    } else {\n      this.iconResizeWindows = 'arrow-expand';\n      // this.iconResizeWindows = 'crop-square';\n    }\n  }\n\n  resizeWindows() {\n    this.storageService.set('fullExtent', !this.fullExtent);\n    if (this.fullExtent) {\n        this.reduceWindow();\n    } else {\n        this.enlargeWindows();\n      }\n  }\n\n  reduceWindow() {\n    this.fullExtent = false;\n    this.setResizeWindowIcon();\n  }\n\n  enlargeWindows() {\n    this.fullExtent = true;\n    this.setResizeWindowIcon();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoPanelModule, IgoStopPropagationModule, IgoActionModule } from '@igo2/common';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoFeatureModule, IgoSearchResultsModule } from '@igo2/geo';\n\nimport { ToastPanelComponent } from './toast-panel.component';\nimport { MatBadgeModule } from '@angular/material/badge';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatBadgeModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatMenuModule,\n    IgoLanguageModule,\n    IgoPanelModule,\n    IgoStopPropagationModule,\n    IgoActionModule,\n    IgoFeatureModule,\n    IgoSearchResultsModule\n  ],\n  exports: [ToastPanelComponent],\n  declarations: [ToastPanelComponent]\n})\nexport class AppToastPanelModule {}\n","<mat-sidenav\n  mode=\"side\"\n  [autoFocus]=\"false\"\n  [(opened)]=\"opened\">\n\n  <div class=\"app-sidenav-content\">\n\n      <div #content class=\"app-content\" [ngClass]=\"{toolActivated: toolbox.activeTool$ | async}\">\n\n        <button *ngIf=\"toolbox.activeTool$ | async\"\n          id=\"homeButton\"\n          mat-icon-button\n          tooltip-position=\"below\"\n          matTooltipShowDelay=\"500\"\n          [matTooltip]=\"'igo.context.sidenav.mainMenu' | translate\"\n          (click)=\"onUnselectButtonClick()\">\n          <mat-icon svgIcon=\"home\"></mat-icon>\n        </button>\n\n        <igo-panel [title]=\"title$ | async | translate\">\n          <button *ngIf=\"toolbox.activeTool$ | async\"\n            mat-icon-button\n            panelLeftButton\n            tooltip-position=\"below\"\n            matTooltipShowDelay=\"500\"\n            [matTooltip]=\"'igo.context.sidenav.goBack' | translate\"\n            (click)=\"onPreviousButtonClick()\">\n            <mat-icon svgIcon=\"arrow-left\"></mat-icon>\n          </button>\n\n          <igo-interactive-tour\n            panelRightButton\n            styleButton = 'icon'>\n          </igo-interactive-tour>\n\n          <!-- <button *ngIf=\"toolbox.activeTool$ | async\"\n            mat-icon-button\n            panelRightButton\n            tooltip-position=\"below\"\n            matTooltipShowDelay=\"500\"\n            [matTooltip]=\"'igo.context.sidenav.mainMenu' | translate\"\n            (click)=\"onUnselectButtonClick()\">\n            <mat-icon svgIcon=\"close\"></mat-icon>\n          </button> -->\n\n          <igo-toolbox\n            class=\"igo-toolbox\"\n            color=\"primary\"\n            [animate]=\"true\"\n            [toolbox]=\"toolbox\">\n          </igo-toolbox>\n\n        </igo-panel>\n    </div>\n  </div>\n</mat-sidenav>\n","import {\n  Component,\n  Input,\n  Output,\n  OnInit,\n  OnDestroy,\n  EventEmitter,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { Tool, Toolbox } from '@igo2/common';\nimport { IgoMap } from '@igo2/geo';\nimport { ToolState, CatalogState } from '@igo2/integration';\nimport { ConfigService } from '@igo2/core';\n\n@Component({\n  selector: 'app-sidenav',\n  templateUrl: './sidenav.component.html',\n  styleUrls: ['./sidenav.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SidenavComponent implements OnInit, OnDestroy {\n  title$: BehaviorSubject<string> = new BehaviorSubject<string>(undefined);\n\n  private activeTool$$: Subscription;\n\n  @Input()\n  get map(): IgoMap {\n    return this._map;\n  }\n  set map(value: IgoMap) {\n    this._map = value;\n  }\n  private _map: IgoMap;\n\n  @Input()\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    if (value === this._opened) {\n      return;\n    }\n\n    this._opened = value;\n    this.openedChange.emit(this._opened);\n  }\n  private _opened: boolean;\n\n  @Output() openedChange = new EventEmitter<boolean>();\n  @Output() toolChange = new EventEmitter<Tool>();\n\n  get toolbox(): Toolbox {\n    return this.toolState.toolbox;\n  }\n\n  constructor(\n    private toolState: ToolState,\n    private configService: ConfigService,\n    private catalogState: CatalogState) {}\n\n  ngOnInit() {\n    this.activeTool$$ = this.toolbox.activeTool$.subscribe((tool: Tool) => {\n      const sidenavTitle = this.configService.getConfig('sidenavTitle') || 'IGO';\n      if (tool) {\n        if (tool.name === 'catalogBrowser') {\n          for (const catalog of this.catalogState.catalogStore.all()) {\n            if (this.catalogState.catalogStore.state.get(catalog).selected === true) {\n              this.title$.next(catalog.title);\n            }\n          }\n        } else if (tool.name === 'activeTimeFilter' || tool.name === 'activeOgcFilter') {\n          for (const layer of this.map.layers) {\n            if (layer.options.active === true) {\n              this.title$.next(layer.title);\n            }\n          }\n        } else {\n          this.title$.next(tool.title);\n        }\n      } else {\n        this.title$.next(sidenavTitle);\n      }\n      this.toolChange.emit(tool);\n    });\n  }\n\n  ngOnDestroy() {\n    this.activeTool$$.unsubscribe();\n  }\n\n  onPreviousButtonClick() {\n    this.toolbox.activatePreviousTool();\n  }\n\n  onUnselectButtonClick() {\n    this.toolbox.deactivateTool();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { IgoLanguageModule } from '@igo2/core';\nimport {\n  IgoPanelModule,\n  IgoFlexibleModule,\n  IgoToolModule,\n  IgoInteractiveTourModule\n} from '@igo2/common';\nimport { IgoFeatureModule } from '@igo2/geo';\nimport { IgoContextManagerModule } from '@igo2/context';\n\nimport { SidenavComponent } from './sidenav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatTooltipModule,\n    IgoLanguageModule,\n    IgoPanelModule,\n    IgoFlexibleModule,\n    IgoContextManagerModule,\n    IgoToolModule,\n    IgoFeatureModule,\n    IgoInteractiveTourModule\n  ],\n  exports: [SidenavComponent],\n  declarations: [SidenavComponent]\n})\nexport class AppSidenavModule {}\n","import { Injectable } from '@angular/core';\n\nimport { ConfigService, StorageService } from '@igo2/core';\nimport { MatDialogConfig } from '@angular/material/dialog';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WelcomeWindowService {\n  nbVisit: number;\n  showAgain: boolean;\n  igoVersionDifferentFromStorage = false;\n\n  constructor(\n    private configService: ConfigService,\n    private storageService: StorageService\n  ) {\n    this.igoVersionDifferentFromStorage = this.isVersionDifferentFromStorage();\n    this.setStorageConfig();\n  }\n\n  setStorageConfig() {\n    this.nbVisit = Number(this.storageService.get('welcomeWindow_nbVisit'));\n    if (!this.nbVisit) {\n      this.nbVisit = 0;\n    }\n\n    this.storageService.set('welcomeWindow_nbVisit', (this.nbVisit += 1));\n    this.storageService.set(\n      'version',\n      this.configService.getConfig('version.lib')\n    );\n  }\n\n  isVersionDifferentFromStorage(): boolean {\n    if (\n      this.storageService.get('version') &&\n      this.storageService.get('version') !==\n        this.configService.getConfig('version.lib')\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  hasWelcomeWindow(): boolean {\n    if (\n      this.storageService.get('welcomeWindow_showAgain') === false ||\n      this.storageService.get('welcomeWindow_showAgain') === 'false'\n    ) {\n      if (\n        this.nbVisit >=\n        this.configService.getConfig('welcomeWindow.nbVisitToShowAgain')\n      ) {\n        this.storageService.set('welcomeWindow_nbVisit', 0);\n        this.storageService.remove('welcomeWindow_showAgain');\n        return true;\n      } else if (\n        this.configService.getConfig('welcomeWindow.showAgainOnNewIGOVersion')\n      ) {\n        if (this.igoVersionDifferentFromStorage) {\n          this.storageService.set('welcomeWindow_nbVisit', 0);\n          this.storageService.remove('welcomeWindow_showAgain');\n          return true;\n        }\n      }\n      return false;\n    }\n\n    if (typeof this.configService.getConfig('welcomeWindow.nbVisitToShow') !== 'undefined' ) {\n      if (this.nbVisit > this.configService.getConfig('welcomeWindow.nbVisitToShow') ) {\n        this.storageService.set('welcomeWindow_showAgain', false);\n        return false;\n      }\n    }\n\n    return this.configService.getConfig('welcomeWindow');\n  }\n\n  getConfig(): MatDialogConfig {\n    const dialogConfig = new MatDialogConfig();\n\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.maxWidth = '500px';\n\n    return dialogConfig;\n  }\n\n  afterClosedWelcomeWindow() {\n    this.storageService.set('welcomeWindow_showAgain', this.showAgain);\n  }\n}\n","<div class=\"welcome-window\"  *ngIf=\"html$ | async\">\n\n  <mat-toolbar color=\"primary\">\n    <h2>{{'welcomeWindow.title' | translate}}</h2>\n    <span class=\"spacer\"></span>\n\n    <label>\n      <input id=\"doNotShowCheck\" type=\"checkbox\" [(ngModel)]=\"showAgain\" (click)=\"setShowAgain()\">\n      {{'welcomeWindow.notShowCheck' | translate}}\n    </label>\n  </mat-toolbar>\n\n  <div mat-dialog-content class=\"text\">\n    <igo-custom-html class=\"mat-typography\"\n    [html]=\"html$ | async\">\n    </igo-custom-html>\n  </div>\n\n  <p></p>\n  <div class=\"button-container\">\n    <igo-interactive-tour\n      id=\"tour-button\"\n      styleButton = \"raised\"\n      [discoverTitleInLocale$]=\"discoverTitleInLocale$\"\n      (click)= \"closeWelcomeWindow()\">\n    </igo-interactive-tour>\n\n  <button mat-raised-button class=\"button-close\" color=\"primary\" mat-dialog-close>{{'welcomeWindow.closeButton' | translate}}</button>\n  </div>\n\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfigService, LanguageService } from '@igo2/core';\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { WelcomeWindowService } from './welcome-window.service';\n\n@Component({\n  selector: 'app-welcome-window',\n  templateUrl: './welcome-window.component.html',\n  styleUrls: ['./welcome-window.component.scss']\n})\nexport class WelcomeWindowComponent implements OnInit, OnDestroy {\n  // isVisible = true;\n  showAgain = false;\n  public discoverTitleInLocale$: Observable<string> = of(this.configService.getConfig('title'));\n  private title$$: Subscription;\n  public html$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  constructor(\n    public dialog: MatDialog,\n    private welcomeWindowService: WelcomeWindowService,\n    private configService: ConfigService,\n    protected languageService: LanguageService\n  ) { }\n\n  ngOnInit(): void {\n    this.computeHtml();\n  }\n\n  closeWelcomeWindow() {\n    this.dialog.closeAll();\n  }\n\n  private computeHtml() {\n    let deltaDay = 0;\n    let isDateParsable = true;\n    let releaseDate = new Date(this.configService.getConfig('version.releaseDate'));\n\n    const releaseDateAppConfig = this.configService.getConfig('version.releaseDateApp');\n\n\n    if (releaseDateAppConfig) {\n      const releaseDateApp = new Date(releaseDateAppConfig);\n      if (isNaN(releaseDateApp.getDate())) {\n        console.log('The releaseDateApp config is not a valid date format');\n        isDateParsable = false;\n      } else {\n        deltaDay = 1;\n        releaseDate = releaseDateApp;\n      }\n    }\n\n    let releaseDateString = '';\n\n    if (isDateParsable) {\n      let day: any = releaseDate.getDate() + deltaDay;\n      if (day < 10) {\n        day = '0' + day;\n      }\n      let month: any = releaseDate.getMonth() + 1;\n      if (month < 10) {\n        month = '0' + month;\n      }\n      const year = releaseDate.getFullYear();\n      releaseDateString = `${year}-${month}-${day}`;\n    } else {\n      releaseDateString = releaseDateAppConfig;\n    }\n\n    this.title$$ = this.languageService.translate.get(this.configService.getConfig('title') || '')\n      .pipe(\n        map(title => {\n          return this.languageService.translate.instant('welcomeWindow.html', {\n            title,\n            description: this.configService.getConfig('description') || '',\n            version: this.configService.getConfig('version.app') || this.configService.getConfig('version.lib') || '',\n            releaseDate: releaseDateString || ''\n          });\n        })\n      ).subscribe((r) => this.html$.next(r));\n\n    return this.html$;\n\n  }\n\n  setShowAgain() {\n    this.welcomeWindowService.showAgain = this.showAgain;\n  }\n\n  ngOnDestroy(): void {\n    if (this.title$$) {\n      this.title$$.unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { showContent } from './toast-panel-for-expansion.animations';\n\n\n@Component({\n  selector: 'app-toast-panel-for-expansion',\n  templateUrl: './toast-panel-for-expansion.component.html',\n  styleUrls: ['./toast-panel-for-expansion.component.scss'],\n  animations: [showContent()],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToastPanelForExpansionComponent {\n\n  @Input()\n  set opened(value: boolean) {\n    if (value === this._opened) {\n      return;\n    }\n    this._opened = value;\n    this.openedChange.emit(this._opened);\n  }\n  get opened(): boolean { return this._opened; }\n  private _opened: boolean;\n\n  @Input() title: string;\n\n  @Input() withHeader: boolean;\n\n  @Output() openedChange = new EventEmitter<boolean>();\n\n  @HostBinding('class.toast-panel-for-expansion-opened')\n  get hasOpenedClass() {\n    return this.opened;\n  }\n\n  @HostBinding('style.visibility')\n  get displayStyle() {\n    return (this.withHeader || this.opened) ? 'visible' : 'hidden';\n  }\n\n  constructor() {}\n\n}\n","<igo-panel [title]=\"title\" [withHeader]=\"withHeader\">\n\n  <div #content [@showContent]=\"opened\">\n    <ng-content></ng-content>\n  </div>\n</igo-panel>\n","import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport function showContent(\n  duration = '50ms',\n  delay = '280ms',\n  easing = 'ease-in-out'\n): AnimationTriggerMetadata {\n  return trigger('showContent', [\n    state('true', style({\n      opacity: 1,\n      display: 'block'\n    })),\n    state('false', style({\n      opacity: 0,\n      display: 'none'\n    })),\n    transition('false => true', animate(`${duration} ${delay} ${easing}`)),\n    transition('true => false', animate('0ms'))\n  ]);\n}\n","<mat-sidenav-container class=\"app-main-container\">\n  <mat-sidenav-content>\n\n    <igo-backdrop\n      [shown]=\"backdropShown\"\n      (click)=\"onBackdropClick()\">\n    </igo-backdrop>\n\n    <button\n      mat-icon-button\n      id= \"menu-button\"\n      [ngClass]=\"menuButtonClass\"\n      color=\"primary\"\n      tooltip-position=\"below\"\n      matTooltipShowDelay=\"500\"\n      [matTooltip]=\"(sidenavOpened ? 'menu.close' : 'menu.open') | translate\"\n      (click)=\"onToggleSidenavClick()\">\n      <mat-icon svgIcon=\"menu\">\n      </mat-icon>\n    </button>\n\n    <igo-search-bar\n      #searchBar\n      [term]=\"searchBarTerm\"\n      [termSplitter]=\"termSplitter\"\n      [minLength]=\"minSearchTermLength\"\n      [searchSettings]=\"true\"\n      [forceNA]=\"forceCoordsNA\"\n      [store]=\"searchStore\"\n      (searchTermChange)=\"onSearchTermChange($event)\"\n      [pointerSummaryEnabled]=\"igoSearchPointerSummaryEnabled\"\n      (pointerSummaryStatus)=\"onPointerSummaryStatusChange($event)\"\n      [searchResultsGeometryEnabled]=\"searchResultsGeometryEnabled\"\n      (searchResultsGeometryStatus)=\"onSearchResultsGeometryStatusChange($event)\"\n      (search)=\"onSearch($event)\"\n      (clearFeature)=\"onClearSearch()\"\n      (searchSettingsChange)=\"onSearchSettingsChange()\">\n    </igo-search-bar>\n\n    <app-sidenav\n      [map]=\"map\"\n      [(opened)]=\"sidenavOpened\"\n      (toolChange)=\"toolChanged($event)\">\n    </app-sidenav>\n\n    <igo-map-browser\n      igoWorkspaceUpdator\n      [workspaceStore]=\"workspaceStore\"\n      igoSearchPointerSummary\n      [igoSearchPointerSummaryDelay]=\"500\"\n      [igoSearchPointerSummaryEnabled]=igoSearchPointerSummaryEnabled\n\n      #mapBrowser\n      igoQuery\n      [waitForAllQueries]=\"true\"\n      [queryFeatures]=\"true\"\n      [queryFeaturesHitTolerance]=\"15\"\n      igoMapContext\n      igoLayerContext\n      igoDropGeoFile\n      (query)=\"onMapQuery($event)\"\n      [map]=\"map\"\n      [igoContextMenu]=contextMenu\n      (menuPosition)=\"onContextMenuOpen($event)\"\n      [ngClass]=\"{'igo-attribution-offset': map.getBaseLayers().length > 1}\"\n      [@mapStateX]=\"sidenavOpened ? 'right' : 'left'\"\n      (@mapStateX.start)=\"updateMapBrowserClass()\"\n      [@mapStateY]=\"getControlsOffsetY()\"\n      (@mapStateY.start)=\"updateMapBrowserClass()\">\n\n      <igo-zoom-button [map]=\"map\" color=\"primary\"\n        [@controlsOffsetY]=\"getControlsOffsetY()\">\n      </igo-zoom-button>\n      <igo-swipe-control [map]=\"map\"></igo-swipe-control>\n      <igo-map-center [map]=\"map\"></igo-map-center>\n      <igo-offline-button [map]=\"map\" color=\"primary\"\n        [@controlsOffsetY]=\"getControlsOffsetY()\"\n        [@mobileOffsetY]=\"getToastPanelStatus()\">\n      </igo-offline-button>\n      <igo-geolocate-button\n        *ngIf=\"hasGeolocateButton\"\n        [map]=\"map\" color=\"primary\"\n        [@controlsOffsetY]=\"getControlsOffsetY()\"\n        [@mobileOffsetY]=\"getToastPanelStatus()\">\n      </igo-geolocate-button>\n      <igo-rotation-button [showIfNoRotation]=\"showRotationButtonIfNoRotation\" [map]=\"map\" color=\"primary\"></igo-rotation-button>\n      <igo-user-button \n        *ngIf=\"auth.url\"\n        [map]=\"map\" color=\"primary\"\n        [@controlsOffsetY]=\"getControlsOffsetY()\"\n        [@mobileOffsetY]=\"getToastPanelStatus()\">\n      </igo-user-button>\n      <igo-baselayers-switcher [map]=\"map\"\n        [@controlsOffsetY]=\"getBaselayersSwitcherStatus()\"\n        [useStaticIcon]=\"true\">\n      </igo-baselayers-switcher>\n    </igo-map-browser>\n\n    <app-map-overlay\n      [@controlStateY]=\"getControlsOffsetY()\"\n      [@controlStateX]=\"(mediaService.media$ | async) !== 'mobile' &&\n                              sidenavOpened ? 'right' : 'left'\">\n    </app-map-overlay>\n\n  </mat-sidenav-content>\n</mat-sidenav-container>\n\n<app-expansion-panel\n  *ngIf=\"hasExpansionPanel && (workspaceState.workspaceEnabled$ | async)\"\n  [backdropShown]=\"expansionPanelBackdropShown\"\n  [(expanded)]=\"expansionPanelExpanded\"\n  [maximized]=\"workspaceMaximize$ | async\"\n  [@expansionPanelSize]=\"getExpansionPanelStatus()\"\n  [@toastOffsetY]=\"(isMobile() && !toastPanelOpened && queryState.store.entities$.value.length > 0 && !expansionPanelExpanded) ? 'true' : 'false'\">\n\n  <ng-container expansionPanelHeader>\n    <igo-workspace-selector\n      igoWorkspaceSelector\n      (toolToActivate)=\"toolToActivateFromWorkspace($event)\"\n      [store]=\"workspaceStore\"\n      [map]=\"map\">\n    </igo-workspace-selector>\n\n    <ng-container *ngIf=\"selectedWorkspace$ | async as workspace\">\n      <button\n        class=\"eye-workspace\"\n        mat-icon-button\n        [color]=\"workspace.layer.visible ? 'primary' : 'default'\"\n        collapsibleButton\n        tooltip-position=\"below\"\n        matTooltipShowDelay=\"500\"\n        [matTooltip]=\"workspace.layer.visible ?\n                      ('igo.geo.layer.hideLayer' | translate) :\n                      ('igo.geo.layer.showLayer' | translate)\"\n        (click)=\"workspace.layer.visible = !workspace.layer.visible\">\n        <mat-icon\n          [ngClass]=\"{disabled: !(workspace.inResolutionRange$ | async)}\"\n          [svgIcon]=\"workspace.layer.visible ? 'eye' : 'eye-off'\">\n        </mat-icon>\n    </button>\n    <igo-actionbar\n      class=\"actionbar-workspace\"\n      *ngIf=\"workspace.actionStore\"\n      [store]=\"workspace.actionStore\"\n      [withIcon]=\"true\"\n      [withTitle]=\"actionbarWithTitle\"\n      [horizontal]=\"true\"\n      [withToggleButton]=\"actionbarMode === 'overlay'\"\n      [iconColor]=\"'primary'\"\n      [color]=\"'primary'\"\n      [mode]=\"actionbarMode\"\n      [overlayClass]=\"workspaceMenuClass\">\n    </igo-actionbar>\n      <div class=\"spacer\"></div>\n      <igo-entity-table-paginator\n      *ngIf=\"workspaceVisibility()\"\n        [store]=\"workspace.entityStore\"\n        [entitySortChange$]=\"workspaceEntitySortChange$\"\n        [paginatorOptions]=\"paginatorOptions\"\n        (paginatorChange)=\"paginatorChange($event)\">\n      </igo-entity-table-paginator>\n    </ng-container>\n  </ng-container>\n\n  <ng-container *ngIf=\"selectedWorkspace$ | async as workspace\">\n    <igo-entity-table\n      [paginator]=\"workspacePaginator\"\n      *ngIf=\"workspace.entityStore && workspace.meta && workspace.meta.tableTemplate && workspaceVisibility()\"\n      [store]=\"workspace.entityStore\"\n      (entitySortChange)=\"entitySortChange()\"\n      (entitySelectChange)=\"entitySelectChange($event)\"\n      [template]=\"workspace.meta.tableTemplate\">\n    </igo-entity-table>\n    <span class=\"mat-typography\">{{workspaceNotAvailableMessage | translate}}</span>\n  </ng-container>\n\n</app-expansion-panel>\n\n<app-toast-panel-for-expansion\n  [withHeader]=\"false\"\n  [(opened)]=\"toastPanelForExpansionOpened\">\n\n  <div class=\"toast-panel-for-expansion-close-button-container\">\n    <button\n      mat-icon-button\n      color=\"warn\"\n      (click)=\"toastPanelForExpansionOpened = false\">\n      <mat-icon svgIcon=\"close\"></mat-icon>\n    </button>\n  </div>\n\n  <igo-workspace-widget-outlet\n    *ngIf=\"selectedWorkspace$ | async as workspace\"\n    [workspace]=\"workspace\"\n    (deactivateWidget)=\"onDeactivateWorkspaceWidget()\">\n  </igo-workspace-widget-outlet>\n\n</app-toast-panel-for-expansion >\n\n<app-toast-panel *ngIf=\"!(queryStore.empty$ | async)\"\n  [map]=\"map\"\n  [store]=\"queryStore\"\n  [hasFeatureEmphasisOnSelection]=\"hasFeatureEmphasisOnSelection\"\n  [@toastPanelOffsetX]=\"toastPanelOffsetX$ | async\"\n  [@toastPanelOffsetY]=\"getToastPanelOffsetY()\"\n  [@toastPanelMobileSidenav]=\"(isMobile() && sidenavOpened) || (isTablet() && isPortrait() && sidenavOpened)\"\n  [opened]=\"toastPanelOpened\"\n  (openedChange)=\"toastOpenedChange($event)\"\n  (fullExtentEvent)=\"fullExtent = $event\"\n  (windowHtmlDisplayEvent)=\"toastPanelHtmlDisplay= $event\">\n</app-toast-panel>\n\n<ng-template #contextMenu>\n  <igo-actionbar\n    [store]=\"contextMenuStore\"\n    [withIcon]=\"false\"\n    [horizontal]=\"true\"\n    mode=\"context\">\n  </igo-actionbar>\n</ng-template>\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  ChangeDetectorRef,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Subscription, of, BehaviorSubject, combineLatest } from 'rxjs';\nimport { debounceTime, take, pairwise, skipWhile } from 'rxjs/operators';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\nimport * as olProj from 'ol/proj';\nimport olFeature from 'ol/Feature';\nimport type { default as OlGeometry } from 'ol/geom/Geometry';\n\nimport {\n  MediaService,\n  Media,\n  MediaOrientation,\n  ConfigService,\n  LanguageService,\n  MessageService,\n  StorageService\n} from '@igo2/core';\nimport {\n  ActionbarMode,\n  Workspace,\n  WorkspaceStore,\n  ActionStore,\n  EntityStore,\n  // getEntityTitle,\n  Toolbox,\n  Tool,\n  Widget,\n  EntityTablePaginatorOptions,\n  EntityRecord\n} from '@igo2/common';\nimport { AuthOptions, AuthService } from '@igo2/auth';\nimport { DetailedContext } from '@igo2/context';\nimport {\n  DataSourceService,\n  Feature,\n  FEATURE,\n  featureToSearchResult,\n  GoogleLinks,\n  IgoMap,\n  LayerService,\n  QuerySearchSource,\n  Research,\n  SearchResult,\n  SearchSource,\n  SearchSourceService,\n  CapabilitiesService,\n  sourceCanSearch,\n  sourceCanReverseSearch,\n  ImportService,\n  handleFileImportError,\n  handleFileImportSuccess,\n  featureFromOl,\n  QueryService,\n  WfsWorkspace,\n  FeatureWorkspace,\n  generateIdFromSourceOptions,\n  computeOlFeaturesExtent\n} from '@igo2/geo';\n\nimport {\n  ToolState,\n  MapState,\n  SearchState,\n  QueryState,\n  ContextState,\n  WorkspaceState\n} from '@igo2/integration';\n\nimport {\n  expansionPanelAnimation,\n  toastPanelAnimation,\n  controlsAnimations,\n  controlSlideX,\n  controlSlideY,\n  mapSlideX,\n  mapSlideY\n} from './portal.animation';\nimport { HttpClient } from '@angular/common/http';\n\nimport { WelcomeWindowComponent } from './welcome-window/welcome-window.component';\nimport { WelcomeWindowService } from './welcome-window/welcome-window.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { ObjectUtils } from '@igo2/utils';\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\n\n@Component({\n  selector: 'app-portal',\n  templateUrl: './portal.component.html',\n  styleUrls: ['./portal.component.scss'],\n  animations: [\n    expansionPanelAnimation(),\n    toastPanelAnimation(),\n    controlsAnimations(),\n    controlSlideX(),\n    controlSlideY(),\n    mapSlideX(),\n    mapSlideY()\n  ]\n})\nexport class PortalComponent implements OnInit, OnDestroy {\n  public toastPanelOffsetX$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n  public sidenavOpened$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  public minSearchTermLength = 2;\n  public hasExpansionPanel = false;\n  public hasGeolocateButton = true;\n  public showRotationButtonIfNoRotation = false;\n  public hasFeatureEmphasisOnSelection: Boolean = false;\n  public workspaceNotAvailableMessage: String = 'workspace.disabled.resolution';\n  public workspacePaginator: MatPaginator;\n  public workspaceEntitySortChange$: BehaviorSubject<\n    boolean\n  > = new BehaviorSubject(false);\n  public paginatorOptions: EntityTablePaginatorOptions = {\n    pageSize: 50, // Number of items to display on a page.\n    pageSizeOptions: [1, 5, 10, 20, 50, 100, 500] // The set of provided page size options to display to the user.\n  };\n  public workspaceMenuClass = 'workspace-menu';\n\n  public menuButtonClass;\n\n  public fullExtent = this.storageService.get('fullExtent') as boolean;\n  private workspaceMaximize$$: Subscription[] = [];\n  readonly workspaceMaximize$: BehaviorSubject<boolean> = new BehaviorSubject(\n    this.storageService.get('workspaceMaximize') as boolean\n  );\n\n  public searchBarTerm = '';\n  public onSettingsChange$ = new BehaviorSubject<boolean>(undefined);\n  public termDefinedInUrl = false;\n  public termSplitter = '|';\n  public termDefinedInUrlTriggered = false;\n  private addedLayers$$: Subscription[] = [];\n  public forceCoordsNA = false;\n\n  public contextMenuStore = new ActionStore([]);\n  private contextMenuCoord: [number, number];\n\n  private contextLoaded = false;\n\n  private context$$: Subscription;\n  private openSidenav$$: Subscription;\n  private sidenavMediaAndOrientation$$: Subscription;\n\n  public igoSearchPointerSummaryEnabled: boolean;\n\n  public toastPanelForExpansionOpened = true;\n  private activeWidget$$: Subscription;\n  public showToastPanelForExpansionToggle = false;\n  public selectedWorkspace$: BehaviorSubject<Workspace> = new BehaviorSubject(\n    undefined\n  );\n  private routeParams: Params;\n  private menuButtonReverseColor = false;\n  public toastPanelHtmlDisplay = false;\n\n  @ViewChild('mapBrowser', { read: ElementRef, static: true })\n  mapBrowser: ElementRef;\n  @ViewChild('searchBar', { read: ElementRef, static: true })\n  searchBar: ElementRef;\n\n  get map(): IgoMap {\n    return this.mapState.map;\n  }\n\n  get sidenavOpened(): boolean {\n    return this.sidenavOpened$.value;\n  }\n\n  set sidenavOpened(value: boolean) {\n    this.sidenavOpened$.next(value);\n  }\n\n  get auth(): AuthOptions {\n    return this.configService.getConfig('auth') || [];\n  }\n\n  get toastPanelOpened(): boolean {\n    return this._toastPanelOpened;\n  }\n  set toastPanelOpened(value: boolean) {\n    if (value !== !this._toastPanelOpened) {\n      return;\n    }\n    this._toastPanelOpened = value;\n    this.cdRef.detectChanges();\n  }\n  private _toastPanelOpened =\n    (this.storageService.get('toastOpened') as boolean) !== false;\n\n  isMobile(): boolean {\n    return this.mediaService.getMedia() === Media.Mobile;\n  }\n\n  isTablet(): boolean {\n    return this.mediaService.getMedia() === Media.Tablet;\n  }\n\n  isLandscape(): boolean {\n    return this.mediaService.getOrientation() === MediaOrientation.Landscape;\n  }\n\n  isPortrait(): boolean {\n    return this.mediaService.getOrientation() === MediaOrientation.Portrait;\n  }\n\n  get backdropShown(): boolean {\n    return (\n      (this.isMobile() || (this.isTablet() && this.isPortrait())) &&\n      this.sidenavOpened\n    );\n  }\n\n  get expansionPanelExpanded(): boolean {\n    return this.workspaceState.workspacePanelExpanded;\n  }\n  set expansionPanelExpanded(value: boolean) {\n    this.workspaceState.workspacePanelExpanded = value;\n  }\n\n  get toastPanelShown(): boolean {\n    return true;\n  }\n\n  get expansionPanelBackdropShown(): boolean {\n    return this.expansionPanelExpanded && this.toastPanelForExpansionOpened;\n  }\n\n  get actionbarMode(): ActionbarMode {\n    return ActionbarMode.Overlay;\n  }\n\n  get actionbarWithTitle(): boolean {\n    return this.actionbarMode === ActionbarMode.Overlay;\n  }\n\n  get searchStore(): EntityStore<SearchResult> {\n    return this.searchState.store;\n  }\n\n  get searchResultsGeometryEnabled(): boolean {\n    return this.searchState.searchResultsGeometryEnabled$.value;\n  }\n\n  get queryStore(): EntityStore<SearchResult> {\n    return this.queryState.store;\n  }\n\n  get toolbox(): Toolbox {\n    return this.toolState.toolbox;\n  }\n\n  get toastPanelContent(): string {\n    let content;\n    if (this.workspace !== undefined && this.workspace.hasWidget) {\n      content = 'workspace';\n    } /*else if (this.searchResult !== undefined) {\n      content = this.searchResult.meta.dataType.toLowerCase();\n    }*/\n    return content;\n  }\n\n  // get toastPanelTitle(): string {\n  //   let title;\n  //   if (\n  //     this.toastPanelContent !== 'workspace' &&\n  //     this.searchResult !== undefined\n  //   ) {\n  //     title = getEntityTitle(this.searchResult);\n  //   }\n  //   return title;\n  // }\n\n  get workspaceStore(): WorkspaceStore {\n    return this.workspaceState.store;\n  }\n\n  get workspace(): Workspace {\n    return this.workspaceState.workspace$.value;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    public workspaceState: WorkspaceState,\n    public authService: AuthService,\n    public mediaService: MediaService,\n    public layerService: LayerService,\n    public dataSourceService: DataSourceService,\n    public cdRef: ChangeDetectorRef,\n    public capabilitiesService: CapabilitiesService,\n    private contextState: ContextState,\n    private mapState: MapState,\n    private searchState: SearchState,\n    private queryState: QueryState,\n    private toolState: ToolState,\n    private searchSourceService: SearchSourceService,\n    private configService: ConfigService,\n    private importService: ImportService,\n    private http: HttpClient,\n    private languageService: LanguageService,\n    private messageService: MessageService,\n    private welcomeWindowService: WelcomeWindowService,\n    public dialogWindow: MatDialog,\n    private queryService: QueryService,\n    private storageService: StorageService\n  ) {\n    this.hasExpansionPanel = this.configService.getConfig('hasExpansionPanel');\n    this.hasGeolocateButton =\n    this.configService.getConfig('hasGeolocateButton') === undefined ? true : this.configService.getConfig('hasGeolocateButton') ;\n    this.showRotationButtonIfNoRotation =\n    this.configService.getConfig('showRotationButtonIfNoRotation') === undefined ? false : this.configService.getConfig('showRotationButtonIfNoRotation') ;\n    this.forceCoordsNA = this.configService.getConfig('app.forceCoordsNA');\n    this.hasFeatureEmphasisOnSelection = this.configService.getConfig(\n      'hasFeatureEmphasisOnSelection'\n    );\n\n\n    this.igoSearchPointerSummaryEnabled = this.configService.getConfig(\n      'hasSearchPointerSummary'\n    );\n    if (this.igoSearchPointerSummaryEnabled === undefined) {\n      this.igoSearchPointerSummaryEnabled = this.storageService.get('searchPointerSummaryEnabled') as boolean || false;\n    }\n\n    if (\n      typeof this.configService.getConfig('menuButtonReverseColor') !==\n      'undefined'\n    ) {\n      this.menuButtonReverseColor = this.configService.getConfig(\n        'menuButtonReverseColor'\n      );\n    }\n  }\n\n  ngOnInit() {\n    window['IGO'] = this;\n    this.searchState.searchTermSplitter$.next(this.termSplitter);\n\n    this.initWelcomeWindow();\n\n    this.authService.authenticate$.subscribe((authenticated) => {\n      this.contextLoaded = false;\n    });\n\n    this.context$$ = this.contextState.context$.subscribe(\n      (context: DetailedContext) => this.onChangeContext(context)\n    );\n\n    this.contextMenuStore.load([\n      {\n        id: 'coordinates',\n        title: 'coordinates',\n        handler: () => this.searchCoordinate(this.contextMenuCoord)\n      },\n      {\n        id: 'googleMaps',\n        title: 'googleMap',\n        handler: () => this.openGoogleMaps(this.contextMenuCoord)\n      },\n      {\n        id: 'googleStreetView',\n        title: 'googleStreetView',\n        handler: () => this.openGoogleStreetView(this.contextMenuCoord)\n      }\n    ]);\n\n    this.queryStore.count$\n      .pipe(pairwise())\n      .subscribe(([prevCnt, currentCnt]) => {\n        this.map.viewController.padding[2] = currentCnt ? 280 : 0;\n        // on mobile. Close the toast if workspace is opened, on new query\n        if (\n          prevCnt === 0 &&\n          currentCnt !== prevCnt &&\n          this.isMobile() &&\n          this.hasExpansionPanel &&\n          this.expansionPanelExpanded &&\n          this.toastPanelOpened\n        ) {\n          this.toastPanelOpened = false;\n        }\n      });\n    this.map.ol.once('rendercomplete', () => {\n      this.readQueryParams();\n    });\n\n    this.onSettingsChange$.subscribe(() => {\n      this.searchState.setSearchSettingsChange();\n    });\n\n    this.searchState.selectedResult$.subscribe((result) => {\n      if (result && this.isMobile()) {\n        this.closeSidenav();\n      }\n    });\n\n    this.workspaceState.workspaceEnabled$.next(this.hasExpansionPanel);\n    this.workspaceState.store.empty$.subscribe((workspaceEmpty) => {\n      if (!this.hasExpansionPanel) {\n        return;\n      }\n      this.workspaceState.workspaceEnabled$.next(workspaceEmpty ? false : true);\n      if (workspaceEmpty) {\n        this.expansionPanelExpanded = false;\n      }\n      this.updateMapBrowserClass();\n    });\n\n    this.workspaceMaximize$$.push(this.workspaceState.workspaceMaximize$.subscribe((workspaceMaximize) => {\n      this.workspaceMaximize$.next(workspaceMaximize);\n      this.updateMapBrowserClass();\n    }));\n    this.workspaceMaximize$$.push(\n      this.workspaceMaximize$.subscribe(() => this.updateMapBrowserClass())\n    );\n\n    this.workspaceState.workspace$.subscribe((activeWks: WfsWorkspace | FeatureWorkspace) => {\n      if (activeWks) {\n        this.selectedWorkspace$.next(activeWks);\n        this.expansionPanelExpanded = true;\n      } else {\n        this.expansionPanelExpanded = false;\n      }\n    });\n\n    this.activeWidget$$ = this.workspaceState.activeWorkspaceWidget$.subscribe(\n      (widget: Widget) => {\n        if (widget !== undefined) {\n          this.openToastPanelForExpansion();\n          this.showToastPanelForExpansionToggle = true;\n        } else {\n          this.closeToastPanelForExpansion();\n          this.showToastPanelForExpansionToggle = false;\n        }\n      }\n    );\n\n    this.openSidenav$$ = this.toolState.openSidenav$.subscribe(\n      (openSidenav: boolean) => {\n        if (openSidenav) {\n          this.openSidenav();\n          this.toolState.openSidenav$.next(false);\n        }\n        this.menuButtonClass = this.getClassMenuButton();\n      }\n    );\n\n    this.sidenavMediaAndOrientation$$ =\n      combineLatest([\n        this.sidenavOpened$,\n        this.mediaService.media$,\n        this.mediaService.orientation$]\n      ).pipe(\n        debounceTime(50)\n      ).subscribe((sidenavMediaAndOrientation: [boolean, string, string]) => {\n        this.computeToastPanelOffsetX();\n      });\n  }\n\n  computeToastPanelOffsetX() {\n    if (this.isMobile() || !this.isLandscape()) {\n      this.toastPanelOffsetX$.next(undefined);\n    } else {\n      this.toastPanelOffsetX$.next(this.getToastPanelExtent());\n    }\n  }\n\n  getClassMenuButton() {\n    if (this.sidenavOpened) {\n      return {\n        'menu-button': this.menuButtonReverseColor === false,\n        'menu-button-reverse-color': this.menuButtonReverseColor === true\n      };\n    } else {\n      return {\n        'menu-button': this.menuButtonReverseColor === false,\n        'menu-button-reverse-color-close ': this.menuButtonReverseColor === true\n      };\n    }\n  }\n\n  workspaceVisibility(): boolean {\n    const wks = (this.selectedWorkspace$.value as WfsWorkspace | FeatureWorkspace);\n    if (wks.inResolutionRange$.value) {\n      if (wks.entityStore.empty$.value && !wks.layer.visible) {\n        this.workspaceNotAvailableMessage = 'workspace.disabled.visible';\n      } else {\n        this.workspaceNotAvailableMessage = '';\n      }\n    } else {\n      this.workspaceNotAvailableMessage = 'workspace.disabled.resolution';\n    }\n    return wks.inResolutionRange$.value;\n  }\n\n\n  paginatorChange(matPaginator: MatPaginator) {\n    this.workspacePaginator = matPaginator;\n  }\n\n  entitySortChange() {\n    this.workspaceEntitySortChange$.next(true);\n  }\n\n  entitySelectChange(result: { added: Feature[] }) {\n    const baseQuerySearchSource = this.getQuerySearchSource();\n    const querySearchSourceArray: QuerySearchSource[] = [];\n    if (result && result.added) {\n      const results = result.added.map((res) => {\n        if (\n          res &&\n          res.ol &&\n          res.ol.getProperties()._featureStore.layer &&\n          res.ol.getProperties()._featureStore.layer.visible\n        ) {\n          const ol = res.ol as olFeature<OlGeometry>;\n          const featureStoreLayer = res.ol.getProperties()._featureStore.layer;\n          const feature = featureFromOl(\n            ol,\n            featureStoreLayer.map.projection,\n            featureStoreLayer.ol\n          );\n\n          feature.meta.alias = this.queryService.getAllowedFieldsAndAlias(\n            featureStoreLayer\n          );\n          feature.meta.title =\n            this.queryService.getQueryTitle(feature, featureStoreLayer) ||\n            feature.meta.title;\n          let querySearchSource = querySearchSourceArray.find(\n            (s) => s.title === feature.meta.sourceTitle\n          );\n          if (!querySearchSource) {\n            querySearchSource = new QuerySearchSource({\n              title: feature.meta.sourceTitle\n            });\n            querySearchSourceArray.push(querySearchSource);\n          }\n          return featureToSearchResult(feature, querySearchSource);\n        }\n      });\n\n      const research = {\n        request: of(results),\n        reverse: false,\n        source: baseQuerySearchSource\n      };\n      research.request.subscribe((queryResults: SearchResult<Feature>[]) => {\n        this.queryStore.load(queryResults);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this.context$$.unsubscribe();\n    this.activeWidget$$.unsubscribe();\n    this.openSidenav$$.unsubscribe();\n    this.workspaceMaximize$$.map(f => f.unsubscribe());\n    this.sidenavMediaAndOrientation$$.unsubscribe();\n  }\n\n  /**\n   * Cancel ongoing add layer, if any\n   */\n  private cancelOngoingAddLayer() {\n    this.addedLayers$$.forEach((sub: Subscription) => sub.unsubscribe());\n    this.addedLayers$$ = [];\n  }\n\n  onBackdropClick() {\n    this.closeSidenav();\n  }\n\n  onToggleSidenavClick() {\n    this.toggleSidenav();\n  }\n\n  onDeactivateWorkspaceWidget() {\n    this.closeToastPanelForExpansion();\n  }\n\n  closeToastPanelForExpansion() {\n    this.toastPanelForExpansionOpened = false;\n  }\n\n  openToastPanelForExpansion() {\n    this.toastPanelForExpansionOpened = true;\n  }\n\n  onMapQuery(event: { features: Feature[]; event: MapBrowserEvent<any> }) {\n    const baseQuerySearchSource = this.getQuerySearchSource();\n    const querySearchSourceArray: QuerySearchSource[] = [];\n\n    const results = event.features.map((feature: Feature) => {\n      let querySearchSource = querySearchSourceArray.find(\n        (s) => s.title === feature.meta.sourceTitle\n      );\n      if (!querySearchSource) {\n        querySearchSource = new QuerySearchSource({\n          title: feature.meta.sourceTitle\n        });\n        querySearchSourceArray.push(querySearchSource);\n      }\n      return featureToSearchResult(feature, querySearchSource);\n    });\n\n    const research = {\n      request: of(results),\n      reverse: false,\n      source: baseQuerySearchSource\n    };\n    research.request.subscribe((queryResults: SearchResult<Feature>[]) => {\n      this.queryStore.load(queryResults);\n    });\n  }\n\n  onSearchTermChange(term?: string) {\n    if (this.routeParams?.search &&  term !== this.routeParams.search) {\n      this.searchState.deactivateCustomFilterTermStrategy();\n  }\n\n    this.searchState.setSearchTerm(term);\n    const termWithoutHashtag = term.replace(/(#[^\\s]*)/g, '').trim();\n    if (termWithoutHashtag.length < 2) {\n      this.onClearSearch();\n      return;\n    }\n    this.onBeforeSearch();\n  }\n\n  onSearch(event: { research: Research; results: SearchResult[] }) {\n    const results = event.results;\n\n    const isReverseSearch = !sourceCanSearch(event.research.source);\n\n    let enabledSources;\n    if (isReverseSearch) {\n      enabledSources = this.searchSourceService\n        .getEnabledSources()\n        .filter(sourceCanReverseSearch);\n    } else {\n      enabledSources = this.searchSourceService\n        .getEnabledSources()\n        .filter(sourceCanSearch);\n    }\n\n    const newResults = this.searchStore.entities$.value\n      .filter(\n        (result: SearchResult) =>\n          result.source !== event.research.source &&\n          enabledSources.includes(result.source)\n      )\n      .concat(results);\n    this.searchStore.updateMany(newResults);\n  }\n\n  onSearchResultsGeometryStatusChange(value) {\n    this.searchState.setSearchResultsGeometryStatus(value);\n  }\n\n  onSearchSettingsChange() {\n    this.onSettingsChange$.next(true);\n  }\n\n  private closeSidenav() {\n    this.sidenavOpened = false;\n    this.map.viewController.padding[3] = 0;\n  }\n\n  private openSidenav() {\n    this.sidenavOpened = true;\n    this.map.viewController.padding[3] = this.isMobile() ? 0 : 400;\n  }\n\n  private toggleSidenav() {\n    this.sidenavOpened ? this.closeSidenav() : this.openSidenav();\n  }\n\n  public toolChanged(tool: Tool) {\n    if (tool && tool.name === 'searchResults') {\n      this.searchBar.nativeElement.getElementsByTagName('input')[0].focus();\n    }\n  }\n\n  private onChangeContext(context: DetailedContext) {\n    this.cancelOngoingAddLayer();\n    if (context === undefined) {\n      return;\n    }\n\n    this.route.queryParams.pipe(debounceTime(250)).subscribe((qParams) => {\n      if (!qParams['context'] || qParams['context'] === context.uri) {\n        this.readLayersQueryParams(qParams);\n      }\n    });\n\n    if (this.contextLoaded) {\n      const contextManager = this.toolbox.getTool('contextManager');\n      const contextManagerOptions = contextManager\n        ? contextManager.options\n        : {};\n      let toolToOpen = contextManagerOptions.toolToOpenOnContextChange;\n\n      if (!toolToOpen) {\n        const toolOrderToOpen = ['mapTools', 'map', 'mapDetails', 'mapLegend'];\n        for (const toolName of toolOrderToOpen) {\n          if (this.toolbox.getTool(toolName)) {\n            toolToOpen = toolName;\n            break;\n          }\n        }\n      }\n\n      if (toolToOpen) {\n        this.toolbox.activateTool(toolToOpen);\n      }\n    }\n\n    this.contextLoaded = true;\n  }\n\n  private onBeforeSearch() {\n    if (\n      !this.toolbox.activeTool$.value ||\n      this.toolbox.activeTool$.value.name !== 'searchResults'\n    ) {\n      this.toolbox.activateTool('searchResults');\n    }\n    this.openSidenav();\n  }\n\n  toastOpenedChange(opened: boolean) {\n    this.map.viewController.padding[2] = opened ? 280 : 0;\n    this.handleExpansionAndToastOnMobile();\n    this.toastPanelOpened = opened;\n  }\n\n  private handleExpansionAndToastOnMobile() {\n    if (\n      this.isMobile() &&\n      this.hasExpansionPanel &&\n      this.expansionPanelExpanded &&\n      this.toastPanelOpened\n    ) {\n      this.expansionPanelExpanded = false;\n    }\n  }\n\n  public onClearSearch() {\n    this.map.searchResultsOverlay.clear();\n    this.searchStore.clear();\n    this.searchState.setSelectedResult(undefined);\n    this.searchState.deactivateCustomFilterTermStrategy();\n  }\n\n  private getQuerySearchSource(): SearchSource {\n    return this.searchSourceService\n      .getSources()\n      .find(\n        (searchSource: SearchSource) =>\n          searchSource instanceof QuerySearchSource\n      );\n  }\n\n  onContextMenuOpen(event: { x: number; y: number }) {\n    this.contextMenuCoord = this.getClickCoordinate(event) as [number, number];\n  }\n\n  private getClickCoordinate(event: { x: number; y: number }) {\n    const contextmenuPoint = event;\n    const boundingMapBrowser = this.mapBrowser.nativeElement.getBoundingClientRect();\n    contextmenuPoint.y =\n      contextmenuPoint.y -\n      boundingMapBrowser.top +\n      (window.scrollY || window.pageYOffset);\n    contextmenuPoint.x =\n      contextmenuPoint.x -\n      boundingMapBrowser.left +\n      (window.scrollX || window.pageXOffset);\n    const pixel = [contextmenuPoint.x, contextmenuPoint.y];\n\n    const coord = this.map.ol.getCoordinateFromPixel(pixel);\n    const proj = this.map.projection;\n    return olProj.transform(coord, proj, 'EPSG:4326');\n  }\n\n  private openGoogleMaps(coord: [number, number]) {\n    window.open(GoogleLinks.getGoogleMapsCoordLink(coord[0], coord[1]));\n  }\n\n  private openGoogleStreetView(coord: [number, number]) {\n    window.open(GoogleLinks.getGoogleStreetViewLink(coord[0], coord[1]));\n  }\n\n  searchCoordinate(coord: [number, number]) {\n    this.searchBarTerm = coord.map((c) => c.toFixed(6)).join(', ');\n  }\n\n  updateMapBrowserClass() {\n    const header = this.queryState.store.entities$.value.length > 0;\n    if (this.hasExpansionPanel && this.workspaceState.workspaceEnabled$.value) {\n      this.mapBrowser.nativeElement.classList.add('has-expansion-panel');\n    } else {\n      this.mapBrowser.nativeElement.classList.remove('has-expansion-panel');\n    }\n\n    if (this.hasExpansionPanel && this.expansionPanelExpanded) {\n      if (this.workspaceMaximize$.value) {\n        this.mapBrowser.nativeElement.classList.add('expansion-offset-maximized');\n        this.mapBrowser.nativeElement.classList.remove('expansion-offset');\n      } else {\n        this.mapBrowser.nativeElement.classList.add('expansion-offset');\n        this.mapBrowser.nativeElement.classList.remove('expansion-offset-maximized');\n      }\n    } else {\n      if (this.workspaceMaximize$.value) {\n        this.mapBrowser.nativeElement.classList.remove('expansion-offset-maximized');\n      } else {\n        this.mapBrowser.nativeElement.classList.remove('expansion-offset');\n      }\n    }\n\n    if (this.sidenavOpened) {\n      this.mapBrowser.nativeElement.classList.add('sidenav-offset');\n    } else {\n      this.mapBrowser.nativeElement.classList.remove('sidenav-offset');\n    }\n\n    if (this.sidenavOpened && !this.isMobile()) {\n      this.mapBrowser.nativeElement.classList.add('sidenav-offset-baselayers');\n    } else {\n      this.mapBrowser.nativeElement.classList.remove(\n        'sidenav-offset-baselayers'\n      );\n    }\n\n    if (!this.toastPanelOpened && header && !this.expansionPanelExpanded) {\n      this.mapBrowser.nativeElement.classList.add('toast-offset-scale-line');\n    } else {\n      this.mapBrowser.nativeElement.classList.remove('toast-offset-scale-line');\n    }\n\n    if (\n      !this.toastPanelOpened &&\n      header &&\n      (this.isMobile() || this.isTablet() || this.sidenavOpened) &&\n      !this.expansionPanelExpanded\n    ) {\n      this.mapBrowser.nativeElement.classList.add('toast-offset-attribution');\n    } else {\n      this.mapBrowser.nativeElement.classList.remove(\n        'toast-offset-attribution'\n      );\n    }\n  }\n\n  getToastPanelExtent() {\n    if (!this.sidenavOpened) {\n      if (this.toastPanelHtmlDisplay && this.mediaService.isDesktop()) {\n        return 'htmlDisplay';\n      }\n      if (this.fullExtent) {\n        return 'fullStandard';\n      } else {\n        return 'standard';\n      }\n    } else if (this.sidenavOpened) {\n      if (this.toastPanelHtmlDisplay && this.mediaService.isDesktop()) {\n        return 'htmlDisplayOffsetX';\n      }\n      if (this.fullExtent) {\n        return 'fullOffsetX';\n      } else {\n        return 'standardOffsetX';\n      }\n    }\n  }\n\n  onPointerSummaryStatusChange(value) {\n    this.storageService.set('searchPointerSummaryEnabled', value);\n    this.igoSearchPointerSummaryEnabled = value;\n  }\n\n  getExpansionPanelStatus() {\n    if (this.sidenavOpened === false) {\n      if (this.expansionPanelExpanded === true) {\n        return 'full';\n      }\n      return 'notTriggered';\n    }\n    if (this.sidenavOpened === true && this.isMobile() === false) {\n      if (this.expansionPanelExpanded === true) {\n        return 'reduced';\n      }\n      return 'reducedNotTriggered';\n    }\n    if (this.sidenavOpened === true && this.isMobile() === true) {\n      if (this.expansionPanelExpanded === true) {\n        return 'mobile';\n      } else {\n        return 'notVisible';\n      }\n    }\n  }\n\n  getToastPanelOffsetY() {\n    let status = 'noExpansion';\n    if (this.expansionPanelExpanded) {\n      if (this.workspaceMaximize$.value) {\n        if (this.toastPanelOpened) {\n          status = 'expansionMaximizedAndToastOpened';\n        } else {\n          status = 'expansionMaximizedAndToastClosed';\n        }\n      } else {\n        if (this.toastPanelOpened) {\n          status = 'expansionAndToastOpened';\n        } else {\n          status = 'expansionAndToastClosed';\n        }\n      }\n    } else {\n      status = 'noExpansion';\n    }\n    return status;\n  }\n\n  getToastPanelStatus() {\n    if (this.isMobile() === true && this.toastPanelOpened === false) {\n      if (this.sidenavOpened === false) {\n        if (this.expansionPanelExpanded === false) {\n          if (this.queryState.store.entities$.value.length > 0) {\n            return 'low';\n          }\n        }\n      }\n    }\n  }\n  getControlsOffsetY() {\n    return this.expansionPanelExpanded ? this.workspaceMaximize$.value ? 'firstRowFromBottom-expanded-maximized' : 'firstRowFromBottom-expanded' : 'firstRowFromBottom';\n  }\n\n  getBaselayersSwitcherStatus() {\n    let status;\n    if (this.isMobile()) {\n\n      if (this.workspaceState.workspaceEnabled$.value) {\n        if (this.expansionPanelExpanded === false) {\n          if (this.queryState.store.entities$.value.length === 0) {\n            status = 'secondRowFromBottom';\n           } else {\n            status =  'thirdRowFromBottom';\n           }\n        } else {\n          if (this.queryState.store.entities$.value.length === 0) {\n            status = 'firstRowFromBottom-expanded';\n           } else {\n            status =  'secondRowFromBottom-expanded';\n           }\n        }\n\n      } else {\n        if (this.queryState.store.entities$.value.length === 0) {\n          status =  'firstRowFromBottom';\n         } else {\n          status =  'secondRowFromBottom';\n         }\n      }\n    } else {\n      if (this.workspaceState.workspaceEnabled$.value) {\n        if (this.expansionPanelExpanded) {\n          if (this.workspaceMaximize$.value) {\n            status = 'firstRowFromBottom-expanded-maximized';\n          } else {\n            status = 'firstRowFromBottom-expanded';\n          }\n        } else {\n          status = 'secondRowFromBottom';\n        }\n      } else {\n        status = 'firstRowFromBottom';\n      }\n    }\n    return status;\n  }\n\n  private readQueryParams() {\n    this.route.queryParams.subscribe((params) => {\n      this.routeParams = params;\n      this.readToolParams();\n      this.readSearchParams();\n      this.readFocusFirst();\n    });\n  }\n\n  private computeFocusFirst() {\n    setTimeout(() => {\n      const resultItem: any = document\n        .getElementsByTagName('igo-search-results-item')\n        .item(0);\n      if (resultItem) {\n        resultItem.click();\n      }\n    }, 1);\n  }\n\n  private readFocusFirst() {\n    if (this.routeParams['sf'] === '1' && this.termDefinedInUrl) {\n      const entities$$ = this.searchStore.stateView.all$()\n        .pipe(\n          skipWhile((entities) => entities.length === 0),\n          debounceTime(500),\n          take(1)\n        )\n        .subscribe((entities) => {\n          entities$$.unsubscribe();\n          if (entities.length && !this.termDefinedInUrlTriggered) {\n            this.computeFocusFirst();\n            this.termDefinedInUrlTriggered = true;\n          }\n        });\n    }\n  }\n\n  private readSearchParams() {\n    if (this.routeParams['search']) {\n      this.termDefinedInUrl = true;\n      if (this.routeParams['exactMatch'] === '1') {\n        this.searchState.activateCustomFilterTermStrategy();\n      }\n      if (this.routeParams['search'] && !this.routeParams['zoom'] && this.routeParams['sf'] !== '1') {\n        const entities$$ = this.searchStore.stateView.all$()\n        .pipe(\n          skipWhile((entities) => entities.length === 0),\n          debounceTime(500),\n          take(1)\n        )\n        .subscribe((entities) => {\n          entities$$.unsubscribe();\n          const searchResultsOlFeatures = entities\n            .filter(e => e.entity.meta.dataType === FEATURE)\n            .map((entity: EntityRecord<SearchResult>) =>\n              new olFormatGeoJSON().readFeature(entity.entity.data, {\n                dataProjection: entity.entity.data.projection,\n                featureProjection: this.map.projection\n              })\n            );\n            const totalExtent = computeOlFeaturesExtent(this.map, searchResultsOlFeatures);\n            this.map.viewController.zoomToExtent(totalExtent);\n        });\n      }\n      this.searchBarTerm = this.routeParams['search'];\n    }\n    if (this.routeParams['searchGeom'] === '1') {\n      this.searchState.searchResultsGeometryEnabled$.next(true);\n    }\n  }\n\n  private readToolParams() {\n    if (this.routeParams['tool']) {\n      this.toolbox.activateTool(this.routeParams['tool']);\n    }\n\n    if (this.routeParams['sidenav'] === '1') {\n      setTimeout(() => {\n        this.openSidenav();\n      }, 250);\n    }\n  }\n\n  private readLayersQueryParams(params: Params) {\n    this.readLayersQueryParamsByType(params, 'wms');\n    this.readLayersQueryParamsByType(params, 'wmts');\n    this.readLayersQueryParamsByType(params, 'arcgisrest');\n    this.readLayersQueryParamsByType(params, 'imagearcgisrest');\n    this.readLayersQueryParamsByType(params, 'tilearcgisrest');\n    this.readVectorQueryParams(params);\n  }\n\n  private readLayersQueryParamsByType(params: Params, type) {\n    let nameParamLayersKey;\n    let urlsKey;\n    switch (type) {\n      case 'wms':\n        if ((params['layers'] || params['wmsLayers']) && params['wmsUrl']) {\n          urlsKey = 'wmsUrl';\n          nameParamLayersKey = params['wmsLayers'] ? 'wmsLayers' : 'layers'; // for maintain compatibility\n        }\n        break;\n      case 'wmts':\n        if (params['wmtsLayers'] && params['wmtsUrl']) {\n          urlsKey = 'wmtsUrl';\n          nameParamLayersKey = 'wmtsLayers';\n        }\n        break;\n      case 'arcgisrest':\n        if (params['arcgisLayers'] && params['arcgisUrl']) {\n          urlsKey = 'arcgisUrl';\n          nameParamLayersKey = 'arcgisLayers';\n        }\n        break;\n      case 'imagearcgisrest':\n        if (params['iarcgisLayers'] && params['iarcgisUrl']) {\n          urlsKey = 'iarcgisUrl';\n          nameParamLayersKey = 'iarcgisLayers';\n        }\n        break;\n      case 'tilearcgisrest':\n        if (params['tarcgisLayers'] && params['tarcgisUrl']) {\n          urlsKey = 'tarcgisUrl';\n          nameParamLayersKey = 'tarcgisLayers';\n        }\n        break;\n    }\n    if (!nameParamLayersKey || !urlsKey) {\n      return;\n    }\n    const layersByService = params[nameParamLayersKey].split('),(');\n    const urls = params[urlsKey].split(',');\n\n    let cnt = 0;\n    urls.forEach((url) => {\n      const currentLayersByService = this.extractLayersByService(\n        layersByService[cnt]\n      );\n      currentLayersByService.forEach((layer) => {\n        const layerFromUrl = layer.split(':igoz');\n        const layerOptions = ObjectUtils.removeUndefined({\n          type,\n          url: url,\n          layer: layerFromUrl[0],\n          params: type === 'wms' ? { LAYERS: layerFromUrl[0] } : undefined\n        });\n        const id = generateIdFromSourceOptions(layerOptions);\n        const visibility = this.computeLayerVisibilityFromUrl(params, id);\n        this.addLayerFromURL(\n          url,\n          layerFromUrl[0],\n          type,\n          visibility,\n          layerFromUrl[1] ? parseInt(layerFromUrl[1], 10) : undefined\n        );\n      });\n      cnt += 1;\n    });\n  }\n\n  private readVectorQueryParams(params: Params) {\n    if (params['vector']) {\n      const url = params['vector'] as string;\n      const lastIndex = url.lastIndexOf('/');\n      const fileName = url.slice(lastIndex + 1, url.length);\n\n      this.http.get(`${url}`, { responseType: 'blob' }).subscribe((data) => {\n        const file = new File([data], fileName, {\n          type: data.type,\n          lastModified: Date.now()\n        });\n        this.importService.import(file).subscribe(\n          (features: Feature[]) => this.onFileImportSuccess(file, features),\n          (error: Error) => this.onFileImportError(file, error)\n        );\n      });\n    }\n  }\n\n  private onFileImportSuccess(file: File, features: Feature[]) {\n    handleFileImportSuccess(\n      file,\n      features,\n      this.map,\n      this.messageService,\n      this.languageService\n    );\n  }\n\n  private onFileImportError(file: File, error: Error) {\n    handleFileImportError(\n      file,\n      error,\n      this.messageService,\n      this.languageService\n    );\n  }\n\n  private extractLayersByService(layersByService: string): any[] {\n    let outLayersByService = layersByService;\n    outLayersByService = outLayersByService.startsWith('(')\n      ? outLayersByService.substr(1)\n      : outLayersByService;\n    outLayersByService = outLayersByService.endsWith(')')\n      ? outLayersByService.slice(0, -1)\n      : outLayersByService;\n    return outLayersByService.split(',');\n  }\n  private addLayerFromURL(\n    url: string,\n    name: string,\n    type: 'wms' | 'wmts' | 'arcgisrest'| 'imagearcgisrest' | 'tilearcgisrest',\n    visibility: boolean = true,\n    zIndex: number\n  ) {\n    if (!this.contextLoaded) {\n      return;\n    }\n    const commonSourceOptions = {\n      optionsFromCapabilities: true,\n      optionsFromApi: true,\n      crossOrigin: true,\n      type,\n      url\n    };\n    const arcgisClause = (type === 'arcgisrest' || type === 'imagearcgisrest' || type === 'tilearcgisrest');\n    let sourceOptions = {\n      version: type === 'wmts' ? '1.0.0' : undefined,\n      queryable: arcgisClause  ? true : false,\n      queryFormat: arcgisClause  ? 'esrijson' : undefined,\n      layer: name\n    };\n    if (type === 'wms') {\n      sourceOptions =  { params: {LAYERS: name}} as any;\n    }\n\n    sourceOptions = ObjectUtils.removeUndefined(Object.assign({}, sourceOptions, commonSourceOptions));\n\n    this.addedLayers$$.push(\n      this.layerService\n        .createAsyncLayer({\n          zIndex: zIndex,\n          visible: visibility,\n          sourceOptions\n        })\n        .subscribe((l) => {\n          this.map.addLayer(l);\n        })\n    );\n  }\n\n  private computeLayerVisibilityFromUrl(\n    params: Params,\n    currentLayerid: string\n  ): boolean {\n    const queryParams = params;\n    let visible = true;\n    if (!queryParams || !currentLayerid) {\n      return visible;\n    }\n    let visibleOnLayersParams = '';\n    let visibleOffLayersParams = '';\n    let visiblelayers: string[] = [];\n    let invisiblelayers: string[] = [];\n    if (queryParams['visiblelayers']) {\n      visibleOnLayersParams = queryParams['visiblelayers'];\n    }\n    if (queryParams['invisiblelayers']) {\n      visibleOffLayersParams = queryParams['invisiblelayers'];\n    }\n\n    /* This order is important because to control whichever\n     the order of * param. First whe open and close everything.*/\n    if (visibleOnLayersParams === '*') {\n      visible = true;\n    }\n    if (visibleOffLayersParams === '*') {\n      visible = false;\n    }\n\n    // After, managing named layer by id (context.json OR id from datasource)\n    visiblelayers = visibleOnLayersParams.split(',');\n    invisiblelayers = visibleOffLayersParams.split(',');\n    if (visiblelayers.indexOf(currentLayerid) > -1  || visiblelayers.indexOf(currentLayerid.toString()) > -1) {\n      visible = true;\n    }\n    if (invisiblelayers.indexOf(currentLayerid) > -1 || invisiblelayers.indexOf(currentLayerid.toString()) > -1) {\n      visible = false;\n    }\n    return visible;\n  }\n\n  private initWelcomeWindow(): void {\n    if (this.auth?.url) {\n      this.authService.logged$.subscribe((logged) => {\n        if (logged) {\n          this.createWelcomeWindow();\n        }\n      });\n    } else {\n      this.createWelcomeWindow();\n    }\n  }\n\n  private createWelcomeWindow(): void {\n    if (this.welcomeWindowService.hasWelcomeWindow()) {\n      const welcomWindowConfig: MatDialogConfig = this.welcomeWindowService.getConfig();\n\n      const dialogRef = this.dialogWindow.open(\n        WelcomeWindowComponent,\n        welcomWindowConfig\n      );\n\n      dialogRef.afterClosed().subscribe((result) => {\n        this.welcomeWindowService.afterClosedWelcomeWindow();\n      });\n    }\n  }\n}\n","import './portal.variables.scss';\n\nimport {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\n\nexport function expansionPanelAnimation(): AnimationTriggerMetadata[] {\n  return [\n    trigger('expansionPanelSize', [\n      state(\n        'full',\n        style({\n          left: '5px',\n          'max-width': '100%'\n        })\n      ),\n      state(\n        'notTriggered',\n        style({\n          left: '5px',\n          bottom: '5px',\n          'max-width': '100%'\n        })\n      ),\n      state(\n        'notVisible',\n        style({\n          display: 'none'\n        })\n      ),\n      state(\n        'mobile',\n        style({\n          left: 'calc(100% - 40px)',\n        })\n      ),\n      state(\n        'reduced',\n        style({\n          left: '405px',\n          'max-width': 'calc(100% - 405px)'\n        })\n      ),\n      state(\n        'reducedNotTriggered',\n        style({\n          left: '405px',\n          bottom: '5px',\n          'max-width': 'calc(100% - 405px)'\n        })\n      ),\n      transition('* => *', animate('100ms'))\n    ]),\n    trigger('toastOffsetY', [\n      state(\n        'true',\n        style({\n          bottom: '50px'\n        })\n      ),\n      state(\n        'false',\n        style({\n          bottom: '5px'\n        })\n      )\n    ])\n  ];\n}\n\nexport function toastPanelAnimation(): AnimationTriggerMetadata[] {\n  return [\n    trigger('toastPanelMobileSidenav', [\n      state(\n        'true',\n        style({\n          display: 'none'\n        })\n      ),\n      transition('* => void', animate('0ms')),\n      transition('* => *', animate('200ms'))\n    ]),\n    trigger('toastPanelOffsetX', [\n      state(\n        'fullStandard',\n        style({\n          left: '45%'\n        })\n      ),\n      state(\n        'standard',\n        style({\n          left: '50%'\n        })\n      ),\n      state(\n        'htmlDisplay',\n        style({\n          left: '40%'\n        })\n      ),\n      state(\n        'fullOffsetX',\n        style({\n          left: 'calc(45% + 202px)'\n        })\n      ),\n      state(\n        'standardOffsetX',\n        style({\n          left: 'calc(50% + 202px)'\n        })\n      ),\n      state(\n        'htmlDisplayOffsetX',\n        style({\n          left: 'calc(40% + 160px)'\n        })\n    ),\n      transition('fullStandard => fullOffsetX', animate('200ms')),\n      transition('fullOffsetX => fullStandard', animate('200ms')),\n      transition('standard => standardOffsetX', animate('200ms')),\n      transition('standardOffsetX => standard', animate('200ms')),\n      transition('htmlDisplay => htmlDisplayOffsetX', animate('200ms')),\n      transition('htmlDisplayOffsetX => htmlDisplay', animate('200ms')),\n      // transition('standard => htmlDisplay', animate('200ms')),\n      // transition('htmlDisplay => standard', animate('200ms')),\n    ]),\n    trigger('toastPanelOffsetY', [\n      state(\n        'noExpansion',\n        style({\n          bottom: '0'\n        })\n      ),\n      state(\n        'expansionAndToastOpened',\n        style({\n          bottom: '285px',\n          zIndex: '999'\n        })\n      ),\n      state(\n        'expansionAndToastClosed',\n        style({\n          bottom: '285px',\n          zIndex: '5'\n        })\n      ),\n      state(\n        'expansionMaximizedAndToastOpened',\n        style({\n          bottom: '500px', // workspace full size\n          zIndex: '999'\n        })\n      ),\n      state(\n        'expansionMaximizedAndToastClosed',\n        style({\n          bottom: '500px', // workspace full size\n          zIndex: '5'\n        })\n      ),\n    transition('noExpansion => noExpansion', animate('10ms')),\n    transition('expansionAndToastOpened => expansionAndToastOpened', animate('200ms')),\n    transition('expansionAndToastClosed => expansionAndToastClosed', animate('200ms')),\n    transition('expansionMaximizedAndToastOpened => expansionMaximizedAndToastOpened', animate('200ms')),\n    transition('expansionMaximizedAndToastClosed => expansionMaximizedAndToastClosed', animate('200ms')),\n       ])\n  ];\n}\n\nexport function controlsAnimations(): AnimationTriggerMetadata[] {\n  return [\n    trigger('controlsOffsetY', [\n      state('close', style({})),\n      state(\n        'firstRowFromBottom',\n        style({\n          bottom: '5px'\n        })\n      ),\n      state(\n        'firstRowFromBottom-expanded',\n        style({\n          bottom: '285px'\n        })\n      ),\n      state(\n        'firstRowFromBottom-expanded-maximized',\n        style({\n          bottom: '500px'\n        })\n      ),\n      state(\n        'secondRowFromBottom',\n        style({\n          bottom: '47px'\n        })\n      ),\n      state(\n        'thirdRowFromBottom',\n        style({\n          bottom: '104px'\n        })\n      ),\n      state(\n        '',\n        style({\n          bottom: 'calc(285px)'\n        })\n      ),\n      state(\n        'secondRowFromBottom-expanded',\n        style({\n          bottom: 'calc(285px + 52px)'\n        })\n      ),\n      state(\n        'thirdRowFromBottom-expanded',\n        style({\n          bottom: 'calc(285px + 104px)'\n        })\n      ),\n      transition('* => *', animate('200ms'))\n    ]),\n    trigger('mobileOffsetY', [\n      state(\n        'low',\n        style({\n          bottom: '50px'\n        })\n      ),\n      transition('* => *', animate('200ms'))\n    ])\n  ];\n}\n\nexport function controlSlideX(): AnimationTriggerMetadata {\n  return trigger('controlStateX', [\n    state(\n      'left',\n      style({\n        left: '60px'\n      })\n    ),\n    state(\n      'right',\n      style({\n        left: '465px'\n      })\n    ),\n    transition('* => *', animate('200ms'))\n  ]);\n}\n\nexport function controlSlideY(): AnimationTriggerMetadata {\n  return trigger('controlStateY', [\n    state('close', style({})),\n    state(\n      'firstRowFromBottom',\n      style({\n        bottom: '2px',\n        'margin-left': '0px'\n      })\n    ),\n    state(\n      'firstRowFromBottom-expanded',\n      style({\n        bottom: '285px',\n        'margin-left': '-55px'\n      })\n    ),\n    state(\n      'firstRowFromBottom-expanded-maximized',\n      style({\n        bottom: '500px', // workspace full size\n        'margin-left': '-55px'\n      })\n    ),\n    transition('* => *', animate('200ms'))\n  ]);\n}\n\nexport function mapSlideX(): AnimationTriggerMetadata {\n  return trigger('mapStateX', [\n    state(\n      'left',\n      style({\n        left: '0'\n      })\n    ),\n    state(\n      'right',\n      style({\n        left: '0'\n      })\n    ),\n    transition('* => *', animate('200ms'))\n  ]);\n}\nexport function mapSlideY(): AnimationTriggerMetadata {\n  return trigger('mapStateY', [\n    state(\n      '*',\n      style({\n        bottom: '0'\n      })\n    ),\n    transition('* => *', animate('200ms'))\n  ]);\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { IgoPanelModule, IgoStopPropagationModule } from '@igo2/common';\nimport { IgoLanguageModule } from '@igo2/core';\n\nimport { ToastPanelForExpansionComponent } from './toast-panel-for-expansion.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule,\n    IgoLanguageModule,\n    IgoPanelModule,\n    IgoStopPropagationModule\n  ],\n  exports: [ToastPanelForExpansionComponent],\n  declarations: [ToastPanelForExpansionComponent]\n})\nexport class AppToastPanelForExpansionModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { WelcomeWindowComponent } from './welcome-window.component';\nimport { IgoLanguageModule } from '@igo2/core';\nimport { IgoInteractiveTourModule, IgoCustomHtmlModule } from '@igo2/common';\n\n@NgModule({\n  imports: [\n    IgoLanguageModule,\n    CommonModule,\n    FormsModule,\n    MatDialogModule,\n    IgoInteractiveTourModule,\n    IgoCustomHtmlModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    MatToolbarModule\n  ],\n  declarations: [WelcomeWindowComponent],\n  exports: [WelcomeWindowComponent]\n})\nexport class IgoWelcomeWindowModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { IgoCoreModule } from '@igo2/core';\nimport {\n  IgoActionModule,\n  IgoWorkspaceModule,\n  IgoEntityModule,\n  IgoPanelModule,\n  IgoBackdropModule,\n  IgoFlexibleModule,\n  IgoContextMenuModule,\n  IgoToolModule,\n  IgoEntityTableModule,\n  IgoEntityTablePaginatorModule,\n  IgoInteractiveTourModule\n} from '@igo2/common';\n\nimport {\n  IgoGeoWorkspaceModule,\n  IgoFeatureModule,\n  IgoImportExportModule,\n  IgoMapModule,\n  IgoQueryModule,\n  IgoSearchModule\n} from '@igo2/geo';\nimport {\n  IgoContextManagerModule,\n  IgoContextMapButtonModule\n} from '@igo2/context';\n\nimport { IgoIntegrationModule } from '@igo2/integration';\n\nimport { MapOverlayModule } from './map-overlay/map-overlay.module';\nimport { AppExpansionPanelModule } from './expansion-panel/expansion-panel.module';\nimport { AppToastPanelModule } from './toast-panel/toast-panel.module';\nimport { AppSidenavModule } from './sidenav/sidenav.module';\n\nimport { PortalComponent } from './portal.component';\nimport { AppToastPanelForExpansionModule } from './toast-panel-for-expansion/toast-panel-for-expansion.module';\n\nimport { WelcomeWindowComponent } from './welcome-window/welcome-window.component';\nimport { IgoWelcomeWindowModule } from './welcome-window/welcome-window.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatTooltipModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatDialogModule,\n    IgoCoreModule,\n    IgoFeatureModule,\n    IgoImportExportModule,\n    IgoMapModule,\n    IgoQueryModule.forRoot(),\n    IgoSearchModule.forRoot(),\n    IgoActionModule,\n    IgoWorkspaceModule,\n    IgoEntityModule,\n    IgoGeoWorkspaceModule,\n    IgoPanelModule,\n    IgoToolModule,\n    IgoContextMenuModule,\n    IgoBackdropModule,\n    IgoFlexibleModule,\n    IgoIntegrationModule,\n    AppExpansionPanelModule,\n    AppToastPanelModule,\n    AppToastPanelForExpansionModule,\n    AppSidenavModule,\n    MapOverlayModule,\n    IgoContextManagerModule,\n    IgoContextMapButtonModule,\n    IgoEntityTableModule,\n    IgoEntityTablePaginatorModule,\n    IgoInteractiveTourModule,\n    IgoWelcomeWindowModule\n  ],\n  exports: [PortalComponent],\n  declarations: [PortalComponent],\n  entryComponents: [WelcomeWindowComponent]\n})\nexport class PortalModule {}\n","<igo-spinner igoSpinnerActivity></igo-spinner>\n<igo-message-center></igo-message-center>\n<igo-auth-form *ngIf=\"authConfig && authConfig.url\"></igo-auth-form>\n\n<app-portal igoStopDropPropagation></app-portal>\n","import { Component, Renderer2 } from '@angular/core';\nimport { Title, Meta } from '@angular/platform-browser';\nimport { zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { userAgent } from '@igo2/utils';\nimport {\n  LanguageService,\n  ConfigService,\n  AnalyticsService,\n  MessageService\n} from '@igo2/core';\nimport { AuthOptions } from '@igo2/auth';\nimport { AnalyticsListenerService } from '@igo2/integration';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public authConfig: AuthOptions;\n  private themeClass = 'blue-theme';\n\n  constructor(\n    protected languageService: LanguageService,\n    private configService: ConfigService,\n    private analyticsService: AnalyticsService,\n    private analyticsListenerService: AnalyticsListenerService,\n    private renderer: Renderer2,\n    private titleService: Title,\n    private metaService: Meta,\n    private messageService: MessageService\n  ) {\n    this.authConfig = this.configService.getConfig('auth');\n\n    this.readTitleConfig();\n    this.readThemeConfig();\n    this.readDescriptionConfig();\n\n    this.analyticsListenerService.listen();\n\n    this.detectOldBrowser();\n  }\n\n  private readTitleConfig() {\n    this.languageService.translate.get(this.configService.getConfig('title')).subscribe(title => {\n      if (title) {\n        this.titleService.setTitle(title);\n        this.metaService.addTag({ name: 'title', content: title });\n      }\n    });\n  }\n\n  private readThemeConfig() {\n    const theme = this.configService.getConfig('theme') || this.themeClass;\n    if (theme) {\n      this.renderer.addClass(document.body, theme);\n    }\n  }\n\n  private readDescriptionConfig() {\n    const description = this.configService.getConfig('description');\n    if (description) {\n      this.metaService.addTag({ name: 'description', content: description });\n    }\n  }\n\n  private detectOldBrowser() {\n    const oldBrowser = userAgent.satisfies({\n      ie: '<11',\n      chrome: '<64',\n      firefox: '<60'\n    });\n\n    if (oldBrowser) {\n      const translate = this.languageService.translate;\n      const title$ = translate.get('oldBrowser.title');\n      const message$ = translate.get('oldBrowser.message');\n      zip(title$, message$)\n        .pipe(\n          map(([title, message]) => ({\n            title,\n            message\n          }))\n        )\n        .subscribe((rep) =>\n          this.messageService.alert(rep.message, rep.title, {\n            timeOut: 15000\n          })\n        );\n    }\n  }\n}\n","import { BrowserModule, HammerModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {\n  provideConfigOptions,\n  IgoMessageModule,\n  IgoGestureModule,\n  RouteService\n} from '@igo2/core';\nimport { IgoSpinnerModule, IgoStopPropagationModule } from '@igo2/common';\nimport { IgoAuthModule } from '@igo2/auth';\nimport {\n  provideIChercheSearchSource,\n  provideIChercheReverseSearchSource,\n  provideNominatimSearchSource,\n  provideCoordinatesReverseSearchSource,\n  provideILayerSearchSource,\n  provideStoredQueriesSearchSource,\n  provideOsrmDirectionsSource,\n  provideOptionsApi,\n  provideCadastreSearchSource\n} from '@igo2/geo';\n\nimport { environment } from '../environments/environment';\nimport { PortalModule } from './pages';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot([]),\n    IgoAuthModule.forRoot(),\n    IgoGestureModule.forRoot(),\n    IgoMessageModule,\n    IgoSpinnerModule,\n    IgoStopPropagationModule,\n    PortalModule,\n    HammerModule\n  ],\n  providers: [\n    provideConfigOptions({\n      default: environment.igo,\n      path: './config/config.json'\n    }),\n    RouteService,\n    provideNominatimSearchSource(),\n    provideIChercheSearchSource(),\n    provideIChercheReverseSearchSource(),\n    provideCoordinatesReverseSearchSource(),\n    provideILayerSearchSource(),\n    provideStoredQueriesSearchSource(),\n    provideOsrmDirectionsSource(),\n    provideOptionsApi(),\n    provideCadastreSearchSource()\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}