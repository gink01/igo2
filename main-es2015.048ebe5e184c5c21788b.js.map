{"version":3,"sources":["webpack:///node_modules/@igo2/core/locale sync ^\\.\\/.*\\.json$","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/environments/environment.ts","webpack:///src/app/pages/portal/map-overlay/map-overlay.component.html","webpack:///src/app/pages/portal/map-overlay/map-overlay.component.ts","webpack:///src/app/pages/portal/map-overlay/map-overlay.module.ts","webpack:///src/app/pages/portal/expansion-panel/expansion-panel.animations.ts","webpack:///src/app/pages/portal/expansion-panel/expansion-panel-header.component.html","webpack:///src/app/pages/portal/expansion-panel/expansion-panel-header.component.ts","webpack:///src/app/pages/portal/expansion-panel/expansion-panel.component.ts","webpack:///src/app/pages/portal/expansion-panel/expansion-panel.component.html","webpack:///src/app/pages/portal/expansion-panel/expansion-panel.module.ts","webpack:///src/app/pages/portal/toast-panel/toast-panel.component.html","webpack:///src/app/pages/portal/toast-panel/toast-panel.component.ts","webpack:///src/app/pages/portal/toast-panel/toast-panel.module.ts","webpack:///src/app/pages/portal/sidenav/sidenav.component.html","webpack:///src/app/pages/portal/sidenav/sidenav.component.ts","webpack:///src/app/pages/portal/sidenav/sidenav.module.ts","webpack:///src/app/pages/portal/portal.animation.ts","webpack:///src/app/pages/portal/welcome-window/welcome-window.service.ts","webpack:///src/app/pages/portal/welcome-window/welcome-window.component.html","webpack:///src/app/pages/portal/welcome-window/welcome-window.component.ts","webpack:///src/app/pages/portal/toast-panel-for-expansion/toast-panel-for-expansion.animations.ts","webpack:///src/app/pages/portal/toast-panel-for-expansion/toast-panel-for-expansion.component.ts","webpack:///src/app/pages/portal/toast-panel-for-expansion/toast-panel-for-expansion.component.html","webpack:///src/app/pages/portal/portal.component.html","webpack:///src/app/pages/portal/portal.component.ts","webpack:///src/app/pages/portal/toast-panel-for-expansion/toast-panel-for-expansion.module.ts","webpack:///src/app/pages/portal/welcome-window/welcome-window.module.ts","webpack:///src/app/pages/portal/portal.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","webpackEmptyAsyncContext","Promise","then","environment","production","igo","app","forceCoordsNA","catalog","sources","title","url","showLegend","depot","importExport","language","prefix","interactiveTour","tourInMobile","pathToConfigFile","searchSources","nominatim","available","storedqueries","icherche","searchUrl","order","params","limit","coordinatesreverse","showInPointerSummary","icherchereverse","enabled","ilayer","cadastre","projections","alias","def","extent","searchOverlayStyle","base","markerColor","markerOpacity","markerOutlineColor","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWidth","focus","selection","queryOverlayStyle","MapOverlayComponent","contextService","mediaService","configService","mapOverlay","this","context$$","context$","subscribe","context","handleContextChange","media$$","media$","media","unsubscribe","undefined","getConfig","overlay","getMedia","includes","push","MapOverlayModule","showContent","duration","delay","easing","opacity","display","expandedChange","_expanded","value","emit","expanded","onToggleClick","maximized","_backdropShown","backdropShown","onBackdropClick","AppExpansionPanelModule","languageService","storageState","queryState","_opened","hasFeatureEmphasisOnSelection","_zoomAuto","_fullExtent","fullExtent$","BehaviorSubject","fullExtent","isHtmlDisplay","iconResizeWindows","icon","actionStore","actionbarMode","Overlay","multiple$","isResultSelected$","isSelectedResultOutOfView$","initialized","format","focusedResult$","withZoomButton","zoomAuto$","openedChange","fullExtentEvent","windowHtmlDisplayEvent","resultSelected$","opened","storageService","get","zoomAuto","setResizeWindowIcon","_map","_store","store","entities$","_entities","unselectResult","set","SESSION","next","results","length","selectResult","event","clear","getValue","localOlFeature","readFeature","data","dataProjection","projection","featureProjection","Default","all","isSelectedResultOutOfView$$","combineLatest","viewController","state$","pipe","debounceTime","bunch","selectedResult","selectedOlFeature","selectedOlFeatureExtent","latestResult","trigger","monitorResultOutOfView","resultOrResolution$$","tap","res","resolution$","buildResultEmphasis","storageChange$$","storageChange$","skipWhile","storageChange","key","change","currentValue","load","translate","instant","tooltip","handler","Zoom","availability","multiple","olFeatures","result","checkbox","checkCondition","v","isDesktop","clearFeatureEmphasis","olGeometry","getGeometry","getExtent","x","y","feature1","name","geometry","abstractFocusedOrSelectedResult","meta","style","assign","feature","queryOverlayStyleSelection","queryOverlayStyleFocus","setZIndex","queryResultsOverlay","addFeature","None","removeFeature","force","state","focused","update","selected","properties","target","setHtmlDisplay","features","removeFeatures","addFeatures","setFeatures","Mobile","preventDefault","keyCode","previousResult","nextResult","i","indexOf","action","SWIPE_ACTION","RIGHT","LEFT","UP","DOWN","className","args","reduceWindow","enlargeWindows","AppToastPanelModule","toolState","catalogState","title$","toolChange","toolbox","activeTool$$","activeTool$","tool","sidenavTitle","catalogStore","layer","layers","options","active","activatePreviousTool","deactivateTool","AppSidenavModule","expansionPanelAnimation","left","bottom","toastPanelAnimation","zIndex","controlsAnimations","controlSlideX","controlSlideY","mapSlideX","mapSlideY","igoVersionDifferentFromStorage","isVersionDifferentFromStorage","setStorageConfig","nbVisit","Number","remove","dialogConfig","disableClose","autoFocus","maxWidth","showAgain","dialog","welcomeWindowService","discoverTitleInLocale$","of","html$","computeHtml","closeAll","deltaDay","isDateParsable","releaseDate","Date","releaseDateAppConfig","releaseDateApp","isNaN","getDate","console","log","releaseDateString","day","month","getMonth","year","getFullYear","title$$","description","version","r","withHeader","route","workspaceState","authService","layerService","dataSourceService","cdRef","capabilitiesService","contextState","mapState","searchState","searchSourceService","importService","http","messageService","dialogWindow","queryService","directionState","toastPanelOffsetX$","sidenavOpened$","minSearchTermLength","hasExpansionPanel","hasGeolocateButton","showRotationButtonIfNoRotation","workspaceNotAvailableMessage","workspaceEntitySortChange$","paginatorOptions","pageSize","pageSizeOptions","workspaceMenuClass","workspaceMaximize$$","workspaceMaximize$","searchBarTerm","onSettingsChange$","termDefinedInUrl","termSplitter","termDefinedInUrlTriggered","addedLayers$$","contextMenuStore","contextLoaded","toastPanelForExpansionOpened","showToastPanelForExpansionToggle","selectedWorkspace$","toastPanelHtmlDisplay","_toastPanelOpened","igoSearchPointerSummaryEnabled","detectChanges","Tablet","getOrientation","Landscape","Portrait","isMobile","isTablet","isPortrait","sidenavOpened","workspacePanelExpanded","expansionPanelExpanded","searchResultsGeometryEnabled$","content","workspace","hasWidget","workspace$","window","searchTermSplitter$","initWelcomeWindow","authenticate$","authenticated","onChangeContext","searchCoordinate","contextMenuCoord","openGoogleMaps","openGoogleStreetView","queryStore","count$","pairwise","prevCnt","currentCnt","padding","toastPanelOpened","ol","once","readQueryParams","setSearchSettingsChange","selectedResult$","closeSidenav","workspaceEnabled$","empty$","workspaceEmpty","updateMapBrowserClass","workspaceMaximize","activeWks","activeWidget$$","activeWorkspaceWidget$","widget","openToastPanelForExpansion","closeToastPanelForExpansion","openSidenav$$","openSidenav$","openSidenav","sidenavMediaAndOrientation$$","orientation$","sidenavMediaAndOrientation","computeToastPanelOffsetX","isLandscape","getToastPanelExtent","wks","inResolutionRange$","entityStore","visible","matPaginator","workspacePaginator","baseQuerySearchSource","getQuerySearchSource","querySearchSourceArray","added","getProperties","_featureStore","featureStoreLayer","getAllowedFieldsAndAlias","getQueryTitle","querySearchSource","find","s","sourceTitle","request","reverse","source","queryResults","f","forEach","sub","toggleSidenav","term","routeParams","search","deactivateCustomFilterTermStrategy","setSearchTerm","replace","trim","onClearSearch","onBeforeSearch","isReverseSearch","research","enabledSources","getEnabledSources","filter","newResults","searchStore","concat","updateMany","setSearchResultsGeometryStatus","searchBar","nativeElement","getElementsByTagName","cancelOngoingAddLayer","queryParams","qParams","uri","readLayersQueryParams","contextManager","getTool","toolToOpen","toolToOpenOnContextChange","toolOrderToOpen","toolName","activateTool","handleExpansionAndToastOnMobile","searchResultsOverlay","setSelectedResult","getSources","searchSource","getClickCoordinate","contextmenuPoint","boundingMapBrowser","mapBrowser","getBoundingClientRect","top","scrollY","pageYOffset","scrollX","pageXOffset","pixel","coord","getCoordinateFromPixel","proj","open","getGoogleMapsCoordLink","getGoogleStreetViewLink","c","toFixed","join","header","classList","add","status","readToolParams","readSearchParams","readFocusFirst","setTimeout","resultItem","document","item","click","entities$$","stateView","all$","entities","take","computeFocusFirst","activateCustomFilterTermStrategy","searchResultsOlFeatures","entity","dataType","totalExtent","zoomToExtent","routingCoordLoaded","stopCoords","split","routingOptions","resultSelection","parseInt","stopsStore","storeInitialized$","init","first","stop","position","text","coordinates","routesFeatureStore","zoomToActiveRoute$","d","readLayersQueryParamsByType","readVectorQueryParams","paramValue","fromString","type","nameParamLayersKey","urlsKey","layersByService","urls","cnt","urlSrc","getQueryParam","extractLayersByService","layerFromUrl","layerOptions","removeUndefined","LAYERS","visibility","computeLayerVisibilityFromUrl","addLayerFromURL","lastIndex","lastIndexOf","fileName","slice","responseType","file","File","lastModified","now","import","onFileImportSuccess","error","onFileImportError","outLayersByService","startsWith","substr","endsWith","commonSourceOptions","optionsFromCapabilities","optionsFromApi","crossOrigin","arcgisClause","sourceOptions","queryable","queryFormat","VERSION","createAsyncLayer","l","addLayer","currentLayerid","visibleOnLayersParams","visibleOffLayersParams","visiblelayers","invisiblelayers","toString","auth","logged$","logged","createWelcomeWindow","hasWelcomeWindow","welcomWindowConfig","afterClosed","afterClosedWelcomeWindow","onToggleSidenavClick","onSearchTermChange","onPointerSummaryStatusChange","onSearchResultsGeometryStatusChange","onSearch","onSearchSettingsChange","toolChanged","onMapQuery","onContextMenuOpen","AppToastPanelForExpansionModule","IgoWelcomeWindowModule","PortalModule","forRoot","analyticsService","analyticsListenerService","renderer","titleService","metaService","themeClass","authConfig","readTitleConfig","readThemeConfig","readDescriptionConfig","listen","detectOldBrowser","setTitle","addTag","theme","addClass","body","satisfies","ie","chrome","firefox","message$","zip","message","rep","alert","timeOut","AppModule","default","path","catch","err"],"mappings":"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","file":"x","sourcesContent":["var map = {\n\t\"./en.auth.json\": \"4FNE\",\n\t\"./en.common.json\": \"MoB1\",\n\t\"./en.context.json\": \"N2Ms\",\n\t\"./en.core.json\": \"mPxz\",\n\t\"./en.geo.json\": \"/7uZ\",\n\t\"./en.integration.json\": \"TSY2\",\n\t\"./en.json\": \"Oh3F\",\n\t\"./fr.auth.json\": \"qcjx\",\n\t\"./fr.common.json\": \"O94P\",\n\t\"./fr.context.json\": \"Z1WX\",\n\t\"./fr.core.json\": \"wpjW\",\n\t\"./fr.geo.json\": \"8ktl\",\n\t\"./fr.integration.json\": \"Tzk/\",\n\t\"./fr.json\": \"+etH\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"I74T\";","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { LanguageOptions } from '@igo2/core';\r\nimport {\r\n  SearchSourceOptions,\r\n  ImportExportServiceOptions,\r\n  CatalogServiceOptions,\r\n  Projection,\r\n  CommonVectorStyleOptions\r\n} from '@igo2/geo';\r\n\r\ninterface Environment {\r\n  production: boolean;\r\n  igo: {\r\n    app: {\r\n      forceCoordsNA: boolean;\r\n    };\r\n    catalog?: CatalogServiceOptions;\r\n    importExport?: ImportExportServiceOptions;\r\n    language?: LanguageOptions;\r\n    searchSources?: { [key: string]: SearchSourceOptions };\r\n    projections?: Projection[];\r\n    interactiveTour?: { tourInMobile: boolean; pathToConfigFile: string };\r\n    depot?: { url: string; trainingGuides?: string[]; };\r\n    queryOverlayStyle?: {\r\n      base?: CommonVectorStyleOptions,\r\n      selection?: CommonVectorStyleOptions,\r\n      focus?: CommonVectorStyleOptions\r\n    };\r\n    searchOverlayStyle?: {\r\n      base?: CommonVectorStyleOptions,\r\n      selection?: CommonVectorStyleOptions,\r\n      focus?: CommonVectorStyleOptions\r\n    };\r\n  };\r\n}\r\n\r\nexport const environment: Environment = {\r\n  production: true,\r\n  igo: {\r\n    app: {\r\n      forceCoordsNA: false\r\n    },\r\n    catalog: {\r\n      sources: [\r\n        {\r\n          id: 'Gououvert',\r\n          title: 'Gouvouvert',\r\n          url: 'https://geoegl.msp.gouv.qc.ca/apis/ws/igo_gouvouvert.fcgi'\r\n        },\r\n        {\r\n          id: 'glace',\r\n          title: 'Carte de glace',\r\n          url: 'https://geoegl.msp.gouv.qc.ca/apis/ws/radarsat.fcgi',\r\n          showLegend: true\r\n        }\r\n      ]\r\n    },\r\n    depot: {\r\n      url: '/apis/depot'\r\n    },\r\n    importExport: {\r\n      url: 'https://geoegl.msp.gouv.qc.ca/apis/ogre'\r\n    },\r\n    language: {\r\n      prefix: './locale/'\r\n    },\r\n    interactiveTour: {\r\n      tourInMobile: true,\r\n      pathToConfigFile: './config/interactiveTour.json'\r\n    },\r\n    searchSources: {\r\n      nominatim: {\r\n        available: false\r\n      },\r\n      storedqueries: {\r\n        available: false\r\n      },\r\n      icherche: {\r\n        searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/icherche',\r\n        order: 2,\r\n        params: {\r\n          limit: '8'\r\n        }\r\n      },\r\n      coordinatesreverse: {\r\n        showInPointerSummary: true\r\n      },\r\n      icherchereverse: {\r\n        showInPointerSummary: true,\r\n        searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/terrapi',\r\n        order: 3,\r\n        enabled: true\r\n      },\r\n      ilayer: {\r\n        searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/icherche/layers',\r\n        order: 4,\r\n        params: {\r\n          limit: '5'\r\n        }\r\n      },\r\n      cadastre: {\r\n        enabled: false\r\n      }\r\n    },\r\n    projections: [\r\n      {\r\n        code: 'EPSG:32198',\r\n        alias: 'Quebec Lambert',\r\n        def:\r\n          '+proj=lcc +lat_1=60 +lat_2=46 +lat_0=44 +lon_0=-68.5 +x_0=0 +y_0=0 \\\r\n          +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs',\r\n        extent: [-799574, 45802, 891595.4, 1849567.5]\r\n      },\r\n      {\r\n        code: 'EPSG:3798',\r\n        alias: 'MTQ Lambert',\r\n        def:\r\n          '+proj=lcc +lat_1=50 +lat_2=46 +lat_0=44 +lon_0=-70 +x_0=800000 +y_0=0 \\\r\n          +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs',\r\n        extent: [31796.5834, 158846.2231, 1813323.4284, 2141241.0978]\r\n      }\r\n    ],\r\n    searchOverlayStyle: {\r\n      base: {\r\n        markerColor: '#5ed0fb',          // marker fill\r\n        markerOpacity: 0.8,              // marker opacity not applied if a rgba markerColor is provided\r\n        markerOutlineColor: '#a7e7ff',   // marker contour\r\n        fillColor: '#5ed0fb',            // poly\r\n        fillOpacity: 0.2,                // poly fill opacity not applied if a rgba fillColor is provided\r\n        strokeColor: '#5ed0fb',          // line and poly\r\n        strokeOpacity: 0.7,              // line and poly not applied if a rgba strokeColor is provided\r\n        strokeWidth: 2                   // line and poly\r\n      },\r\n      focus: {\r\n        markerColor: '#5ed0fb',          // marker fill\r\n        markerOpacity: 1,                // marker opacity not applied if a rgba markerColor is provided\r\n        markerOutlineColor: '#DFF7FF',   // marker contour\r\n        fillColor: '#5ed0fb',            // poly\r\n        fillOpacity: 0.3,                // poly fill opacity not applied if a rgba fillColor is provided\r\n        strokeColor: '#DFF7FF',          // line and poly\r\n        strokeOpacity: 1,                // line and poly not applied if a rgba strokeColor is provided\r\n        strokeWidth: 2                   // line and poly\r\n      },\r\n      selection: {\r\n        markerColor: '#00a1de',           // marker fill\r\n        markerOpacity: 1,                 // marker opacity not applied if a rgba markerColor is provided\r\n        markerOutlineColor: '#ffffff',    // marker contour\r\n        fillColor: '#00a1de',             // poly\r\n        fillOpacity: 0.3,                 // poly fill opacity not applied if a rgba fillColor is provided\r\n        strokeColor: '#00A1DE',           // line and poly\r\n        strokeOpacity: 1,                 // line and poly not applied if a rgba strokeColor is provided\r\n        strokeWidth: 2                    // line and poly\r\n      }\r\n    },\r\n    queryOverlayStyle: {\r\n      base: {\r\n        markerColor: '#5ed0fb',          // marker fill\r\n        markerOpacity: 0.8,              // marker opacity not applied if a rgba markerColor is provided\r\n        markerOutlineColor: '#a7e7ff',   // marker contour\r\n        fillColor: '#5ed0fb',            // poly\r\n        fillOpacity: 0.2,                // poly fill opacity not applied if a rgba fillColor is provided\r\n        strokeColor: '#5ed0fb',          // line and poly\r\n        strokeOpacity: 0.7,              // line and poly not applied if a rgba strokeColor is provided\r\n        strokeWidth: 2                   // line and poly\r\n      },\r\n      focus: {\r\n        markerColor: '#5ed0fb',          // marker fill\r\n        markerOpacity: 1,                // marker opacity not applied if a rgba markerColor is provided\r\n        markerOutlineColor: '#DFF7FF',   // marker contour\r\n        fillColor: '#5ed0fb',            // poly\r\n        fillOpacity: 0.3,                // poly fill opacity not applied if a rgba fillColor is provided\r\n        strokeColor: '#DFF7FF',          // line and poly\r\n        strokeOpacity: 1,                // line and poly not applied if a rgba strokeColor is provided\r\n        strokeWidth: 2                   // line and poly\r\n      },\r\n      selection: {\r\n        markerColor: '#00a1de',           // marker fill\r\n        markerOpacity: 1,                 // marker opacity not applied if a rgba markerColor is provided\r\n        markerOutlineColor: '#ffffff',    // marker contour\r\n        fillColor: '#00a1de',             // poly\r\n        fillOpacity: 0.3,                 // poly fill opacity not applied if a rgba fillColor is provided\r\n        strokeColor: '#00A1DE',           // line and poly\r\n        strokeOpacity: 1,                 // line and poly not applied if a rgba strokeColor is provided\r\n        strokeWidth: 2                    // line and poly\r\n      }\r\n    }\r\n  }\r\n};\r\n","<ng-container *ngFor=\"let element of mapOverlay; let i = index\">\r\n  <div class=\"mapOverlayDefault\" [ngClass]=\"element.cssClass\"\r\n       [style.position]=\"element.fixed ? 'fixed' : 'absolute'\"\r\n       [style.marginLeft]=\"element.marginLeft\"\r\n       [style.marginRight]=\"element.marginRight\"\r\n       [style.marginTop]=\"element.marginTop\"\r\n       [style.marginBottom]=\"element.marginBottom\"\r\n       [style.fontSize]=\"element.fontSize\">\r\n    <a *ngIf=\"element.link; else templateNoLink\"\r\n        target=\"_blank\" [href]='element.link'>\r\n        {{ element.text }}\r\n        <ng-container *ngIf=\"element.imgSrc\">\r\n          <img [src]=\"element.imgSrc\"\r\n               [alt]=\"element.alt\"\r\n               [ngStyle]=\"{ 'width': element.imgSize }\">\r\n        </ng-container>\r\n    </a>\r\n\r\n\r\n  <ng-template #templateNoLink>\r\n    {{ element.text }}\r\n    <ng-container *ngIf=\"element.imgSrc\">\r\n      <img [src]=\"element.imgSrc\" [alt]=\"element.alt\" [ngStyle]=\"{ 'width': element.imgSize }\">\r\n    </ng-container>\r\n\r\n  </ng-template>\r\n  </div>\r\n</ng-container>\r\n","import { Component, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Context, ContextService } from '@igo2/context';\r\nimport { MediaService, ConfigService } from '@igo2/core';\r\nimport { MapOverlay } from './map-overlay.interface';\r\n\r\n@Component({\r\n  selector: 'app-map-overlay',\r\n  templateUrl: './map-overlay.component.html',\r\n  styleUrls: ['./map-overlay.component.scss']\r\n})\r\n\r\nexport class MapOverlayComponent implements AfterViewInit, OnDestroy {\r\n  public mapOverlay: MapOverlay[] = [];\r\n  private context$$: Subscription;\r\n  private media$$: Subscription;\r\n  private context: Context;\r\n\r\n  constructor(\r\n    private contextService: ContextService,\r\n    private mediaService: MediaService,\r\n    private configService: ConfigService\r\n  ) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.context$$ = this.contextService.context$.subscribe(context => {\r\n        this.handleContextChange(context);\r\n        this.context = context;\r\n        }\r\n    );\r\n    this.media$$ = this.mediaService.media$.subscribe(media =>\r\n      this.handleContextChange(this.context)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.context$$.unsubscribe();\r\n    this.media$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextChange(context: Context) {\r\n    let mapOverlay = [];\r\n    if (context !== undefined) {\r\n      this.mapOverlay = [];\r\n\r\n      if (context['mapOverlay']) {\r\n        mapOverlay = context['mapOverlay'];\r\n      } else if (this.configService.getConfig('mapOverlay')) {\r\n        mapOverlay = this.configService.getConfig('mapOverlay');\r\n      }\r\n      for (const overlay of mapOverlay) {\r\n\r\n        // If no media define use default to desktop, display only if current media is on context definition\r\n        if ((!overlay.media && this.mediaService.getMedia() === 'desktop') ||\r\n        (overlay.media && overlay.media.includes(this.mediaService.getMedia()))) {\r\n          this.mapOverlay.push(overlay);\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\nimport { MapOverlayComponent } from './map-overlay.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [MapOverlayComponent],\r\n  declarations: [MapOverlayComponent]\r\n})\r\nexport class MapOverlayModule {}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function showContent(\r\n  duration = '150ms',\r\n  delay = '300ms',\r\n  easing = 'ease-in-out'\r\n): AnimationTriggerMetadata {\r\n  return trigger('showContent', [\r\n    state(\r\n      'true',\r\n      style({\r\n        opacity: 1,\r\n        display: 'block'\r\n      })\r\n    ),\r\n    state(\r\n      'false',\r\n      style({\r\n        opacity: 0,\r\n        display: 'none'\r\n      })\r\n    ),\r\n    transition('false => true', animate(`${duration} ${delay} ${easing}`)),\r\n    transition('true => false', animate('0ms'))\r\n  ]);\r\n}\r\n","<div>\r\n  <div class=\"app-expansion-panel-trigger-container\">\r\n    <button mat-icon-button (click)=\"onToggleClick()\" \r\n    [matTooltip]=\"(!expanded ? 'workspace.open' : 'workspace.close') | translate\"\r\n    color=\"primary\">\r\n      <mat-icon *ngIf=\"!expanded\" svgIcon=\"launch\"></mat-icon>\r\n      <mat-icon *ngIf=\"expanded\" style=\"transform: rotate(180deg)\" svgIcon=\"launch\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"app-expansion-panel-content\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostBinding,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-expansion-panel-header',\r\n  templateUrl: './expansion-panel-header.component.html',\r\n  styleUrls: ['./expansion-panel-header.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ExpansionPanelHeaderComponent {\r\n  @Input()\r\n  get expanded(): boolean {\r\n    return this._expanded;\r\n  }\r\n  set expanded(value: boolean) {\r\n    if (value === this._expanded) {\r\n      return;\r\n    }\r\n\r\n    this._expanded = value;\r\n    this.expandedChange.emit(this._expanded);\r\n  }\r\n  private _expanded: boolean;\r\n\r\n  @Output() expandedChange = new EventEmitter<boolean>();\r\n\r\n  @HostBinding('class.app-expansion-panel-header-expanded')\r\n  get hasExpandedClass() {\r\n    return this.expanded;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  onToggleClick() {\r\n    this.expanded = !this.expanded;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostBinding,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { showContent } from './expansion-panel.animations';\r\n\r\n@Component({\r\n  selector: 'app-expansion-panel',\r\n  templateUrl: './expansion-panel.component.html',\r\n  styleUrls: ['./expansion-panel.component.scss'],\r\n  animations: [showContent()],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ExpansionPanelComponent {\r\n  @Input()\r\n  get expanded(): boolean {\r\n    return this._expanded;\r\n  }\r\n  set expanded(value: boolean) {\r\n    if (value === this._expanded) {\r\n      return;\r\n    }\r\n\r\n    this._expanded = value;\r\n    this.expandedChange.emit(this._expanded);\r\n  }\r\n  private _expanded: boolean;\r\n\r\n  @Input() maximized: Boolean = false;\r\n\r\n  @Input()\r\n  get backdropShown(): boolean {\r\n    return this._backdropShown;\r\n  }\r\n  set backdropShown(value: boolean) {\r\n    this._backdropShown = value;\r\n  }\r\n  private _backdropShown: boolean;\r\n\r\n  @Output() expandedChange = new EventEmitter<boolean>();\r\n\r\n  @HostBinding('class.app-expansion-panel-expanded')\r\n  get hasExpandedClass() {\r\n    return this.expanded && !this.maximized;\r\n  }\r\n\r\n  @HostBinding('class.app-expansion-panel-expanded-maximized')\r\n  get hasExpandedFullClass() {\r\n    return this.expanded && this.maximized;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  onBackdropClick() {\r\n    this.expanded = false;\r\n    this.backdropShown = false;\r\n  }\r\n}\r\n","<div>\r\n\r\n  <div class=\"app-expansion-panel-container\">\r\n    <igo-backdrop\r\n      [shown]=\"backdropShown\"\r\n      (click)=\"onBackdropClick()\">\r\n    </igo-backdrop>\r\n\r\n    <app-expansion-panel-header [(expanded)]=\"expanded\">\r\n      <ng-content select=\"[expansionPanelHeader]\"></ng-content>\r\n    </app-expansion-panel-header>\r\n\r\n    <div\r\n      class=\"app-expansion-panel-content mat-elevation-z4\"\r\n      [@showContent]=\"expanded\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoBackdropModule } from '@igo2/common';\r\n\r\nimport { ExpansionPanelComponent } from './expansion-panel.component';\r\nimport { ExpansionPanelHeaderComponent } from './expansion-panel-header.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatListModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule,\r\n    IgoBackdropModule\r\n  ],\r\n  exports: [ExpansionPanelComponent],\r\n  declarations: [ExpansionPanelComponent, ExpansionPanelHeaderComponent]\r\n})\r\nexport class AppExpansionPanelModule {}\r\n","<ng-template #toast>\r\n  <igo-panel\r\n    *ngIf=\"store.entities$ | async\"\r\n    [ngClass] = \"getClassPanel()\"\r\n    [title]=\"resultSelected$.value ? getTitle(resultSelected$.value) : ('toastPanel.title' | translate )\"\r\n    (click)=\"onToggleClick($event)\"\r\n    tabindex=\"0\"\r\n    (keydown)=\"handleKeyboardEvent($event)\">\r\n\r\n    <igo-actionbar\r\n      id=\"igo-actionbar\"\r\n      panelLeftButton\r\n      [store]=\"actionStore\"\r\n      [withIcon]=\"true\"\r\n      [icon]=\"icon\"\r\n      [withTitle]=\"actionbarMode === 'overlay'\"\r\n      [horizontal]=\"true\"\r\n      [mode]=\"actionbarMode\">\r\n    </igo-actionbar>\r\n\r\n    <button\r\n      *ngIf=\"resultSelected$.value\"\r\n      mat-icon-button\r\n      igoStopPropagation\r\n      panelLeftButton\r\n      [matTooltip]=\"((isSelectedResultOutOfView$ | async) ? 'toastPanel.zoomOnFeatureTooltipOutOfView' : 'toastPanel.zoomOnFeatureTooltip') | translate\"\r\n      matTooltipShowDelay=\"500\"\r\n      (click)=\"zoomTo()\">\r\n      <mat-icon\r\n      [matBadge]=\"(isSelectedResultOutOfView$ | async) ? '!' : ''\"\r\n      matBadgeColor=\"accent\"\r\n      matBadgeSize=\"small\"\r\n      [matBadgeHidden]=\"!(isSelectedResultOutOfView$ | async)\"     \r\n      svgIcon=\"magnify-plus-outline\"></mat-icon>\r\n    </button>\r\n\r\n    <button\r\n      *ngIf=\"resultSelected$.value\"\r\n      [disabled]=\"results[0].meta.id === resultSelected$.value.meta.id\"\r\n      mat-icon-button\r\n      igoStopPropagation\r\n      panelLeftButton\r\n      [matTooltip]=\"'toastPanel.previousFeatureTooltip' | translate\"\r\n      matTooltipShowDelay=\"500\"\r\n      (click)=\"previousResult()\">\r\n      <mat-icon svgIcon=\"chevron-left\"></mat-icon>\r\n    </button>\r\n\r\n    <button\r\n      *ngIf=\"resultSelected$.value\"\r\n      [disabled]=\"results[results.length-1].meta.id === resultSelected$.value.meta.id\"\r\n      mat-icon-button\r\n      igoStopPropagation\r\n      panelRightButton\r\n      [matTooltip]=\"'toastPanel.nextFeatureTooltip' | translate\"\r\n      matTooltipShowDelay=\"500\"\r\n      (click)=\"nextResult()\">\r\n      <mat-icon svgIcon=\"chevron-right\"></mat-icon>\r\n    </button>\r\n\r\n    <button\r\n     *ngIf = \"isDesktop()\"\r\n      mat-icon-button\r\n      igoStopPropagation\r\n      panelRightButton\r\n      (click)=\"resizeWindows()\"\r\n      [matTooltip]=\"((this.fullExtent$ | async) ? 'toastPanel.standardExtentTooltip' : 'toastPanel.fullExtentTooltip') | translate\"\r\n      matTooltipShowDelay=\"500\">\r\n      <mat-icon svgIcon={{iconResizeWindows}}></mat-icon>\r\n    </button>\r\n    <button\r\n      mat-icon-button\r\n      igoStopPropagation\r\n      panelRightButton\r\n      (click)=\"clear()\">\r\n      <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n\r\n    <div #content class=\"toast-content\">\r\n\r\n      <igo-feature-details\r\n        *ngIf=\"resultSelected$.value\"\r\n        [feature]=\"resultSelected$.value.data\"\r\n        (htmlDisplayEvent)=setHtmlDisplay($event)>\r\n      </igo-feature-details>\r\n\r\n      <igo-search-results\r\n        *ngIf=\"!resultSelected$.value\"\r\n        [map]=\"map\"\r\n        [store]=\"store\"\r\n        [showIcons]=\"true\"\r\n        [withZoomButton]=\"withZoomButton\"\r\n        (resultFocus)=\"focusResult($event)\"\r\n        (resultUnfocus)=\"unfocusResult($event, true)\"\r\n        (resultSelect)=\"selectResult($event)\">\r\n      </igo-search-results>\r\n    </div>\r\n  </igo-panel>\r\n</ng-template>\r\n\r\n<div *ngIf=\"isMobile(); else toast\"\r\nclass=\"swipe-fix\"\r\n(swipeleft)=\"swipe($event.type)\"\r\n(swiperight)=\"swipe($event.type)\"\r\n(swipeup)=\"swipe($event.type)\"\r\n(swipedown)=\"swipe($event.type)\">\r\n\r\n<ng-template [ngTemplateOutlet]=\"toast\"></ng-template>\r\n</div>\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostBinding,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable, combineLatest, Subscription } from 'rxjs';\r\nimport { debounceTime, map, skipWhile, tap } from 'rxjs/operators';\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\nimport olFeature from 'ol/Feature';\r\nimport olPoint from 'ol/geom/Point';\r\n\r\nimport {\r\n  getEntityTitle,\r\n  EntityStore,\r\n  ActionStore,\r\n  Action,\r\n  ActionbarMode\r\n} from '@igo2/common';\r\nimport {\r\n  Feature,\r\n  SearchResult,\r\n  IgoMap,\r\n  FeatureMotion,\r\n  moveToOlFeatures,\r\n  featureToOl,\r\n  featuresAreTooDeepInView,\r\n  featureFromOl,\r\n  getCommonVectorStyle,\r\n  getCommonVectorSelectedStyle,\r\n  featuresAreOutOfView,\r\n  computeOlFeaturesExtent\r\n} from '@igo2/geo';\r\nimport {\r\n  Media,\r\n  MediaService,\r\n  LanguageService,\r\n  StorageService,\r\n  StorageScope,\r\n  StorageServiceEvent\r\n} from '@igo2/core';\r\nimport { QueryState, StorageState } from '@igo2/integration';\r\n\r\n@Component({\r\n  selector: 'app-toast-panel',\r\n  templateUrl: './toast-panel.component.html',\r\n  styleUrls: ['./toast-panel.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ToastPanelComponent implements OnInit, OnDestroy {\r\n  static SWIPE_ACTION = {\r\n    RIGHT: 'swiperight',\r\n    LEFT: 'swipeleft',\r\n    UP: 'swipeup',\r\n    DOWN: 'swipedown'\r\n  };\r\n\r\n  get storageService(): StorageService {\r\n    return this.storageState.storageService;\r\n  }\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get store(): EntityStore<SearchResult<Feature>> {\r\n    return this._store;\r\n  }\r\n  set store(value: EntityStore<SearchResult<Feature>>) {\r\n    this._store = value;\r\n    this.store.entities$.subscribe((_entities) => {\r\n      this.unselectResult();\r\n    });\r\n  }\r\n  private _store: EntityStore<SearchResult<Feature>>;\r\n\r\n  @Input()\r\n  get opened(): boolean {\r\n    return this._opened;\r\n  }\r\n  set opened(value: boolean) {\r\n    if (value !== !this._opened) {\r\n      return;\r\n    }\r\n    this._opened = value;\r\n    this.storageService.set('toastOpened', value, StorageScope.SESSION);\r\n    this.openedChange.emit(value);\r\n  }\r\n  private _opened = true;\r\n\r\n  @Input() hasFeatureEmphasisOnSelection: Boolean = false;\r\n\r\n  get zoomAuto(): boolean {\r\n    return this._zoomAuto;\r\n  }\r\n  set zoomAuto(value) {\r\n    if (value !== !this._zoomAuto) {\r\n      return;\r\n    }\r\n    this._zoomAuto = value;\r\n    this.zoomAuto$.next(value);\r\n    this.storageService.set('zoomAuto', value);\r\n  }\r\n  private _zoomAuto = false;\r\n\r\n  // To allow the toast to use much larger extent on the map\r\n  get fullExtent(): boolean {\r\n    return this._fullExtent;\r\n  }\r\n  set fullExtent(value) {\r\n    if (value !== !this._fullExtent) {\r\n      return;\r\n    }\r\n    this._fullExtent = value;\r\n    this.fullExtent$.next(value);\r\n    this.fullExtentEvent.emit(value);\r\n    this.storageService.set('fullExtent', value);\r\n  }\r\n  private _fullExtent = false;\r\n\r\n  public fullExtent$: BehaviorSubject<boolean> = new BehaviorSubject(\r\n    this.fullExtent\r\n  );\r\n  public isHtmlDisplay = false;\r\n  public iconResizeWindows = '';\r\n\r\n  public icon = 'menu';\r\n\r\n  public actionStore = new ActionStore([]);\r\n  public actionbarMode = ActionbarMode.Overlay;\r\n\r\n  private multiple$ = new BehaviorSubject(false);\r\n  private isResultSelected$ = new BehaviorSubject(false);\r\n  public isSelectedResultOutOfView$ = new BehaviorSubject(false);\r\n  private isSelectedResultOutOfView$$: Subscription;\r\n  private storageChange$$: Subscription;\r\n  private initialized = true;\r\n\r\n  private format = new olFormatGeoJSON();\r\n\r\n  private resultOrResolution$$: Subscription;\r\n  private focusedResult$: BehaviorSubject<\r\n    SearchResult<Feature>\r\n  > = new BehaviorSubject(undefined);\r\n  private abstractFocusedOrSelectedResult: Feature;\r\n\r\n  public withZoomButton = true;\r\n  zoomAuto$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  @Output() openedChange = new EventEmitter<boolean>();\r\n\r\n  @Output() fullExtentEvent = new EventEmitter<boolean>();\r\n  @Output() windowHtmlDisplayEvent = new EventEmitter<boolean>();\r\n\r\n  resultSelected$ = new BehaviorSubject<SearchResult<Feature>>(undefined);\r\n\r\n  // @HostBinding('class.app-toast-panel-opened')\r\n  // get hasOpenedClass() {\r\n  //   return this.opened;\r\n  // }\r\n\r\n  // @HostBinding('class.app-full-toast-panel-collapsed')\r\n  // get hasFullCollapsedClass() {\r\n  //   return !this.opened && this.fullExtent;\r\n  // }\r\n  getClassPanel() {\r\n    return {\r\n      'app-toast-panel-opened' : this.opened && !this.fullExtent && !this.isHtmlDisplay,\r\n      'app-full-toast-panel-opened' :\r\n        this.opened && this.fullExtent &&\r\n        !this.isHtmlDisplay,\r\n\r\n      'app-toast-panel-html' :\r\n        this.opened &&\r\n        !this.fullExtent &&\r\n        this.resultSelected$.value &&\r\n        this.isHtmlDisplay,\r\n\r\n      'app-toast-panel-html-large' :\r\n        this.opened &&\r\n        this.fullExtent &&\r\n        this.resultSelected$.value &&\r\n        this.isHtmlDisplay,\r\n\r\n      'app-toast-panel-collapsed': !this.opened && !this.fullExtent && !this.isHtmlDisplay,\r\n      'app-full-toast-panel-collapsed' : !this.opened && this.fullExtent && !this.isHtmlDisplay,\r\n      'app-toast-panel-html-collapsed' : !this.opened && this.isHtmlDisplay\r\n    };\r\n  }\r\n\r\n\r\n  @HostBinding('style.visibility')\r\n  get displayStyle() {\r\n    if (this.results.length) {\r\n      if (this.results.length === 1 && this.initialized) {\r\n        this.selectResult(this.results[0]);\r\n      }\r\n      return 'visible';\r\n    }\r\n    return 'hidden';\r\n  }\r\n\r\n  // @HostBinding('class.app-full-toast-panel-opened')\r\n  // get hasFullOpenedClass() {\r\n  //   return this.opened && this.fullExtent;\r\n  // }\r\n\r\n  @HostListener('document:keydown.escape', ['$event']) onEscapeHandler(\r\n    event: KeyboardEvent\r\n  ) {\r\n    this.clear();\r\n  }\r\n\r\n  @HostListener('document:keydown.backspace', ['$event']) onBackHandler(\r\n    event: KeyboardEvent\r\n  ) {\r\n    this.unselectResult();\r\n  }\r\n\r\n  @HostListener('document:keydown.z', ['$event']) onZoomHandler(\r\n    event: KeyboardEvent\r\n  ) {\r\n    if (this.isResultSelected$.getValue() === true) {\r\n      const localOlFeature = this.format.readFeature(\r\n        this.resultSelected$.getValue().data,\r\n        {\r\n          dataProjection: this.resultSelected$.getValue().data.projection,\r\n          featureProjection: this.map.projection\r\n        }\r\n      );\r\n      moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Default);\r\n    }\r\n  }\r\n\r\n  get results(): SearchResult<Feature>[] {\r\n    // return this.store.view.filter((e) => e.meta.dataType === FEATURE).all();\r\n    return this.store.all();\r\n  }\r\n\r\n  get multiple(): Observable<boolean> {\r\n    this.results.length\r\n      ? this.multiple$.next(true)\r\n      : this.multiple$.next(false);\r\n    return this.multiple$;\r\n  }\r\n\r\n  constructor(\r\n    public mediaService: MediaService,\r\n    public languageService: LanguageService,\r\n    private storageState: StorageState,\r\n    private queryState: QueryState\r\n  ) {\r\n    this.opened = this.storageService.get('toastOpened') as boolean;\r\n    this.zoomAuto = this.storageService.get('zoomAuto') as boolean;\r\n    this.fullExtent = this.storageService.get('fullExtent') as boolean;\r\n    this.setResizeWindowIcon();\r\n  }\r\n\r\n  private monitorResultOutOfView() {\r\n    this.isSelectedResultOutOfView$$ = combineLatest([\r\n      this.map.viewController.state$,\r\n      this.resultSelected$\r\n    ])\r\n      .pipe(debounceTime(100))\r\n      .subscribe((bunch) => {\r\n        const selectedResult = bunch[1];\r\n        if (!selectedResult) {\r\n          this.isSelectedResultOutOfView$.next(false);\r\n          return;\r\n        }\r\n        const selectedOlFeature = featureToOl(selectedResult.data, this.map.projection);\r\n        const selectedOlFeatureExtent = computeOlFeaturesExtent(this.map, [selectedOlFeature]);\r\n        this.isSelectedResultOutOfView$.next(featuresAreOutOfView(this.map, selectedOlFeatureExtent));\r\n      });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.store.entities$.subscribe(() => {\r\n      this.initialized = true;\r\n    });\r\n    this.monitorResultOutOfView();\r\n\r\n    let latestResult;\r\n    let trigger;\r\n    if (this.hasFeatureEmphasisOnSelection) {\r\n      this.resultOrResolution$$ = combineLatest([\r\n        this.focusedResult$.pipe(\r\n          tap((res) => {\r\n            latestResult = res;\r\n            trigger = 'focused';\r\n          })\r\n        ),\r\n        this.resultSelected$.pipe(\r\n          tap((res) => {\r\n            latestResult = res;\r\n            trigger = 'selected';\r\n          })\r\n        ),\r\n        this.map.viewController.resolution$,\r\n        this.store.entities$\r\n      ]).subscribe(() => this.buildResultEmphasis(latestResult, trigger));\r\n    }\r\n\r\n    this.storageChange$$ = this.storageService.storageChange$\r\n      .pipe(skipWhile((storageChange: StorageServiceEvent) => storageChange.key !== 'zoomAuto'))\r\n      .subscribe((change) => {\r\n        this.zoomAuto = change.currentValue;\r\n      });\r\n\r\n    this.actionStore.load([\r\n      {\r\n        id: 'list',\r\n        title: this.languageService.translate.instant('toastPanel.backToList'),\r\n        icon: 'format-list-bulleted-square',\r\n        tooltip: this.languageService.translate.instant(\r\n          'toastPanel.listButton'\r\n        ),\r\n        display: () => {\r\n          return this.isResultSelected$;\r\n        },\r\n        handler: () => {\r\n          this.unselectResult();\r\n        }\r\n      },\r\n      {\r\n        id: 'zoomFeature',\r\n        title: this.languageService.translate.instant(\r\n          'toastPanel.zoomOnFeature'\r\n        ),\r\n        icon: 'magnify-plus-outline',\r\n        tooltip: this.languageService.translate.instant(\r\n          'toastPanel.zoomOnFeatureTooltip'\r\n        ),\r\n        display: () => {\r\n          return this.isResultSelected$;\r\n        },\r\n        handler: () => {\r\n          const localOlFeature = this.format.readFeature(\r\n            this.resultSelected$.getValue().data,\r\n            {\r\n              dataProjection: this.resultSelected$.getValue().data.projection,\r\n              featureProjection: this.map.projection\r\n            }\r\n          );\r\n          moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Zoom);\r\n        }\r\n      },\r\n      {\r\n        id: 'zoomResults',\r\n        title: this.languageService.translate.instant(\r\n          'toastPanel.zoomOnFeatures'\r\n        ),\r\n        tooltip: this.languageService.translate.instant(\r\n          'toastPanel.zoomOnFeaturesTooltip'\r\n        ),\r\n        icon: 'magnify-scan',\r\n        availability: () => {\r\n          return this.multiple;\r\n        },\r\n        handler: () => {\r\n          const olFeatures = [];\r\n          for (const result of this.store.all()) {\r\n            const localOlFeature = this.format.readFeature(result.data, {\r\n              dataProjection: result.data.projection,\r\n              featureProjection: this.map.projection\r\n            });\r\n            olFeatures.push(localOlFeature);\r\n          }\r\n          moveToOlFeatures(this.map, olFeatures, FeatureMotion.Zoom);\r\n        }\r\n      },\r\n      {\r\n        id: 'zoomAuto',\r\n        title: this.languageService.translate.instant('toastPanel.zoomAuto'),\r\n        tooltip: this.languageService.translate.instant(\r\n          'toastPanel.zoomAutoTooltip'\r\n        ),\r\n        checkbox: true,\r\n        checkCondition: this.zoomAuto$,\r\n        handler: () => {\r\n          this.zoomAuto = !this.zoomAuto;\r\n          if (this.zoomAuto && this.isResultSelected$.value === true) {\r\n            this.selectResult(this.resultSelected$.getValue());\r\n          }\r\n        }\r\n      },\r\n      {\r\n        id: 'fullExtent',\r\n        title: this.languageService.translate.instant('toastPanel.fullExtent'),\r\n        tooltip: this.languageService.translate.instant(\r\n          'toastPanel.fullExtentTooltip'\r\n        ),\r\n        icon: 'arrow-expand',\r\n        display: () => {\r\n          return this.fullExtent$.pipe(map((v) => !v  && !this.isDesktop()));\r\n        },\r\n        handler: () => {\r\n          this.fullExtent = true;\r\n        }\r\n      },\r\n      {\r\n        id: 'standardExtent',\r\n        title: this.languageService.translate.instant(\r\n          'toastPanel.standardExtent'\r\n        ),\r\n        tooltip: this.languageService.translate.instant(\r\n          'toastPanel.standardExtentTooltip'\r\n        ),\r\n        icon: 'arrow-collapse',\r\n        display: () => {\r\n          return this.fullExtent$.pipe(map((v) => v && !this.isDesktop()));\r\n        },\r\n        handler: () => {\r\n          this.fullExtent = false;\r\n        }\r\n      }\r\n    ]);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.resultOrResolution$$) {\r\n      this.resultOrResolution$$.unsubscribe();\r\n    }\r\n    if (this.isSelectedResultOutOfView$$) {\r\n      this.isSelectedResultOutOfView$$.unsubscribe();\r\n    }\r\n    if (this.storageChange$$) {\r\n      this.storageChange$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private buildResultEmphasis(\r\n    result: SearchResult<Feature>,\r\n    trigger: 'selected' | 'focused' | undefined\r\n  ) {\r\n    this.clearFeatureEmphasis();\r\n    if (!result || (trigger === 'selected' && this.zoomAuto)) {\r\n      return;\r\n    }\r\n    const myOlFeature = featureToOl(result.data, this.map.projection);\r\n    const olGeometry = myOlFeature.getGeometry();\r\n    if (featuresAreTooDeepInView(this.map, olGeometry.getExtent() as [number, number, number, number], 0.0025)) {\r\n      const extent = olGeometry.getExtent();\r\n      const x = extent[0] + (extent[2] - extent[0]) / 2;\r\n      const y = extent[1] + (extent[3] - extent[1]) / 2;\r\n      const feature1 = new olFeature({\r\n        name: 'abstractFocusedOrSelectedResult',\r\n        geometry: new olPoint([x, y])\r\n      });\r\n      this.abstractFocusedOrSelectedResult = featureFromOl(\r\n        feature1,\r\n        this.map.projection\r\n      );\r\n      this.abstractFocusedOrSelectedResult.meta.style =\r\n        getCommonVectorSelectedStyle(\r\n          Object.assign({},\r\n            { feature: this.abstractFocusedOrSelectedResult },\r\n            trigger === 'selected' ?\r\n              this.queryState.queryOverlayStyleSelection :\r\n              this.queryState.queryOverlayStyleFocus));\r\n      this.abstractFocusedOrSelectedResult.meta.style.setZIndex(2000);\r\n      this.map.queryResultsOverlay.addFeature(\r\n        this.abstractFocusedOrSelectedResult,\r\n        FeatureMotion.None\r\n      );\r\n    }\r\n  }\r\n\r\n  private clearFeatureEmphasis() {\r\n    if (this.abstractFocusedOrSelectedResult) {\r\n      this.map.queryResultsOverlay.removeFeature(this.abstractFocusedOrSelectedResult);\r\n      this.abstractFocusedOrSelectedResult = undefined;\r\n    }\r\n  }\r\n\r\n  getTitle(result: SearchResult) {\r\n    return getEntityTitle(result);\r\n  }\r\n\r\n  focusResult(result: SearchResult<Feature>) {\r\n    this.focusedResult$.next(result);\r\n    this.map.queryResultsOverlay.removeFeature(result.data);\r\n\r\n    result.data.meta.style = getCommonVectorSelectedStyle(\r\n      Object.assign({},\r\n        { feature: result.data },\r\n        this.queryState.queryOverlayStyleFocus));\r\n    result.data.meta.style.setZIndex(2000);\r\n    this.map.queryResultsOverlay.addFeature(result.data, FeatureMotion.None);\r\n  }\r\n\r\n  unfocusResult(result: SearchResult<Feature>, force?) {\r\n    this.focusedResult$.next(undefined);\r\n    if (!force && this.store.state.get(result).focused) {\r\n      return;\r\n    }\r\n    this.map.queryResultsOverlay.removeFeature(result.data);\r\n\r\n    result.data.meta.style = getCommonVectorStyle(\r\n      Object.assign({},\r\n        { feature: result.data },\r\n        this.queryState.queryOverlayStyle));\r\n    result.data.meta.style.setZIndex(undefined);\r\n    this.map.queryResultsOverlay.addFeature(result.data, FeatureMotion.None);\r\n  }\r\n\r\n  selectResult(result: SearchResult<Feature>) {\r\n    this.store.state.update(\r\n      result,\r\n      {\r\n        focused: true,\r\n        selected: true\r\n      },\r\n      true\r\n    );\r\n    this.resultSelected$.next(result);\r\n    if (result.data.properties && result.data.properties.target === 'iframe') {\r\n      this.setHtmlDisplay(true);\r\n    } else {\r\n      this.setHtmlDisplay(false);\r\n    }\r\n\r\n    const features = [];\r\n    for (const feature of this.store.all()) {\r\n      if (feature.meta.id === result.meta.id) {\r\n        feature.data.meta.style = getCommonVectorSelectedStyle(\r\n          Object.assign({}, { feature: feature.data },\r\n            this.queryState.queryOverlayStyleSelection));\r\n        feature.data.meta.style.setZIndex(2000);\r\n      } else {\r\n        feature.data.meta.style = getCommonVectorStyle(\r\n          Object.assign({},\r\n            { feature: feature.data },\r\n            this.queryState.queryOverlayStyle));\r\n      }\r\n      features.push(feature.data);\r\n    }\r\n    this.map.queryResultsOverlay.removeFeatures(features);\r\n    this.map.queryResultsOverlay.addFeatures(features, FeatureMotion.None);\r\n\r\n    if (this.zoomAuto) {\r\n      const localOlFeature = this.format.readFeature(\r\n        this.resultSelected$.getValue().data,\r\n        {\r\n          dataProjection: this.resultSelected$.getValue().data.projection,\r\n          featureProjection: this.map.projection\r\n        }\r\n      );\r\n      moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Default);\r\n    }\r\n\r\n    this.isResultSelected$.next(true);\r\n    this.initialized = false;\r\n  }\r\n\r\n  unselectResult() {\r\n    this.resultSelected$.next(undefined);\r\n    this.isResultSelected$.next(false);\r\n    this.setHtmlDisplay(false);\r\n    this.store.state.clear();\r\n\r\n    const features = [];\r\n    for (const feature of this.store.all()) {\r\n      feature.data.meta.style = getCommonVectorStyle(\r\n        Object.assign({},\r\n          { feature: feature.data },\r\n          this.queryState.queryOverlayStyle));\r\n      features.push(feature.data);\r\n    }\r\n    this.map.queryResultsOverlay.setFeatures(features, FeatureMotion.None, 'map');\r\n  }\r\n\r\n  clear() {\r\n    this.clearFeatureEmphasis();\r\n    this.map.queryResultsOverlay.clear();\r\n    this.store.clear();\r\n    this.unselectResult();\r\n    this.setHtmlDisplay(false);\r\n  }\r\n\r\n  isMobile(): boolean {\r\n    return this.mediaService.getMedia() === Media.Mobile;\r\n  }\r\n  isDesktop(): boolean {\r\n    return this.mediaService.isDesktop();\r\n  }\r\n\r\n  handleKeyboardEvent(event) {\r\n    event.preventDefault();\r\n    if (event.keyCode === 37) {\r\n      this.previousResult();\r\n    } else if (event.keyCode === 39) {\r\n      this.nextResult();\r\n    }\r\n  }\r\n\r\n  previousResult() {\r\n    if (!this.resultSelected$.value) {\r\n      return;\r\n    }\r\n    let i = this.results.indexOf(this.resultSelected$.value);\r\n    const previousResult = this.results[--i];\r\n    if (previousResult) {\r\n      this.selectResult(previousResult);\r\n    }\r\n  }\r\n\r\n  nextResult() {\r\n    if (!this.resultSelected$.value) {\r\n      return;\r\n    }\r\n    let i = this.results.indexOf(this.resultSelected$.value);\r\n    const nextResult = this.results[++i];\r\n    if (nextResult) {\r\n      this.selectResult(nextResult);\r\n    }\r\n  }\r\n\r\n  zoomTo() {\r\n    const localOlFeature = this.format.readFeature(\r\n      this.resultSelected$.getValue().data,\r\n      {\r\n        dataProjection: this.resultSelected$.getValue().data.projection,\r\n        featureProjection: this.map.projection\r\n      }\r\n    );\r\n    moveToOlFeatures(this.map, [localOlFeature], FeatureMotion.Zoom);\r\n  }\r\n\r\n  swipe(action: string) {\r\n    if (action === ToastPanelComponent.SWIPE_ACTION.RIGHT) {\r\n      this.previousResult();\r\n    } else if (action === ToastPanelComponent.SWIPE_ACTION.LEFT) {\r\n      this.nextResult();\r\n    } else if (action === ToastPanelComponent.SWIPE_ACTION.UP) {\r\n      this.opened = true;\r\n    } else if (action === ToastPanelComponent.SWIPE_ACTION.DOWN) {\r\n      this.opened = false;\r\n    }\r\n  }\r\n\r\n  onToggleClick(e: MouseEvent) {\r\n    if ((e.target as any).className !== 'igo-panel-title') {\r\n      return;\r\n    }\r\n    this.opened = !this.opened;\r\n  }\r\n\r\n  /**\r\n   * Invoke the action handler\r\n   * @internal\r\n   */\r\n  onTriggerAction(action: Action) {\r\n    const args = action.args || [];\r\n    action.handler(...args);\r\n  }\r\n\r\n  setHtmlDisplay(value: boolean) {\r\n    if (value === true) {\r\n      this.isHtmlDisplay = true;\r\n      this.windowHtmlDisplayEvent.emit(true);\r\n    } else {\r\n      this.isHtmlDisplay = false;\r\n      this.windowHtmlDisplayEvent.emit(false);\r\n    }\r\n  }\r\n\r\n  isHtmlAndDesktop(): boolean {\r\n    if (this.isHtmlDisplay && this.isDesktop()) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  setResizeWindowIcon() {\r\n    if (this.fullExtent) {\r\n      this.iconResizeWindows = 'arrow-collapse';\r\n      // this.iconResizeWindows = 'vector-arrange-below';\r\n    } else {\r\n      this.iconResizeWindows = 'arrow-expand';\r\n      // this.iconResizeWindows = 'crop-square';\r\n    }\r\n  }\r\n\r\n  resizeWindows() {\r\n    this.storageService.set('fullExtent', !this.fullExtent);\r\n    if (this.fullExtent) {\r\n        this.reduceWindow();\r\n    } else {\r\n        this.enlargeWindows();\r\n      }\r\n  }\r\n\r\n  reduceWindow() {\r\n    this.fullExtent = false;\r\n    this.setResizeWindowIcon();\r\n  }\r\n\r\n  enlargeWindows() {\r\n    this.fullExtent = true;\r\n    this.setResizeWindowIcon();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport { IgoPanelModule, IgoStopPropagationModule, IgoActionModule } from '@igo2/common';\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoFeatureModule, IgoSearchResultsModule } from '@igo2/geo';\r\n\r\nimport { ToastPanelComponent } from './toast-panel.component';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatBadgeModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatMenuModule,\r\n    IgoLanguageModule,\r\n    IgoPanelModule,\r\n    IgoStopPropagationModule,\r\n    IgoActionModule,\r\n    IgoFeatureModule,\r\n    IgoSearchResultsModule\r\n  ],\r\n  exports: [ToastPanelComponent],\r\n  declarations: [ToastPanelComponent]\r\n})\r\nexport class AppToastPanelModule {}\r\n","<mat-sidenav\r\n  mode=\"side\"\r\n  [autoFocus]=\"false\"\r\n  [(opened)]=\"opened\">\r\n\r\n  <div class=\"app-sidenav-content\">\r\n\r\n      <div #content class=\"app-content\" [ngClass]=\"{toolActivated: toolbox.activeTool$ | async}\">\r\n\r\n        <button *ngIf=\"toolbox.activeTool$ | async\"\r\n          id=\"homeButton\"\r\n          mat-icon-button\r\n          tooltip-position=\"below\"\r\n          matTooltipShowDelay=\"500\"\r\n          [matTooltip]=\"'igo.context.sidenav.mainMenu' | translate\"\r\n          (click)=\"onUnselectButtonClick()\">\r\n          <mat-icon svgIcon=\"home\"></mat-icon>\r\n        </button>\r\n\r\n        <igo-panel [title]=\"title$ | async | translate\">\r\n          <button *ngIf=\"toolbox.activeTool$ | async\"\r\n            mat-icon-button\r\n            panelLeftButton\r\n            tooltip-position=\"below\"\r\n            matTooltipShowDelay=\"500\"\r\n            [matTooltip]=\"'igo.context.sidenav.goBack' | translate\"\r\n            (click)=\"onPreviousButtonClick()\">\r\n            <mat-icon svgIcon=\"arrow-left\"></mat-icon>\r\n          </button>\r\n\r\n          <igo-interactive-tour\r\n            panelRightButton\r\n            styleButton = 'icon'>\r\n          </igo-interactive-tour>\r\n\r\n          <!-- <button *ngIf=\"toolbox.activeTool$ | async\"\r\n            mat-icon-button\r\n            panelRightButton\r\n            tooltip-position=\"below\"\r\n            matTooltipShowDelay=\"500\"\r\n            [matTooltip]=\"'igo.context.sidenav.mainMenu' | translate\"\r\n            (click)=\"onUnselectButtonClick()\">\r\n            <mat-icon svgIcon=\"close\"></mat-icon>\r\n          </button> -->\r\n\r\n          <igo-toolbox\r\n            class=\"igo-toolbox\"\r\n            color=\"primary\"\r\n            [animate]=\"true\"\r\n            [toolbox]=\"toolbox\">\r\n          </igo-toolbox>\r\n\r\n        </igo-panel>\r\n    </div>\r\n  </div>\r\n</mat-sidenav>\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnInit,\r\n  OnDestroy,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport { Tool, Toolbox } from '@igo2/common';\r\nimport { IgoMap } from '@igo2/geo';\r\nimport { ToolState, CatalogState } from '@igo2/integration';\r\nimport { ConfigService } from '@igo2/core';\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SidenavComponent implements OnInit, OnDestroy {\r\n  title$: BehaviorSubject<string> = new BehaviorSubject<string>(undefined);\r\n\r\n  private activeTool$$: Subscription;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get opened(): boolean {\r\n    return this._opened;\r\n  }\r\n  set opened(value: boolean) {\r\n    if (value === this._opened) {\r\n      return;\r\n    }\r\n\r\n    this._opened = value;\r\n    this.openedChange.emit(this._opened);\r\n  }\r\n  private _opened: boolean;\r\n\r\n  @Output() openedChange = new EventEmitter<boolean>();\r\n  @Output() toolChange = new EventEmitter<Tool>();\r\n\r\n  get toolbox(): Toolbox {\r\n    return this.toolState.toolbox;\r\n  }\r\n\r\n  constructor(\r\n    private toolState: ToolState,\r\n    private configService: ConfigService,\r\n    private catalogState: CatalogState) {}\r\n\r\n  ngOnInit() {\r\n    this.activeTool$$ = this.toolbox.activeTool$.subscribe((tool: Tool) => {\r\n      const sidenavTitle = this.configService.getConfig('sidenavTitle') || 'IGO';\r\n      if (tool) {\r\n        if (tool.name === 'catalogBrowser') {\r\n          for (const catalog of this.catalogState.catalogStore.all()) {\r\n            if (this.catalogState.catalogStore.state.get(catalog).selected === true) {\r\n              this.title$.next(catalog.title);\r\n            }\r\n          }\r\n        } else if (tool.name === 'activeTimeFilter' || tool.name === 'activeOgcFilter') {\r\n          for (const layer of this.map.layers) {\r\n            if (layer.options.active === true) {\r\n              this.title$.next(layer.title);\r\n            }\r\n          }\r\n        } else {\r\n          this.title$.next(tool.title);\r\n        }\r\n      } else {\r\n        this.title$.next(sidenavTitle);\r\n      }\r\n      this.toolChange.emit(tool);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.activeTool$$.unsubscribe();\r\n  }\r\n\r\n  onPreviousButtonClick() {\r\n    this.toolbox.activatePreviousTool();\r\n  }\r\n\r\n  onUnselectButtonClick() {\r\n    this.toolbox.deactivateTool();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoPanelModule,\r\n  IgoFlexibleModule,\r\n  IgoToolModule,\r\n  IgoInteractiveTourModule\r\n} from '@igo2/common';\r\nimport { IgoFeatureModule } from '@igo2/geo';\r\nimport { IgoContextManagerModule } from '@igo2/context';\r\n\r\nimport { SidenavComponent } from './sidenav.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule,\r\n    IgoPanelModule,\r\n    IgoFlexibleModule,\r\n    IgoContextManagerModule,\r\n    IgoToolModule,\r\n    IgoFeatureModule,\r\n    IgoInteractiveTourModule\r\n  ],\r\n  exports: [SidenavComponent],\r\n  declarations: [SidenavComponent]\r\n})\r\nexport class AppSidenavModule {}\r\n","import './portal.variables.scss';\r\n\r\nimport {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function expansionPanelAnimation(): AnimationTriggerMetadata[] {\r\n  return [\r\n    trigger('expansionPanelSize', [\r\n      state(\r\n        'full',\r\n        style({\r\n          left: '5px',\r\n          'max-width': '100%'\r\n        })\r\n      ),\r\n      state(\r\n        'notTriggered',\r\n        style({\r\n          left: '5px',\r\n          bottom: '5px',\r\n          'max-width': '100%'\r\n        })\r\n      ),\r\n      state(\r\n        'notVisible',\r\n        style({\r\n          display: 'none'\r\n        })\r\n      ),\r\n      state(\r\n        'mobile',\r\n        style({\r\n          left: 'calc(100% - 40px)',\r\n        })\r\n      ),\r\n      state(\r\n        'reduced',\r\n        style({\r\n          left: '405px',\r\n          'max-width': 'calc(100% - 405px)'\r\n        })\r\n      ),\r\n      state(\r\n        'reducedNotTriggered',\r\n        style({\r\n          left: '405px',\r\n          bottom: '5px',\r\n          'max-width': 'calc(100% - 405px)'\r\n        })\r\n      ),\r\n      transition('* => *', animate('100ms'))\r\n    ]),\r\n    trigger('toastOffsetY', [\r\n      state(\r\n        'true',\r\n        style({\r\n          bottom: '50px'\r\n        })\r\n      ),\r\n      state(\r\n        'false',\r\n        style({\r\n          bottom: '5px'\r\n        })\r\n      )\r\n    ])\r\n  ];\r\n}\r\n\r\nexport function toastPanelAnimation(): AnimationTriggerMetadata[] {\r\n  return [\r\n    trigger('toastPanelMobileSidenav', [\r\n      state(\r\n        'true',\r\n        style({\r\n          display: 'none'\r\n        })\r\n      ),\r\n      transition('* => void', animate('0ms')),\r\n      transition('* => *', animate('200ms'))\r\n    ]),\r\n    trigger('toastPanelOffsetX', [\r\n      state(\r\n        'fullStandard',\r\n        style({\r\n          left: '45%'\r\n        })\r\n      ),\r\n      state(\r\n        'standard',\r\n        style({\r\n          left: '50%'\r\n        })\r\n      ),\r\n      state(\r\n        'htmlDisplay',\r\n        style({\r\n          left: '40%'\r\n        })\r\n      ),\r\n      state(\r\n        'fullOffsetX',\r\n        style({\r\n          left: 'calc(45% + 202px)'\r\n        })\r\n      ),\r\n      state(\r\n        'standardOffsetX',\r\n        style({\r\n          left: 'calc(50% + 202px)'\r\n        })\r\n      ),\r\n      state(\r\n        'htmlDisplayOffsetX',\r\n        style({\r\n          left: 'calc(40% + 160px)'\r\n        })\r\n    ),\r\n      transition('fullStandard => fullOffsetX', animate('200ms')),\r\n      transition('fullOffsetX => fullStandard', animate('200ms')),\r\n      transition('standard => standardOffsetX', animate('200ms')),\r\n      transition('standardOffsetX => standard', animate('200ms')),\r\n      transition('htmlDisplay => htmlDisplayOffsetX', animate('200ms')),\r\n      transition('htmlDisplayOffsetX => htmlDisplay', animate('200ms')),\r\n      // transition('standard => htmlDisplay', animate('200ms')),\r\n      // transition('htmlDisplay => standard', animate('200ms')),\r\n    ]),\r\n    trigger('toastPanelOffsetY', [\r\n      state(\r\n        'noExpansion',\r\n        style({\r\n          bottom: '0'\r\n        })\r\n      ),\r\n      state(\r\n        'expansionAndToastOpened',\r\n        style({\r\n          bottom: '285px',\r\n          zIndex: '999'\r\n        })\r\n      ),\r\n      state(\r\n        'expansionAndToastClosed',\r\n        style({\r\n          bottom: '285px',\r\n          zIndex: '5'\r\n        })\r\n      ),\r\n      state(\r\n        'expansionMaximizedAndToastOpened',\r\n        style({\r\n          bottom: '500px', // workspace full size\r\n          zIndex: '999'\r\n        })\r\n      ),\r\n      state(\r\n        'expansionMaximizedAndToastClosed',\r\n        style({\r\n          bottom: '500px', // workspace full size\r\n          zIndex: '5'\r\n        })\r\n      ),\r\n    transition('noExpansion => noExpansion', animate('10ms')),\r\n    transition('expansionAndToastOpened => expansionAndToastOpened', animate('200ms')),\r\n    transition('expansionAndToastClosed => expansionAndToastClosed', animate('200ms')),\r\n    transition('expansionMaximizedAndToastOpened => expansionMaximizedAndToastOpened', animate('200ms')),\r\n    transition('expansionMaximizedAndToastClosed => expansionMaximizedAndToastClosed', animate('200ms')),\r\n       ])\r\n  ];\r\n}\r\n\r\nexport function controlsAnimations(): AnimationTriggerMetadata[] {\r\n  return [\r\n    trigger('controlsOffsetY', [\r\n      state('close', style({})),\r\n      state(\r\n        'firstRowFromBottom',\r\n        style({\r\n          bottom: '5px'\r\n        })\r\n      ),\r\n      state(\r\n        'firstRowFromBottom-expanded',\r\n        style({\r\n          bottom: '285px'\r\n        })\r\n      ),\r\n      state(\r\n        'firstRowFromBottom-expanded-maximized',\r\n        style({\r\n          bottom: '500px'\r\n        })\r\n      ),\r\n      state(\r\n        'secondRowFromBottom',\r\n        style({\r\n          bottom: '47px'\r\n        })\r\n      ),\r\n      state(\r\n        'thirdRowFromBottom',\r\n        style({\r\n          bottom: '104px'\r\n        })\r\n      ),\r\n      state(\r\n        '',\r\n        style({\r\n          bottom: 'calc(285px)'\r\n        })\r\n      ),\r\n      state(\r\n        'secondRowFromBottom-expanded',\r\n        style({\r\n          bottom: 'calc(285px + 52px)'\r\n        })\r\n      ),\r\n      state(\r\n        'thirdRowFromBottom-expanded',\r\n        style({\r\n          bottom: 'calc(285px + 104px)'\r\n        })\r\n      ),\r\n      transition('* => *', animate('200ms'))\r\n    ]),\r\n    trigger('mobileOffsetY', [\r\n      state(\r\n        'low',\r\n        style({\r\n          bottom: '50px'\r\n        })\r\n      ),\r\n      transition('* => *', animate('200ms'))\r\n    ])\r\n  ];\r\n}\r\n\r\nexport function controlSlideX(): AnimationTriggerMetadata {\r\n  return trigger('controlStateX', [\r\n    state(\r\n      'left',\r\n      style({\r\n        left: '60px'\r\n      })\r\n    ),\r\n    state(\r\n      'right',\r\n      style({\r\n        left: '465px'\r\n      })\r\n    ),\r\n    transition('* => *', animate('200ms'))\r\n  ]);\r\n}\r\n\r\nexport function controlSlideY(): AnimationTriggerMetadata {\r\n  return trigger('controlStateY', [\r\n    state('close', style({})),\r\n    state(\r\n      'firstRowFromBottom',\r\n      style({\r\n        bottom: '2px',\r\n        'margin-left': '0px'\r\n      })\r\n    ),\r\n    state(\r\n      'firstRowFromBottom-expanded',\r\n      style({\r\n        bottom: '285px',\r\n        'margin-left': '-55px'\r\n      })\r\n    ),\r\n    state(\r\n      'firstRowFromBottom-expanded-maximized',\r\n      style({\r\n        bottom: '500px', // workspace full size\r\n        'margin-left': '-55px'\r\n      })\r\n    ),\r\n    transition('* => *', animate('200ms'))\r\n  ]);\r\n}\r\n\r\nexport function mapSlideX(): AnimationTriggerMetadata {\r\n  return trigger('mapStateX', [\r\n    state(\r\n      'left',\r\n      style({\r\n        left: '0'\r\n      })\r\n    ),\r\n    state(\r\n      'right',\r\n      style({\r\n        left: '0'\r\n      })\r\n    ),\r\n    transition('* => *', animate('200ms'))\r\n  ]);\r\n}\r\nexport function mapSlideY(): AnimationTriggerMetadata {\r\n  return trigger('mapStateY', [\r\n    state(\r\n      '*',\r\n      style({\r\n        bottom: '0'\r\n      })\r\n    ),\r\n    transition('* => *', animate('200ms'))\r\n  ]);\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ConfigService, StorageService } from '@igo2/core';\r\nimport { MatDialogConfig } from '@angular/material/dialog';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WelcomeWindowService {\r\n  nbVisit: number;\r\n  showAgain: boolean;\r\n  igoVersionDifferentFromStorage = false;\r\n\r\n  constructor(\r\n    private configService: ConfigService,\r\n    private storageService: StorageService\r\n  ) {\r\n    this.igoVersionDifferentFromStorage = this.isVersionDifferentFromStorage();\r\n    this.setStorageConfig();\r\n  }\r\n\r\n  setStorageConfig() {\r\n    this.nbVisit = Number(this.storageService.get('welcomeWindow_nbVisit'));\r\n    if (!this.nbVisit) {\r\n      this.nbVisit = 0;\r\n    }\r\n\r\n    this.storageService.set('welcomeWindow_nbVisit', (this.nbVisit += 1));\r\n    this.storageService.set(\r\n      'version',\r\n      this.configService.getConfig('version.lib')\r\n    );\r\n  }\r\n\r\n  isVersionDifferentFromStorage(): boolean {\r\n    if (\r\n      this.storageService.get('version') &&\r\n      this.storageService.get('version') !==\r\n        this.configService.getConfig('version.lib')\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  hasWelcomeWindow(): boolean {\r\n    if (\r\n      this.storageService.get('welcomeWindow_showAgain') === false ||\r\n      this.storageService.get('welcomeWindow_showAgain') === 'false'\r\n    ) {\r\n      if (\r\n        this.nbVisit >=\r\n        this.configService.getConfig('welcomeWindow.nbVisitToShowAgain')\r\n      ) {\r\n        this.storageService.set('welcomeWindow_nbVisit', 0);\r\n        this.storageService.remove('welcomeWindow_showAgain');\r\n        return true;\r\n      } else if (\r\n        this.configService.getConfig('welcomeWindow.showAgainOnNewIGOVersion')\r\n      ) {\r\n        if (this.igoVersionDifferentFromStorage) {\r\n          this.storageService.set('welcomeWindow_nbVisit', 0);\r\n          this.storageService.remove('welcomeWindow_showAgain');\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    if (typeof this.configService.getConfig('welcomeWindow.nbVisitToShow') !== 'undefined' ) {\r\n      if (this.nbVisit > this.configService.getConfig('welcomeWindow.nbVisitToShow') ) {\r\n        this.storageService.set('welcomeWindow_showAgain', false);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return this.configService.getConfig('welcomeWindow');\r\n  }\r\n\r\n  getConfig(): MatDialogConfig {\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.maxWidth = '500px';\r\n\r\n    return dialogConfig;\r\n  }\r\n\r\n  afterClosedWelcomeWindow() {\r\n    this.storageService.set('welcomeWindow_showAgain', this.showAgain);\r\n  }\r\n}\r\n","<div class=\"welcome-window\"  *ngIf=\"html$ | async\">\r\n\r\n  <mat-toolbar color=\"primary\">\r\n    <h2>{{'welcomeWindow.title' | translate}}</h2>\r\n    <span class=\"spacer\"></span>\r\n\r\n    <label>\r\n      <input id=\"doNotShowCheck\" type=\"checkbox\" [(ngModel)]=\"showAgain\" (click)=\"setShowAgain()\">\r\n      {{'welcomeWindow.notShowCheck' | translate}}\r\n    </label>\r\n  </mat-toolbar>\r\n\r\n  <div mat-dialog-content class=\"text\">\r\n    <igo-custom-html class=\"mat-typography\"\r\n    [html]=\"html$ | async\">\r\n    </igo-custom-html>\r\n  </div>\r\n\r\n  <p></p>\r\n  <div class=\"button-container\">\r\n    <igo-interactive-tour\r\n      id=\"tour-button\"\r\n      styleButton = \"raised\"\r\n      [discoverTitleInLocale$]=\"discoverTitleInLocale$\"\r\n      (click)= \"closeWelcomeWindow()\">\r\n    </igo-interactive-tour>\r\n\r\n  <button mat-raised-button class=\"button-close\" color=\"primary\" mat-dialog-close>{{'welcomeWindow.closeButton' | translate}}</button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ConfigService, LanguageService } from '@igo2/core';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { WelcomeWindowService } from './welcome-window.service';\r\n\r\n@Component({\r\n  selector: 'app-welcome-window',\r\n  templateUrl: './welcome-window.component.html',\r\n  styleUrls: ['./welcome-window.component.scss']\r\n})\r\nexport class WelcomeWindowComponent implements OnInit, OnDestroy {\r\n  // isVisible = true;\r\n  showAgain = false;\r\n  public discoverTitleInLocale$: Observable<string> = of(this.configService.getConfig('title'));\r\n  private title$$: Subscription;\r\n  public html$: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private welcomeWindowService: WelcomeWindowService,\r\n    private configService: ConfigService,\r\n    protected languageService: LanguageService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.computeHtml();\r\n  }\r\n\r\n  closeWelcomeWindow() {\r\n    this.dialog.closeAll();\r\n  }\r\n\r\n  private computeHtml() {\r\n    let deltaDay = 0;\r\n    let isDateParsable = true;\r\n    let releaseDate = new Date(this.configService.getConfig('version.releaseDate'));\r\n\r\n    const releaseDateAppConfig = this.configService.getConfig('version.releaseDateApp');\r\n\r\n\r\n    if (releaseDateAppConfig) {\r\n      const releaseDateApp = new Date(releaseDateAppConfig);\r\n      if (isNaN(releaseDateApp.getDate())) {\r\n        console.log('The releaseDateApp config is not a valid date format');\r\n        isDateParsable = false;\r\n      } else {\r\n        deltaDay = 1;\r\n        releaseDate = releaseDateApp;\r\n      }\r\n    }\r\n\r\n    let releaseDateString = '';\r\n\r\n    if (isDateParsable) {\r\n      let day: any = releaseDate.getDate() + deltaDay;\r\n      if (day < 10) {\r\n        day = '0' + day;\r\n      }\r\n      let month: any = releaseDate.getMonth() + 1;\r\n      if (month < 10) {\r\n        month = '0' + month;\r\n      }\r\n      const year = releaseDate.getFullYear();\r\n      releaseDateString = `${year}-${month}-${day}`;\r\n    } else {\r\n      releaseDateString = releaseDateAppConfig;\r\n    }\r\n\r\n    this.title$$ = this.languageService.translate.get(this.configService.getConfig('title') || '')\r\n      .pipe(\r\n        map(title => {\r\n          return this.languageService.translate.instant('welcomeWindow.html', {\r\n            title,\r\n            description: this.configService.getConfig('description') || '',\r\n            version: this.configService.getConfig('version.app') || this.configService.getConfig('version.lib') || '',\r\n            releaseDate: releaseDateString || ''\r\n          });\r\n        })\r\n      ).subscribe((r) => this.html$.next(r));\r\n\r\n    return this.html$;\r\n\r\n  }\r\n\r\n  setShowAgain() {\r\n    this.welcomeWindowService.showAgain = this.showAgain;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.title$$) {\r\n      this.title$$.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function showContent(\r\n  duration = '50ms',\r\n  delay = '280ms',\r\n  easing = 'ease-in-out'\r\n): AnimationTriggerMetadata {\r\n  return trigger('showContent', [\r\n    state('true', style({\r\n      opacity: 1,\r\n      display: 'block'\r\n    })),\r\n    state('false', style({\r\n      opacity: 0,\r\n      display: 'none'\r\n    })),\r\n    transition('false => true', animate(`${duration} ${delay} ${easing}`)),\r\n    transition('true => false', animate('0ms'))\r\n  ]);\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostBinding,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { showContent } from './toast-panel-for-expansion.animations';\r\n\r\n\r\n@Component({\r\n  selector: 'app-toast-panel-for-expansion',\r\n  templateUrl: './toast-panel-for-expansion.component.html',\r\n  styleUrls: ['./toast-panel-for-expansion.component.scss'],\r\n  animations: [showContent()],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ToastPanelForExpansionComponent {\r\n\r\n  @Input()\r\n  set opened(value: boolean) {\r\n    if (value === this._opened) {\r\n      return;\r\n    }\r\n    this._opened = value;\r\n    this.openedChange.emit(this._opened);\r\n  }\r\n  get opened(): boolean { return this._opened; }\r\n  private _opened: boolean;\r\n\r\n  @Input() title: string;\r\n\r\n  @Input() withHeader: boolean;\r\n\r\n  @Output() openedChange = new EventEmitter<boolean>();\r\n\r\n  @HostBinding('class.toast-panel-for-expansion-opened')\r\n  get hasOpenedClass() {\r\n    return this.opened;\r\n  }\r\n\r\n  @HostBinding('style.visibility')\r\n  get displayStyle() {\r\n    return (this.withHeader || this.opened) ? 'visible' : 'hidden';\r\n  }\r\n\r\n  constructor() {}\r\n\r\n}\r\n","<igo-panel [title]=\"title\" [withHeader]=\"withHeader\">\r\n\r\n  <div #content [@showContent]=\"opened\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</igo-panel>\r\n","<mat-sidenav-container class=\"app-main-container\">\r\n  <mat-sidenav-content>\r\n\r\n    <igo-backdrop\r\n      [shown]=\"backdropShown\"\r\n      (click)=\"onBackdropClick()\">\r\n    </igo-backdrop>\r\n\r\n    <igo-menu-button\r\n      [sidenavOpened]=\"sidenavOpened\"\r\n      (openSidenav)=\"onToggleSidenavClick()\">\r\n    </igo-menu-button>\r\n\r\n    <igo-search-bar\r\n      #searchBar\r\n      [term]=\"searchBarTerm\"\r\n      [termSplitter]=\"termSplitter\"\r\n      [minLength]=\"minSearchTermLength\"\r\n      [searchSettings]=\"true\"\r\n      [forceNA]=\"forceCoordsNA\"\r\n      [store]=\"searchStore\"\r\n      (searchTermChange)=\"onSearchTermChange($event)\"\r\n      [pointerSummaryEnabled]=\"igoSearchPointerSummaryEnabled\"\r\n      (pointerSummaryStatus)=\"onPointerSummaryStatusChange($event)\"\r\n      [searchResultsGeometryEnabled]=\"searchResultsGeometryEnabled\"\r\n      (searchResultsGeometryStatus)=\"onSearchResultsGeometryStatusChange($event)\"\r\n      (search)=\"onSearch($event)\"\r\n      (clearFeature)=\"onClearSearch()\"\r\n      (searchSettingsChange)=\"onSearchSettingsChange()\">\r\n    </igo-search-bar>\r\n\r\n    <app-sidenav\r\n      [map]=\"map\"\r\n      [(opened)]=\"sidenavOpened\"\r\n      (toolChange)=\"toolChanged($event)\">\r\n    </app-sidenav>\r\n\r\n    <igo-map-browser\r\n      igoWorkspaceUpdator\r\n      [workspaceStore]=\"workspaceStore\"\r\n      igoSearchPointerSummary\r\n      [igoSearchPointerSummaryDelay]=\"500\"\r\n      [igoSearchPointerSummaryEnabled]=igoSearchPointerSummaryEnabled\r\n\r\n      #mapBrowser\r\n      igoQuery\r\n      [waitForAllQueries]=\"true\"\r\n      [queryFeatures]=\"true\"\r\n      [queryFeaturesHitTolerance]=\"15\"\r\n      igoMapContext\r\n      igoLayerContext\r\n      igoDropGeoFile\r\n      (query)=\"onMapQuery($event)\"\r\n      [map]=\"map\"\r\n      [igoContextMenu]=contextMenu\r\n      (menuPosition)=\"onContextMenuOpen($event)\"\r\n      [ngClass]=\"{'igo-attribution-offset': map.getBaseLayers().length > 1}\"\r\n      [@mapStateX]=\"sidenavOpened ? 'right' : 'left'\"\r\n      (@mapStateX.start)=\"updateMapBrowserClass()\"\r\n      [@mapStateY]=\"getControlsOffsetY()\"\r\n      (@mapStateY.start)=\"updateMapBrowserClass()\">\r\n\r\n      <igo-zoom-button [map]=\"map\" color=\"primary\"\r\n        [@controlsOffsetY]=\"getControlsOffsetY()\">\r\n      </igo-zoom-button>\r\n      <igo-swipe-control [map]=\"map\"></igo-swipe-control>\r\n      <igo-map-center [map]=\"map\"></igo-map-center>\r\n      <igo-offline-button [map]=\"map\" color=\"primary\"\r\n        [@controlsOffsetY]=\"getControlsOffsetY()\"\r\n        [@mobileOffsetY]=\"getToastPanelStatus()\">\r\n      </igo-offline-button>\r\n      <igo-geolocate-button\r\n        *ngIf=\"hasGeolocateButton\"\r\n        [map]=\"map\" color=\"primary\"\r\n        [@controlsOffsetY]=\"getControlsOffsetY()\"\r\n        [@mobileOffsetY]=\"getToastPanelStatus()\">\r\n      </igo-geolocate-button>\r\n      <igo-rotation-button [showIfNoRotation]=\"showRotationButtonIfNoRotation\" [map]=\"map\" color=\"primary\"></igo-rotation-button>\r\n      <igo-user-button \r\n        *ngIf=\"auth.url\"\r\n        [map]=\"map\" color=\"primary\"\r\n        [@controlsOffsetY]=\"getControlsOffsetY()\"\r\n        [@mobileOffsetY]=\"getToastPanelStatus()\">\r\n      </igo-user-button>\r\n      <igo-baselayers-switcher [map]=\"map\"\r\n        [@controlsOffsetY]=\"getBaselayersSwitcherStatus()\"\r\n        [useStaticIcon]=\"true\">\r\n      </igo-baselayers-switcher>\r\n    </igo-map-browser>\r\n\r\n    <app-map-overlay\r\n      [@controlStateY]=\"getControlsOffsetY()\"\r\n      [@controlStateX]=\"(mediaService.media$ | async) !== 'mobile' &&\r\n                              sidenavOpened ? 'right' : 'left'\">\r\n    </app-map-overlay>\r\n\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n\r\n<app-expansion-panel\r\n  *ngIf=\"hasExpansionPanel && (workspaceState.workspaceEnabled$ | async)\"\r\n  [backdropShown]=\"expansionPanelBackdropShown\"\r\n  [(expanded)]=\"expansionPanelExpanded\"\r\n  [maximized]=\"workspaceMaximize$ | async\"\r\n  [@expansionPanelSize]=\"getExpansionPanelStatus()\"\r\n  [@toastOffsetY]=\"(isMobile() && !toastPanelOpened && queryState.store.entities$.value.length > 0 && !expansionPanelExpanded) ? 'true' : 'false'\">\r\n\r\n  <ng-container expansionPanelHeader>\r\n    <igo-workspace-selector\r\n      igoWorkspaceSelector\r\n      (toolToActivate)=\"toolToActivateFromWorkspace($event)\"\r\n      [store]=\"workspaceStore\"\r\n      [map]=\"map\">\r\n    </igo-workspace-selector>\r\n\r\n    <ng-container *ngIf=\"selectedWorkspace$ | async as workspace\">\r\n      <button\r\n        class=\"eye-workspace\"\r\n        mat-icon-button\r\n        [color]=\"workspace.layer.visible ? 'primary' : 'default'\"\r\n        collapsibleButton\r\n        tooltip-position=\"below\"\r\n        matTooltipShowDelay=\"500\"\r\n        [matTooltip]=\"workspace.layer.visible ?\r\n                      ('igo.geo.layer.hideLayer' | translate) :\r\n                      ('igo.geo.layer.showLayer' | translate)\"\r\n        (click)=\"workspace.layer.visible = !workspace.layer.visible\">\r\n        <mat-icon\r\n          [ngClass]=\"{disabled: !(workspace.inResolutionRange$ | async)}\"\r\n          [svgIcon]=\"workspace.layer.visible ? 'eye' : 'eye-off'\">\r\n        </mat-icon>\r\n    </button>\r\n    <igo-actionbar\r\n      class=\"actionbar-workspace\"\r\n      *ngIf=\"workspace.actionStore\"\r\n      [store]=\"workspace.actionStore\"\r\n      [withIcon]=\"true\"\r\n      [withTitle]=\"actionbarWithTitle\"\r\n      [horizontal]=\"true\"\r\n      [withToggleButton]=\"actionbarMode === 'overlay'\"\r\n      [iconColor]=\"'primary'\"\r\n      [color]=\"'primary'\"\r\n      [mode]=\"actionbarMode\"\r\n      [overlayClass]=\"workspaceMenuClass\">\r\n    </igo-actionbar>\r\n      <div class=\"spacer\"></div>\r\n      <igo-entity-table-paginator\r\n      *ngIf=\"workspaceVisibility()\"\r\n        [store]=\"workspace.entityStore\"\r\n        [entitySortChange$]=\"workspaceEntitySortChange$\"\r\n        [paginatorOptions]=\"paginatorOptions\"\r\n        (paginatorChange)=\"paginatorChange($event)\">\r\n      </igo-entity-table-paginator>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <ng-container *ngIf=\"selectedWorkspace$ | async as workspace\">\r\n    <igo-entity-table\r\n      [paginator]=\"workspacePaginator\"\r\n      *ngIf=\"workspace.entityStore && workspace.meta && workspace.meta.tableTemplate && workspaceVisibility()\"\r\n      [store]=\"workspace.entityStore\"\r\n      (entitySortChange)=\"entitySortChange()\"\r\n      (entitySelectChange)=\"entitySelectChange($event)\"\r\n      [template]=\"workspace.meta.tableTemplate\">\r\n    </igo-entity-table>\r\n    <span class=\"mat-typography\">{{workspaceNotAvailableMessage | translate}}</span>\r\n  </ng-container>\r\n\r\n</app-expansion-panel>\r\n\r\n<app-toast-panel-for-expansion\r\n  [withHeader]=\"false\"\r\n  [(opened)]=\"toastPanelForExpansionOpened\">\r\n\r\n  <div class=\"toast-panel-for-expansion-close-button-container\">\r\n    <button\r\n      mat-icon-button\r\n      color=\"warn\"\r\n      (click)=\"toastPanelForExpansionOpened = false\">\r\n      <mat-icon svgIcon=\"close\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <igo-workspace-widget-outlet\r\n    *ngIf=\"selectedWorkspace$ | async as workspace\"\r\n    [workspace]=\"workspace\"\r\n    (deactivateWidget)=\"onDeactivateWorkspaceWidget()\">\r\n  </igo-workspace-widget-outlet>\r\n\r\n</app-toast-panel-for-expansion >\r\n\r\n<app-toast-panel *ngIf=\"!(queryStore.empty$ | async)\"\r\n  [map]=\"map\"\r\n  [store]=\"queryStore\"\r\n  [hasFeatureEmphasisOnSelection]=\"hasFeatureEmphasisOnSelection\"\r\n  [@toastPanelOffsetX]=\"toastPanelOffsetX$ | async\"\r\n  [@toastPanelOffsetY]=\"getToastPanelOffsetY()\"\r\n  [@toastPanelMobileSidenav]=\"(isMobile() && sidenavOpened) || (isTablet() && isPortrait() && sidenavOpened)\"\r\n  [opened]=\"toastPanelOpened\"\r\n  (openedChange)=\"toastOpenedChange($event)\"\r\n  (fullExtentEvent)=\"fullExtent = $event\"\r\n  (windowHtmlDisplayEvent)=\"setToastPanelHtmlDisplay($event)\">\r\n</app-toast-panel>\r\n\r\n<ng-template #contextMenu>\r\n  <igo-actionbar\r\n    [store]=\"contextMenuStore\"\r\n    [withIcon]=\"false\"\r\n    [horizontal]=\"true\"\r\n    mode=\"context\">\r\n  </igo-actionbar>\r\n</ng-template>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Subscription, of, BehaviorSubject, combineLatest } from 'rxjs';\r\nimport { debounceTime, take, pairwise, skipWhile, first } from 'rxjs/operators';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport MapBrowserEvent from 'ol/MapBrowserEvent';\r\nimport * as olProj from 'ol/proj';\r\nimport olFeature from 'ol/Feature';\r\nimport type { default as OlGeometry } from 'ol/geom/Geometry';\r\n\r\nimport {\r\n  MediaService,\r\n  Media,\r\n  MediaOrientation,\r\n  ConfigService,\r\n  LanguageService,\r\n  MessageService,\r\n  StorageService\r\n} from '@igo2/core';\r\nimport {\r\n  ActionbarMode,\r\n  Workspace,\r\n  WorkspaceStore,\r\n  ActionStore,\r\n  EntityStore,\r\n  // getEntityTitle,\r\n  Toolbox,\r\n  Tool,\r\n  Widget,\r\n  EntityTablePaginatorOptions,\r\n  EntityRecord\r\n} from '@igo2/common';\r\nimport { AuthOptions, AuthService } from '@igo2/auth';\r\nimport { DetailedContext } from '@igo2/context';\r\nimport {\r\n  DataSourceService,\r\n  Feature,\r\n  FEATURE,\r\n  featureToSearchResult,\r\n  GoogleLinks,\r\n  IgoMap,\r\n  LayerService,\r\n  QuerySearchSource,\r\n  Research,\r\n  SearchResult,\r\n  SearchSource,\r\n  SearchSourceService,\r\n  CapabilitiesService,\r\n  sourceCanSearch,\r\n  sourceCanReverseSearch,\r\n  ImportService,\r\n  handleFileImportError,\r\n  handleFileImportSuccess,\r\n  featureFromOl,\r\n  QueryService,\r\n  WfsWorkspace,\r\n  FeatureWorkspace,\r\n  generateIdFromSourceOptions,\r\n  computeOlFeaturesExtent,\r\n  addStopToStore\r\n} from '@igo2/geo';\r\n\r\nimport {\r\n  ToolState,\r\n  MapState,\r\n  SearchState,\r\n  QueryState,\r\n  ContextState,\r\n  WorkspaceState,\r\n  DirectionState\r\n} from '@igo2/integration';\r\n\r\nimport {\r\n  expansionPanelAnimation,\r\n  toastPanelAnimation,\r\n  controlsAnimations,\r\n  controlSlideX,\r\n  controlSlideY,\r\n  mapSlideX,\r\n  mapSlideY\r\n} from './portal.animation';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { WelcomeWindowComponent } from './welcome-window/welcome-window.component';\r\nimport { WelcomeWindowService } from './welcome-window/welcome-window.service';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\n\r\n@Component({\r\n  selector: 'app-portal',\r\n  templateUrl: './portal.component.html',\r\n  styleUrls: ['./portal.component.scss'],\r\n  animations: [\r\n    expansionPanelAnimation(),\r\n    toastPanelAnimation(),\r\n    controlsAnimations(),\r\n    controlSlideX(),\r\n    controlSlideY(),\r\n    mapSlideX(),\r\n    mapSlideY()\r\n  ]\r\n})\r\nexport class PortalComponent implements OnInit, OnDestroy {\r\n  public toastPanelOffsetX$: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n  public sidenavOpened$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  public minSearchTermLength = 2;\r\n  public hasExpansionPanel = false;\r\n  public hasGeolocateButton = true;\r\n  public showRotationButtonIfNoRotation = false;\r\n  public hasFeatureEmphasisOnSelection: Boolean = false;\r\n  public workspaceNotAvailableMessage: String = 'workspace.disabled.resolution';\r\n  public workspacePaginator: MatPaginator;\r\n  public workspaceEntitySortChange$: BehaviorSubject<\r\n    boolean\r\n  > = new BehaviorSubject(false);\r\n  public paginatorOptions: EntityTablePaginatorOptions = {\r\n    pageSize: 50, // Number of items to display on a page.\r\n    pageSizeOptions: [1, 5, 10, 20, 50, 100, 500] // The set of provided page size options to display to the user.\r\n  };\r\n  public workspaceMenuClass = 'workspace-menu';\r\n\r\n  public fullExtent = this.storageService.get('fullExtent') as boolean;\r\n  private workspaceMaximize$$: Subscription[] = [];\r\n  readonly workspaceMaximize$: BehaviorSubject<boolean> = new BehaviorSubject(\r\n    this.storageService.get('workspaceMaximize') as boolean\r\n  );\r\n\r\n  public searchBarTerm = '';\r\n  public onSettingsChange$ = new BehaviorSubject<boolean>(undefined);\r\n  public termDefinedInUrl = false;\r\n  public termSplitter = '|';\r\n  public termDefinedInUrlTriggered = false;\r\n  private addedLayers$$: Subscription[] = [];\r\n  public forceCoordsNA = false;\r\n\r\n  public contextMenuStore = new ActionStore([]);\r\n  private contextMenuCoord: [number, number];\r\n\r\n  private contextLoaded = false;\r\n\r\n  private context$$: Subscription;\r\n  private openSidenav$$: Subscription;\r\n  private sidenavMediaAndOrientation$$: Subscription;\r\n\r\n  public igoSearchPointerSummaryEnabled: boolean;\r\n\r\n  public toastPanelForExpansionOpened = true;\r\n  private activeWidget$$: Subscription;\r\n  public showToastPanelForExpansionToggle = false;\r\n  public selectedWorkspace$: BehaviorSubject<Workspace> = new BehaviorSubject(\r\n    undefined\r\n  );\r\n  private routeParams: Params;\r\n  public toastPanelHtmlDisplay = false;\r\n\r\n  @ViewChild('mapBrowser', { read: ElementRef, static: true })\r\n  mapBrowser: ElementRef;\r\n  @ViewChild('searchBar', { read: ElementRef, static: true })\r\n  searchBar: ElementRef;\r\n\r\n  get map(): IgoMap {\r\n    return this.mapState.map;\r\n  }\r\n\r\n  get sidenavOpened(): boolean {\r\n    return this.sidenavOpened$.value;\r\n  }\r\n\r\n  set sidenavOpened(value: boolean) {\r\n    this.sidenavOpened$.next(value);\r\n  }\r\n\r\n  get auth(): AuthOptions {\r\n    return this.configService.getConfig('auth') || [];\r\n  }\r\n\r\n  get toastPanelOpened(): boolean {\r\n    return this._toastPanelOpened;\r\n  }\r\n  set toastPanelOpened(value: boolean) {\r\n    if (value !== !this._toastPanelOpened) {\r\n      return;\r\n    }\r\n    this._toastPanelOpened = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n  private _toastPanelOpened =\r\n    (this.storageService.get('toastOpened') as boolean) !== false;\r\n\r\n  isMobile(): boolean {\r\n    return this.mediaService.getMedia() === Media.Mobile;\r\n  }\r\n\r\n  isTablet(): boolean {\r\n    return this.mediaService.getMedia() === Media.Tablet;\r\n  }\r\n\r\n  isLandscape(): boolean {\r\n    return this.mediaService.getOrientation() === MediaOrientation.Landscape;\r\n  }\r\n\r\n  isPortrait(): boolean {\r\n    return this.mediaService.getOrientation() === MediaOrientation.Portrait;\r\n  }\r\n\r\n  get backdropShown(): boolean {\r\n    return (\r\n      (this.isMobile() || (this.isTablet() && this.isPortrait())) &&\r\n      this.sidenavOpened\r\n    );\r\n  }\r\n\r\n  get expansionPanelExpanded(): boolean {\r\n    return this.workspaceState.workspacePanelExpanded;\r\n  }\r\n  set expansionPanelExpanded(value: boolean) {\r\n    this.workspaceState.workspacePanelExpanded = value;\r\n  }\r\n\r\n  get toastPanelShown(): boolean {\r\n    return true;\r\n  }\r\n\r\n  get expansionPanelBackdropShown(): boolean {\r\n    return this.expansionPanelExpanded && this.toastPanelForExpansionOpened;\r\n  }\r\n\r\n  get actionbarMode(): ActionbarMode {\r\n    return ActionbarMode.Overlay;\r\n  }\r\n\r\n  get actionbarWithTitle(): boolean {\r\n    return this.actionbarMode === ActionbarMode.Overlay;\r\n  }\r\n\r\n  get searchStore(): EntityStore<SearchResult> {\r\n    return this.searchState.store;\r\n  }\r\n\r\n  get searchResultsGeometryEnabled(): boolean {\r\n    return this.searchState.searchResultsGeometryEnabled$.value;\r\n  }\r\n\r\n  get queryStore(): EntityStore<SearchResult> {\r\n    return this.queryState.store;\r\n  }\r\n\r\n  get toolbox(): Toolbox {\r\n    return this.toolState.toolbox;\r\n  }\r\n\r\n  get toastPanelContent(): string {\r\n    let content;\r\n    if (this.workspace !== undefined && this.workspace.hasWidget) {\r\n      content = 'workspace';\r\n    } /*else if (this.searchResult !== undefined) {\r\n      content = this.searchResult.meta.dataType.toLowerCase();\r\n    }*/\r\n    return content;\r\n  }\r\n\r\n  // get toastPanelTitle(): string {\r\n  //   let title;\r\n  //   if (\r\n  //     this.toastPanelContent !== 'workspace' &&\r\n  //     this.searchResult !== undefined\r\n  //   ) {\r\n  //     title = getEntityTitle(this.searchResult);\r\n  //   }\r\n  //   return title;\r\n  // }\r\n\r\n  get workspaceStore(): WorkspaceStore {\r\n    return this.workspaceState.store;\r\n  }\r\n\r\n  get workspace(): Workspace {\r\n    return this.workspaceState.workspace$.value;\r\n  }\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public workspaceState: WorkspaceState,\r\n    public authService: AuthService,\r\n    public mediaService: MediaService,\r\n    public layerService: LayerService,\r\n    public dataSourceService: DataSourceService,\r\n    public cdRef: ChangeDetectorRef,\r\n    public capabilitiesService: CapabilitiesService,\r\n    private contextState: ContextState,\r\n    private mapState: MapState,\r\n    private searchState: SearchState,\r\n    private queryState: QueryState,\r\n    private toolState: ToolState,\r\n    private searchSourceService: SearchSourceService,\r\n    private configService: ConfigService,\r\n    private importService: ImportService,\r\n    private http: HttpClient,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private welcomeWindowService: WelcomeWindowService,\r\n    public dialogWindow: MatDialog,\r\n    private queryService: QueryService,\r\n    private storageService: StorageService,\r\n    private directionState: DirectionState\r\n  ) {\r\n    this.hasExpansionPanel = this.configService.getConfig('hasExpansionPanel');\r\n    this.hasGeolocateButton =\r\n    this.configService.getConfig('hasGeolocateButton') === undefined ? true : this.configService.getConfig('hasGeolocateButton') ;\r\n    this.showRotationButtonIfNoRotation =\r\n    this.configService.getConfig('showRotationButtonIfNoRotation') === undefined ? false : this.configService.getConfig('showRotationButtonIfNoRotation') ;\r\n    this.forceCoordsNA = this.configService.getConfig('app.forceCoordsNA');\r\n    this.hasFeatureEmphasisOnSelection = this.configService.getConfig(\r\n      'hasFeatureEmphasisOnSelection'\r\n    );\r\n\r\n\r\n    this.igoSearchPointerSummaryEnabled = this.configService.getConfig(\r\n      'hasSearchPointerSummary'\r\n    );\r\n    if (this.igoSearchPointerSummaryEnabled === undefined) {\r\n      this.igoSearchPointerSummaryEnabled = this.storageService.get('searchPointerSummaryEnabled') as boolean || false;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    window['IGO'] = this;\r\n    this.searchState.searchTermSplitter$.next(this.termSplitter);\r\n\r\n    this.initWelcomeWindow();\r\n\r\n    this.authService.authenticate$.subscribe((authenticated) => {\r\n      this.contextLoaded = false;\r\n    });\r\n\r\n    this.context$$ = this.contextState.context$.subscribe(\r\n      (context: DetailedContext) => this.onChangeContext(context)\r\n    );\r\n\r\n    this.contextMenuStore.load([\r\n      {\r\n        id: 'coordinates',\r\n        title: 'coordinates',\r\n        handler: () => this.searchCoordinate(this.contextMenuCoord)\r\n      },\r\n      {\r\n        id: 'googleMaps',\r\n        title: 'googleMap',\r\n        handler: () => this.openGoogleMaps(this.contextMenuCoord)\r\n      },\r\n      {\r\n        id: 'googleStreetView',\r\n        title: 'googleStreetView',\r\n        handler: () => this.openGoogleStreetView(this.contextMenuCoord)\r\n      }\r\n    ]);\r\n\r\n    this.queryStore.count$\r\n      .pipe(pairwise())\r\n      .subscribe(([prevCnt, currentCnt]) => {\r\n        this.map.viewController.padding[2] = currentCnt ? 280 : 0;\r\n        // on mobile. Close the toast if workspace is opened, on new query\r\n        if (\r\n          prevCnt === 0 &&\r\n          currentCnt !== prevCnt &&\r\n          this.isMobile() &&\r\n          this.hasExpansionPanel &&\r\n          this.expansionPanelExpanded &&\r\n          this.toastPanelOpened\r\n        ) {\r\n          this.toastPanelOpened = false;\r\n        }\r\n      });\r\n    this.map.ol.once('rendercomplete', () => {\r\n      this.readQueryParams();\r\n    });\r\n\r\n    this.onSettingsChange$.subscribe(() => {\r\n      this.searchState.setSearchSettingsChange();\r\n    });\r\n\r\n    this.searchState.selectedResult$.subscribe((result) => {\r\n      if (result && this.isMobile()) {\r\n        this.closeSidenav();\r\n      }\r\n    });\r\n\r\n    this.workspaceState.workspaceEnabled$.next(this.hasExpansionPanel);\r\n    this.workspaceState.store.empty$.subscribe((workspaceEmpty) => {\r\n      if (!this.hasExpansionPanel) {\r\n        return;\r\n      }\r\n      this.workspaceState.workspaceEnabled$.next(workspaceEmpty ? false : true);\r\n      if (workspaceEmpty) {\r\n        this.expansionPanelExpanded = false;\r\n      }\r\n      this.updateMapBrowserClass();\r\n    });\r\n\r\n    this.workspaceMaximize$$.push(this.workspaceState.workspaceMaximize$.subscribe((workspaceMaximize) => {\r\n      this.workspaceMaximize$.next(workspaceMaximize);\r\n      this.updateMapBrowserClass();\r\n    }));\r\n    this.workspaceMaximize$$.push(\r\n      this.workspaceMaximize$.subscribe(() => this.updateMapBrowserClass())\r\n    );\r\n\r\n    this.workspaceState.workspace$.subscribe((activeWks: WfsWorkspace | FeatureWorkspace) => {\r\n      if (activeWks) {\r\n        this.selectedWorkspace$.next(activeWks);\r\n        this.expansionPanelExpanded = true;\r\n      } else {\r\n        this.expansionPanelExpanded = false;\r\n      }\r\n    });\r\n\r\n    this.activeWidget$$ = this.workspaceState.activeWorkspaceWidget$.subscribe(\r\n      (widget: Widget) => {\r\n        if (widget !== undefined) {\r\n          this.openToastPanelForExpansion();\r\n          this.showToastPanelForExpansionToggle = true;\r\n        } else {\r\n          this.closeToastPanelForExpansion();\r\n          this.showToastPanelForExpansionToggle = false;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.openSidenav$$ = this.toolState.openSidenav$.subscribe(\r\n      (openSidenav: boolean) => {\r\n        if (openSidenav) {\r\n          this.openSidenav();\r\n          this.toolState.openSidenav$.next(false);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.sidenavMediaAndOrientation$$ =\r\n      combineLatest([\r\n        this.sidenavOpened$,\r\n        this.mediaService.media$,\r\n        this.mediaService.orientation$]\r\n      ).pipe(\r\n        debounceTime(50)\r\n      ).subscribe((sidenavMediaAndOrientation: [boolean, string, string]) => {\r\n        this.computeToastPanelOffsetX();\r\n      });\r\n  }\r\n\r\n  setToastPanelHtmlDisplay(value) {\r\n    this.toastPanelHtmlDisplay = value;\r\n    this.computeToastPanelOffsetX();\r\n  }\r\n\r\n  computeToastPanelOffsetX() {\r\n    if (this.isMobile() || !this.isLandscape()) {\r\n      Promise.resolve().then(() => this.toastPanelOffsetX$.next(undefined));\r\n    } else {\r\n      Promise.resolve().then(() => this.toastPanelOffsetX$.next(this.getToastPanelExtent()));\r\n    }\r\n  }\r\n\r\n  workspaceVisibility(): boolean {\r\n    const wks = (this.selectedWorkspace$.value as WfsWorkspace | FeatureWorkspace);\r\n    if (wks.inResolutionRange$.value) {\r\n      if (wks.entityStore.empty$.value && !wks.layer.visible) {\r\n        this.workspaceNotAvailableMessage = 'workspace.disabled.visible';\r\n      } else {\r\n        this.workspaceNotAvailableMessage = '';\r\n      }\r\n    } else {\r\n      this.workspaceNotAvailableMessage = 'workspace.disabled.resolution';\r\n    }\r\n    return wks.inResolutionRange$.value;\r\n  }\r\n\r\n\r\n  paginatorChange(matPaginator: MatPaginator) {\r\n    this.workspacePaginator = matPaginator;\r\n  }\r\n\r\n  entitySortChange() {\r\n    this.workspaceEntitySortChange$.next(true);\r\n  }\r\n\r\n  entitySelectChange(result: { added: Feature[] }) {\r\n    const baseQuerySearchSource = this.getQuerySearchSource();\r\n    const querySearchSourceArray: QuerySearchSource[] = [];\r\n    if (result && result.added) {\r\n      const results = result.added.map((res) => {\r\n        if (\r\n          res &&\r\n          res.ol &&\r\n          res.ol.getProperties()._featureStore.layer &&\r\n          res.ol.getProperties()._featureStore.layer.visible\r\n        ) {\r\n          const ol = res.ol as olFeature<OlGeometry>;\r\n          const featureStoreLayer = res.ol.getProperties()._featureStore.layer;\r\n          const feature = featureFromOl(\r\n            ol,\r\n            featureStoreLayer.map.projection,\r\n            featureStoreLayer.ol\r\n          );\r\n\r\n          feature.meta.alias = this.queryService.getAllowedFieldsAndAlias(\r\n            featureStoreLayer\r\n          );\r\n          feature.meta.title =\r\n            this.queryService.getQueryTitle(feature, featureStoreLayer) ||\r\n            feature.meta.title;\r\n          let querySearchSource = querySearchSourceArray.find(\r\n            (s) => s.title === feature.meta.sourceTitle\r\n          );\r\n          if (!querySearchSource) {\r\n            querySearchSource = new QuerySearchSource({\r\n              title: feature.meta.sourceTitle\r\n            });\r\n            querySearchSourceArray.push(querySearchSource);\r\n          }\r\n          return featureToSearchResult(feature, querySearchSource);\r\n        }\r\n      });\r\n\r\n      const research = {\r\n        request: of(results),\r\n        reverse: false,\r\n        source: baseQuerySearchSource\r\n      };\r\n      research.request.subscribe((queryResults: SearchResult<Feature>[]) => {\r\n        this.queryStore.load(queryResults);\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.context$$.unsubscribe();\r\n    this.activeWidget$$.unsubscribe();\r\n    this.openSidenav$$.unsubscribe();\r\n    this.workspaceMaximize$$.map(f => f.unsubscribe());\r\n    this.sidenavMediaAndOrientation$$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Cancel ongoing add layer, if any\r\n   */\r\n  private cancelOngoingAddLayer() {\r\n    this.addedLayers$$.forEach((sub: Subscription) => sub.unsubscribe());\r\n    this.addedLayers$$ = [];\r\n  }\r\n\r\n  onBackdropClick() {\r\n    this.closeSidenav();\r\n  }\r\n\r\n  onToggleSidenavClick() {\r\n    this.toggleSidenav();\r\n  }\r\n\r\n  onDeactivateWorkspaceWidget() {\r\n    this.closeToastPanelForExpansion();\r\n  }\r\n\r\n  closeToastPanelForExpansion() {\r\n    this.toastPanelForExpansionOpened = false;\r\n  }\r\n\r\n  openToastPanelForExpansion() {\r\n    this.toastPanelForExpansionOpened = true;\r\n  }\r\n\r\n  onMapQuery(event: { features: Feature[]; event: MapBrowserEvent<any> }) {\r\n    const baseQuerySearchSource = this.getQuerySearchSource();\r\n    const querySearchSourceArray: QuerySearchSource[] = [];\r\n\r\n    const results = event.features.map((feature: Feature) => {\r\n      let querySearchSource = querySearchSourceArray.find(\r\n        (s) => s.title === feature.meta.sourceTitle\r\n      );\r\n      if (!querySearchSource) {\r\n        querySearchSource = new QuerySearchSource({\r\n          title: feature.meta.sourceTitle\r\n        });\r\n        querySearchSourceArray.push(querySearchSource);\r\n      }\r\n      return featureToSearchResult(feature, querySearchSource);\r\n    });\r\n\r\n    const research = {\r\n      request: of(results),\r\n      reverse: false,\r\n      source: baseQuerySearchSource\r\n    };\r\n    research.request.subscribe((queryResults: SearchResult<Feature>[]) => {\r\n      this.queryStore.load(queryResults);\r\n    });\r\n  }\r\n\r\n  onSearchTermChange(term?: string) {\r\n    if (this.routeParams?.search &&  term !== this.routeParams.search) {\r\n      this.searchState.deactivateCustomFilterTermStrategy();\r\n  }\r\n\r\n    this.searchState.setSearchTerm(term);\r\n    const termWithoutHashtag = term.replace(/(#[^\\s]*)/g, '').trim();\r\n    if (termWithoutHashtag.length < 2) {\r\n      this.onClearSearch();\r\n      return;\r\n    }\r\n    this.onBeforeSearch();\r\n  }\r\n\r\n  onSearch(event: { research: Research; results: SearchResult[] }) {\r\n    const results = event.results;\r\n\r\n    const isReverseSearch = !sourceCanSearch(event.research.source);\r\n\r\n    let enabledSources;\r\n    if (isReverseSearch) {\r\n      enabledSources = this.searchSourceService\r\n        .getEnabledSources()\r\n        .filter(sourceCanReverseSearch);\r\n    } else {\r\n      enabledSources = this.searchSourceService\r\n        .getEnabledSources()\r\n        .filter(sourceCanSearch);\r\n    }\r\n\r\n    const newResults = this.searchStore.entities$.value\r\n      .filter(\r\n        (result: SearchResult) =>\r\n          result.source !== event.research.source &&\r\n          enabledSources.includes(result.source)\r\n      )\r\n      .concat(results);\r\n    this.searchStore.updateMany(newResults);\r\n  }\r\n\r\n  onSearchResultsGeometryStatusChange(value) {\r\n    this.searchState.setSearchResultsGeometryStatus(value);\r\n  }\r\n\r\n  onSearchSettingsChange() {\r\n    this.onSettingsChange$.next(true);\r\n  }\r\n\r\n  private closeSidenav() {\r\n    this.sidenavOpened = false;\r\n    this.map.viewController.padding[3] = 0;\r\n  }\r\n\r\n  private openSidenav() {\r\n    this.sidenavOpened = true;\r\n    this.map.viewController.padding[3] = this.isMobile() ? 0 : 400;\r\n  }\r\n\r\n  private toggleSidenav() {\r\n    this.sidenavOpened ? this.closeSidenav() : this.openSidenav();\r\n    this.computeToastPanelOffsetX();\r\n  }\r\n\r\n  public toolChanged(tool: Tool) {\r\n    if (tool && tool.name === 'searchResults') {\r\n      this.searchBar.nativeElement.getElementsByTagName('input')[0].focus();\r\n    }\r\n  }\r\n\r\n  private onChangeContext(context: DetailedContext) {\r\n    this.cancelOngoingAddLayer();\r\n    if (context === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.route.queryParams.pipe(debounceTime(250)).subscribe((qParams) => {\r\n      if (!qParams['context'] || qParams['context'] === context.uri) {\r\n        this.readLayersQueryParams(qParams);\r\n      }\r\n    });\r\n\r\n    if (this.contextLoaded) {\r\n      const contextManager = this.toolbox.getTool('contextManager');\r\n      const contextManagerOptions = contextManager\r\n        ? contextManager.options\r\n        : {};\r\n      let toolToOpen = contextManagerOptions.toolToOpenOnContextChange;\r\n\r\n      if (!toolToOpen) {\r\n        const toolOrderToOpen = ['mapTools', 'map', 'mapDetails', 'mapLegend'];\r\n        for (const toolName of toolOrderToOpen) {\r\n          if (this.toolbox.getTool(toolName)) {\r\n            toolToOpen = toolName;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (toolToOpen) {\r\n        this.toolbox.activateTool(toolToOpen);\r\n      }\r\n    }\r\n\r\n    this.contextLoaded = true;\r\n  }\r\n\r\n  private onBeforeSearch() {\r\n    if (\r\n      !this.toolbox.activeTool$.value ||\r\n      this.toolbox.activeTool$.value.name !== 'searchResults'\r\n    ) {\r\n      this.toolbox.activateTool('searchResults');\r\n    }\r\n    this.openSidenav();\r\n  }\r\n\r\n  toastOpenedChange(opened: boolean) {\r\n    this.map.viewController.padding[2] = opened ? 280 : 0;\r\n    this.handleExpansionAndToastOnMobile();\r\n    this.toastPanelOpened = opened;\r\n  }\r\n\r\n  private handleExpansionAndToastOnMobile() {\r\n    if (\r\n      this.isMobile() &&\r\n      this.hasExpansionPanel &&\r\n      this.expansionPanelExpanded &&\r\n      this.toastPanelOpened\r\n    ) {\r\n      this.expansionPanelExpanded = false;\r\n    }\r\n  }\r\n\r\n  public onClearSearch() {\r\n    this.map.searchResultsOverlay.clear();\r\n    this.searchStore.clear();\r\n    this.searchState.setSelectedResult(undefined);\r\n    this.searchState.deactivateCustomFilterTermStrategy();\r\n  }\r\n\r\n  private getQuerySearchSource(): SearchSource {\r\n    return this.searchSourceService\r\n      .getSources()\r\n      .find(\r\n        (searchSource: SearchSource) =>\r\n          searchSource instanceof QuerySearchSource\r\n      );\r\n  }\r\n\r\n  onContextMenuOpen(event: { x: number; y: number }) {\r\n    this.contextMenuCoord = this.getClickCoordinate(event) as [number, number];\r\n  }\r\n\r\n  private getClickCoordinate(event: { x: number; y: number }) {\r\n    const contextmenuPoint = event;\r\n    const boundingMapBrowser = this.mapBrowser.nativeElement.getBoundingClientRect();\r\n    contextmenuPoint.y =\r\n      contextmenuPoint.y -\r\n      boundingMapBrowser.top +\r\n      (window.scrollY || window.pageYOffset);\r\n    contextmenuPoint.x =\r\n      contextmenuPoint.x -\r\n      boundingMapBrowser.left +\r\n      (window.scrollX || window.pageXOffset);\r\n    const pixel = [contextmenuPoint.x, contextmenuPoint.y];\r\n\r\n    const coord = this.map.ol.getCoordinateFromPixel(pixel);\r\n    const proj = this.map.projection;\r\n    return olProj.transform(coord, proj, 'EPSG:4326');\r\n  }\r\n\r\n  private openGoogleMaps(coord: [number, number]) {\r\n    window.open(GoogleLinks.getGoogleMapsCoordLink(coord[0], coord[1]));\r\n  }\r\n\r\n  private openGoogleStreetView(coord: [number, number]) {\r\n    window.open(GoogleLinks.getGoogleStreetViewLink(coord[0], coord[1]));\r\n  }\r\n\r\n  searchCoordinate(coord: [number, number]) {\r\n    this.searchBarTerm = coord.map((c) => c.toFixed(6)).join(', ');\r\n  }\r\n\r\n  updateMapBrowserClass() {\r\n    const header = this.queryState.store.entities$.value.length > 0;\r\n    if (this.hasExpansionPanel && this.workspaceState.workspaceEnabled$.value) {\r\n      this.mapBrowser.nativeElement.classList.add('has-expansion-panel');\r\n    } else {\r\n      this.mapBrowser.nativeElement.classList.remove('has-expansion-panel');\r\n    }\r\n\r\n    if (this.hasExpansionPanel && this.expansionPanelExpanded) {\r\n      if (this.workspaceMaximize$.value) {\r\n        this.mapBrowser.nativeElement.classList.add('expansion-offset-maximized');\r\n        this.mapBrowser.nativeElement.classList.remove('expansion-offset');\r\n      } else {\r\n        this.mapBrowser.nativeElement.classList.add('expansion-offset');\r\n        this.mapBrowser.nativeElement.classList.remove('expansion-offset-maximized');\r\n      }\r\n    } else {\r\n      if (this.workspaceMaximize$.value) {\r\n        this.mapBrowser.nativeElement.classList.remove('expansion-offset-maximized');\r\n      } else {\r\n        this.mapBrowser.nativeElement.classList.remove('expansion-offset');\r\n      }\r\n    }\r\n\r\n    if (this.sidenavOpened) {\r\n      this.mapBrowser.nativeElement.classList.add('sidenav-offset');\r\n    } else {\r\n      this.mapBrowser.nativeElement.classList.remove('sidenav-offset');\r\n    }\r\n\r\n    if (this.sidenavOpened && !this.isMobile()) {\r\n      this.mapBrowser.nativeElement.classList.add('sidenav-offset-baselayers');\r\n    } else {\r\n      this.mapBrowser.nativeElement.classList.remove(\r\n        'sidenav-offset-baselayers'\r\n      );\r\n    }\r\n\r\n    if (!this.toastPanelOpened && header && !this.expansionPanelExpanded) {\r\n      this.mapBrowser.nativeElement.classList.add('toast-offset-scale-line');\r\n    } else {\r\n      this.mapBrowser.nativeElement.classList.remove('toast-offset-scale-line');\r\n    }\r\n\r\n    if (\r\n      !this.toastPanelOpened &&\r\n      header &&\r\n      (this.isMobile() || this.isTablet() || this.sidenavOpened) &&\r\n      !this.expansionPanelExpanded\r\n    ) {\r\n      this.mapBrowser.nativeElement.classList.add('toast-offset-attribution');\r\n    } else {\r\n      this.mapBrowser.nativeElement.classList.remove(\r\n        'toast-offset-attribution'\r\n      );\r\n    }\r\n  }\r\n\r\n  getToastPanelExtent() {\r\n    if (!this.sidenavOpened) {\r\n      if (this.toastPanelHtmlDisplay && this.mediaService.isDesktop()) {\r\n        return 'htmlDisplay';\r\n      }\r\n      if (this.fullExtent) {\r\n        return 'fullStandard';\r\n      } else {\r\n        return 'standard';\r\n      }\r\n    } else if (this.sidenavOpened) {\r\n      if (this.toastPanelHtmlDisplay && this.mediaService.isDesktop()) {\r\n        return 'htmlDisplayOffsetX';\r\n      }\r\n      if (this.fullExtent) {\r\n        return 'fullOffsetX';\r\n      } else {\r\n        return 'standardOffsetX';\r\n      }\r\n    }\r\n  }\r\n\r\n  onPointerSummaryStatusChange(value) {\r\n    this.storageService.set('searchPointerSummaryEnabled', value);\r\n    this.igoSearchPointerSummaryEnabled = value;\r\n  }\r\n\r\n  getExpansionPanelStatus() {\r\n    if (this.sidenavOpened === false) {\r\n      if (this.expansionPanelExpanded === true) {\r\n        return 'full';\r\n      }\r\n      return 'notTriggered';\r\n    }\r\n    if (this.sidenavOpened === true && this.isMobile() === false) {\r\n      if (this.expansionPanelExpanded === true) {\r\n        return 'reduced';\r\n      }\r\n      return 'reducedNotTriggered';\r\n    }\r\n    if (this.sidenavOpened === true && this.isMobile() === true) {\r\n      if (this.expansionPanelExpanded === true) {\r\n        return 'mobile';\r\n      } else {\r\n        return 'notVisible';\r\n      }\r\n    }\r\n  }\r\n\r\n  getToastPanelOffsetY() {\r\n    let status = 'noExpansion';\r\n    if (this.expansionPanelExpanded) {\r\n      if (this.workspaceMaximize$.value) {\r\n        if (this.toastPanelOpened) {\r\n          status = 'expansionMaximizedAndToastOpened';\r\n        } else {\r\n          status = 'expansionMaximizedAndToastClosed';\r\n        }\r\n      } else {\r\n        if (this.toastPanelOpened) {\r\n          status = 'expansionAndToastOpened';\r\n        } else {\r\n          status = 'expansionAndToastClosed';\r\n        }\r\n      }\r\n    } else {\r\n      status = 'noExpansion';\r\n    }\r\n    return status;\r\n  }\r\n\r\n  getToastPanelStatus() {\r\n    if (this.isMobile() === true && this.toastPanelOpened === false) {\r\n      if (this.sidenavOpened === false) {\r\n        if (this.expansionPanelExpanded === false) {\r\n          if (this.queryState.store.entities$.value.length > 0) {\r\n            return 'low';\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  getControlsOffsetY() {\r\n    return this.expansionPanelExpanded ? this.workspaceMaximize$.value ? 'firstRowFromBottom-expanded-maximized' : 'firstRowFromBottom-expanded' : 'firstRowFromBottom';\r\n  }\r\n\r\n  getBaselayersSwitcherStatus() {\r\n    let status;\r\n    if (this.isMobile()) {\r\n\r\n      if (this.workspaceState.workspaceEnabled$.value) {\r\n        if (this.expansionPanelExpanded === false) {\r\n          if (this.queryState.store.entities$.value.length === 0) {\r\n            status = 'secondRowFromBottom';\r\n           } else {\r\n            status =  'thirdRowFromBottom';\r\n           }\r\n        } else {\r\n          if (this.queryState.store.entities$.value.length === 0) {\r\n            status = 'firstRowFromBottom-expanded';\r\n           } else {\r\n            status =  'secondRowFromBottom-expanded';\r\n           }\r\n        }\r\n\r\n      } else {\r\n        if (this.queryState.store.entities$.value.length === 0) {\r\n          status =  'firstRowFromBottom';\r\n         } else {\r\n          status =  'secondRowFromBottom';\r\n         }\r\n      }\r\n    } else {\r\n      if (this.workspaceState.workspaceEnabled$.value) {\r\n        if (this.expansionPanelExpanded) {\r\n          if (this.workspaceMaximize$.value) {\r\n            status = 'firstRowFromBottom-expanded-maximized';\r\n          } else {\r\n            status = 'firstRowFromBottom-expanded';\r\n          }\r\n        } else {\r\n          status = 'secondRowFromBottom';\r\n        }\r\n      } else {\r\n        status = 'firstRowFromBottom';\r\n      }\r\n    }\r\n    return status;\r\n  }\r\n\r\n  private readQueryParams() {\r\n    this.route.queryParams.subscribe((params) => {\r\n      this.routeParams = params;\r\n      this.readToolParams();\r\n      this.readSearchParams();\r\n      this.readFocusFirst();\r\n    });\r\n  }\r\n\r\n  private computeFocusFirst() {\r\n    setTimeout(() => {\r\n      const resultItem: any = document\r\n        .getElementsByTagName('igo-search-results-item')\r\n        .item(0);\r\n      if (resultItem) {\r\n        resultItem.click();\r\n      }\r\n    }, 1);\r\n  }\r\n\r\n  private readFocusFirst() {\r\n    if (this.routeParams['sf'] === '1' && this.termDefinedInUrl) {\r\n      const entities$$ = this.searchStore.stateView.all$()\r\n        .pipe(\r\n          skipWhile((entities) => entities.length === 0),\r\n          debounceTime(500),\r\n          take(1)\r\n        )\r\n        .subscribe((entities) => {\r\n          entities$$.unsubscribe();\r\n          if (entities.length && !this.termDefinedInUrlTriggered) {\r\n            this.computeFocusFirst();\r\n            this.termDefinedInUrlTriggered = true;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private readSearchParams() {\r\n    if (this.routeParams['search']) {\r\n      this.termDefinedInUrl = true;\r\n      if (this.routeParams['exactMatch'] === '1') {\r\n        this.searchState.activateCustomFilterTermStrategy();\r\n      }\r\n      if (this.routeParams['search'] && !this.routeParams['zoom'] && this.routeParams['sf'] !== '1') {\r\n        const entities$$ = this.searchStore.stateView.all$()\r\n        .pipe(\r\n          skipWhile((entities) => entities.length === 0),\r\n          debounceTime(500),\r\n          take(1)\r\n        )\r\n        .subscribe((entities) => {\r\n          entities$$.unsubscribe();\r\n          const searchResultsOlFeatures = entities\r\n            .filter(e => e.entity.meta.dataType === FEATURE)\r\n            .map((entity: EntityRecord<SearchResult>) =>\r\n              new olFormatGeoJSON().readFeature(entity.entity.data, {\r\n                dataProjection: entity.entity.data.projection,\r\n                featureProjection: this.map.projection\r\n              })\r\n            );\r\n            const totalExtent = computeOlFeaturesExtent(this.map, searchResultsOlFeatures);\r\n            this.map.viewController.zoomToExtent(totalExtent);\r\n        });\r\n      }\r\n      this.searchBarTerm = this.routeParams['search'];\r\n    }\r\n    if (this.routeParams['searchGeom'] === '1') {\r\n      this.searchState.searchResultsGeometryEnabled$.next(true);\r\n    }\r\n  }\r\n\r\n  private readToolParams() {\r\n    if (this.routeParams['tool']) {\r\n      this.toolbox.activateTool(this.routeParams['tool']);\r\n    }\r\n\r\n    if (this.routeParams['sidenav'] === '1') {\r\n      setTimeout(() => {\r\n        this.openSidenav();\r\n      }, 250);\r\n    }\r\n\r\n    if (this.routeParams['routing']) {\r\n      let routingCoordLoaded = false;\r\n      const stopCoords = this.routeParams['routing'].split(';');\r\n      const routingOptions = this.routeParams['routingOptions'];\r\n      let resultSelection: number;\r\n      if (routingOptions) {\r\n        resultSelection = parseInt(routingOptions.split('result:')[1], 10);\r\n      }\r\n      this.directionState.stopsStore.storeInitialized$\r\n        .pipe(skipWhile(init => !init), first())\r\n        .subscribe((init: boolean) => {\r\n          if (init && !routingCoordLoaded) {\r\n            routingCoordLoaded = true;\r\n            stopCoords.map((coord, i) => {\r\n              if (i > 1) {\r\n                addStopToStore(this.directionState.stopsStore);\r\n              }\r\n            });\r\n            setTimeout(() => {\r\n              stopCoords.map((coord, i) => {\r\n                const stop = this.directionState.stopsStore.all().find(e => e.position === i);\r\n                stop.text = coord;\r\n                stop.coordinates = coord.split(',');\r\n                this.directionState.stopsStore.update(stop);\r\n              });\r\n            }, this.directionState.debounceTime * 1.25); // this delay is due to the default component debounce time\r\n          }\r\n        });\r\n      // zoom to active route\r\n      this.directionState.routesFeatureStore.count$\r\n        .pipe(skipWhile(c => c < 1), first())\r\n        .subscribe(c => {\r\n          if (c >= 1) {\r\n            this.directionState.zoomToActiveRoute$.next();\r\n          }\r\n        });\r\n      // select the active route by url controls\r\n      this.directionState.routesFeatureStore.count$\r\n        .pipe(skipWhile(c => c < 2), first())\r\n        .subscribe(() => {\r\n          if (resultSelection) {\r\n            this.directionState.routesFeatureStore.entities$.value.map(d => d.properties.active = false);\r\n            this.directionState.routesFeatureStore.entities$.value[resultSelection].properties.active = true;\r\n            this.directionState.zoomToActiveRoute$.next();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private readLayersQueryParams(params: Params) {\r\n    this.readLayersQueryParamsByType(params, 'wms');\r\n    this.readLayersQueryParamsByType(params, 'wmts');\r\n    this.readLayersQueryParamsByType(params, 'arcgisrest');\r\n    this.readLayersQueryParamsByType(params, 'imagearcgisrest');\r\n    this.readLayersQueryParamsByType(params, 'tilearcgisrest');\r\n    this.readVectorQueryParams(params);\r\n  }\r\n\r\n  getQueryParam(name, url) {\r\n    let paramValue;\r\n    if (url.includes('?')) {\r\n      const httpParams = new HttpParams({ fromString: url.split('?')[1] });\r\n      paramValue = httpParams.get(name);\r\n    }\r\n    return paramValue;\r\n  }\r\n\r\n  private readLayersQueryParamsByType(params: Params, type) {\r\n    let nameParamLayersKey;\r\n    let urlsKey;\r\n    switch (type) {\r\n      case 'wms':\r\n        if ((params['layers'] || params['wmsLayers']) && params['wmsUrl']) {\r\n          urlsKey = 'wmsUrl';\r\n          nameParamLayersKey = params['wmsLayers'] ? 'wmsLayers' : 'layers'; // for maintain compatibility\r\n        }\r\n        break;\r\n      case 'wmts':\r\n        if (params['wmtsLayers'] && params['wmtsUrl']) {\r\n          urlsKey = 'wmtsUrl';\r\n          nameParamLayersKey = 'wmtsLayers';\r\n        }\r\n        break;\r\n      case 'arcgisrest':\r\n        if (params['arcgisLayers'] && params['arcgisUrl']) {\r\n          urlsKey = 'arcgisUrl';\r\n          nameParamLayersKey = 'arcgisLayers';\r\n        }\r\n        break;\r\n      case 'imagearcgisrest':\r\n        if (params['iarcgisLayers'] && params['iarcgisUrl']) {\r\n          urlsKey = 'iarcgisUrl';\r\n          nameParamLayersKey = 'iarcgisLayers';\r\n        }\r\n        break;\r\n      case 'tilearcgisrest':\r\n        if (params['tarcgisLayers'] && params['tarcgisUrl']) {\r\n          urlsKey = 'tarcgisUrl';\r\n          nameParamLayersKey = 'tarcgisLayers';\r\n        }\r\n        break;\r\n    }\r\n    if (!nameParamLayersKey || !urlsKey) {\r\n      return;\r\n    }\r\n    const layersByService = params[nameParamLayersKey].split('),(');\r\n    const urls = params[urlsKey].split(',');\r\n\r\n    let cnt = 0;\r\n    urls.forEach((urlSrc) => {\r\n      let url = urlSrc;\r\n      const version =\r\n        this.getQueryParam('VERSION', url) ||\r\n        this.getQueryParam('version', url) ||\r\n        undefined;\r\n      if (version) {\r\n        url = url.replace('VERSION=' + version, '').replace('version=' + version, '');\r\n      }\r\n\r\n      const currentLayersByService = this.extractLayersByService(\r\n        layersByService[cnt]\r\n      );\r\n      currentLayersByService.forEach((layer) => {\r\n        const layerFromUrl = layer.split(':igoz');\r\n        const layerOptions = ObjectUtils.removeUndefined({\r\n          type,\r\n          url: url,\r\n          layer: layerFromUrl[0],\r\n          params: type === 'wms' ? { LAYERS: layerFromUrl[0] } : undefined\r\n        });\r\n        const id = generateIdFromSourceOptions(layerOptions);\r\n        const visibility = this.computeLayerVisibilityFromUrl(params, id);\r\n        this.addLayerFromURL(\r\n          url,\r\n          layerFromUrl[0],\r\n          type,\r\n          version,\r\n          visibility,\r\n          layerFromUrl[1] ? parseInt(layerFromUrl[1], 10) : undefined\r\n        );\r\n      });\r\n      cnt += 1;\r\n    });\r\n  }\r\n\r\n  private readVectorQueryParams(params: Params) {\r\n    if (params['vector']) {\r\n      const url = params['vector'] as string;\r\n      const lastIndex = url.lastIndexOf('/');\r\n      const fileName = url.slice(lastIndex + 1, url.length);\r\n\r\n      this.http.get(`${url}`, { responseType: 'blob' }).subscribe((data) => {\r\n        const file = new File([data], fileName, {\r\n          type: data.type,\r\n          lastModified: Date.now()\r\n        });\r\n        this.importService.import(file).subscribe(\r\n          (features: Feature[]) => this.onFileImportSuccess(file, features),\r\n          (error: Error) => this.onFileImportError(file, error)\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  private onFileImportSuccess(file: File, features: Feature[]) {\r\n    handleFileImportSuccess(\r\n      file,\r\n      features,\r\n      this.map,\r\n      this.messageService,\r\n      this.languageService\r\n    );\r\n  }\r\n\r\n  private onFileImportError(file: File, error: Error) {\r\n    handleFileImportError(\r\n      file,\r\n      error,\r\n      this.messageService,\r\n      this.languageService\r\n    );\r\n  }\r\n\r\n  private extractLayersByService(layersByService: string): any[] {\r\n    let outLayersByService = layersByService;\r\n    outLayersByService = outLayersByService.startsWith('(')\r\n      ? outLayersByService.substr(1)\r\n      : outLayersByService;\r\n    outLayersByService = outLayersByService.endsWith(')')\r\n      ? outLayersByService.slice(0, -1)\r\n      : outLayersByService;\r\n    return outLayersByService.split(',');\r\n  }\r\n  private addLayerFromURL(\r\n    url: string,\r\n    name: string,\r\n    type: 'wms' | 'wmts' | 'arcgisrest'| 'imagearcgisrest' | 'tilearcgisrest',\r\n    version: string,\r\n    visibility: boolean = true,\r\n    zIndex: number\r\n  ) {\r\n    if (!this.contextLoaded) {\r\n      return;\r\n    }\r\n    const commonSourceOptions = {\r\n      optionsFromCapabilities: true,\r\n      optionsFromApi: true,\r\n      crossOrigin: true,\r\n      type,\r\n      url\r\n    };\r\n    const arcgisClause = (type === 'arcgisrest' || type === 'imagearcgisrest' || type === 'tilearcgisrest');\r\n    let sourceOptions = {\r\n      version: type === 'wmts' ? '1.0.0' : undefined,\r\n      queryable: arcgisClause  ? true : false,\r\n      queryFormat: arcgisClause  ? 'esrijson' : undefined,\r\n      layer: name\r\n    };\r\n    if (type === 'wms') {\r\n      sourceOptions =  { params: {LAYERS: name, VERSION: version}} as any;\r\n    }\r\n\r\n    sourceOptions = ObjectUtils.removeUndefined(Object.assign({}, sourceOptions, commonSourceOptions));\r\n\r\n    this.addedLayers$$.push(\r\n      this.layerService\r\n        .createAsyncLayer({\r\n          zIndex: zIndex,\r\n          visible: visibility,\r\n          sourceOptions\r\n        })\r\n        .subscribe((l) => {\r\n          this.map.addLayer(l);\r\n        })\r\n    );\r\n  }\r\n\r\n  private computeLayerVisibilityFromUrl(\r\n    params: Params,\r\n    currentLayerid: string\r\n  ): boolean {\r\n    const queryParams = params;\r\n    let visible = true;\r\n    if (!queryParams || !currentLayerid) {\r\n      return visible;\r\n    }\r\n    let visibleOnLayersParams = '';\r\n    let visibleOffLayersParams = '';\r\n    let visiblelayers: string[] = [];\r\n    let invisiblelayers: string[] = [];\r\n    if (queryParams['visiblelayers']) {\r\n      visibleOnLayersParams = queryParams['visiblelayers'];\r\n    }\r\n    if (queryParams['invisiblelayers']) {\r\n      visibleOffLayersParams = queryParams['invisiblelayers'];\r\n    }\r\n\r\n    /* This order is important because to control whichever\r\n     the order of * param. First whe open and close everything.*/\r\n    if (visibleOnLayersParams === '*') {\r\n      visible = true;\r\n    }\r\n    if (visibleOffLayersParams === '*') {\r\n      visible = false;\r\n    }\r\n\r\n    // After, managing named layer by id (context.json OR id from datasource)\r\n    visiblelayers = visibleOnLayersParams.split(',');\r\n    invisiblelayers = visibleOffLayersParams.split(',');\r\n    if (visiblelayers.indexOf(currentLayerid) > -1  || visiblelayers.indexOf(currentLayerid.toString()) > -1) {\r\n      visible = true;\r\n    }\r\n    if (invisiblelayers.indexOf(currentLayerid) > -1 || invisiblelayers.indexOf(currentLayerid.toString()) > -1) {\r\n      visible = false;\r\n    }\r\n    return visible;\r\n  }\r\n\r\n  private initWelcomeWindow(): void {\r\n    if (this.auth?.url) {\r\n      this.authService.logged$.subscribe((logged) => {\r\n        if (logged) {\r\n          this.createWelcomeWindow();\r\n        }\r\n      });\r\n    } else {\r\n      this.createWelcomeWindow();\r\n    }\r\n  }\r\n\r\n  private createWelcomeWindow(): void {\r\n    if (this.welcomeWindowService.hasWelcomeWindow()) {\r\n      const welcomWindowConfig: MatDialogConfig = this.welcomeWindowService.getConfig();\r\n\r\n      const dialogRef = this.dialogWindow.open(\r\n        WelcomeWindowComponent,\r\n        welcomWindowConfig\r\n      );\r\n\r\n      dialogRef.afterClosed().subscribe((result) => {\r\n        this.welcomeWindowService.afterClosedWelcomeWindow();\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { IgoPanelModule, IgoStopPropagationModule } from '@igo2/common';\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { ToastPanelForExpansionComponent } from './toast-panel-for-expansion.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    IgoLanguageModule,\r\n    IgoPanelModule,\r\n    IgoStopPropagationModule\r\n  ],\r\n  exports: [ToastPanelForExpansionComponent],\r\n  declarations: [ToastPanelForExpansionComponent]\r\n})\r\nexport class AppToastPanelForExpansionModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { WelcomeWindowComponent } from './welcome-window.component';\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoInteractiveTourModule, IgoCustomHtmlModule } from '@igo2/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IgoLanguageModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MatDialogModule,\r\n    IgoInteractiveTourModule,\r\n    IgoCustomHtmlModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatToolbarModule\r\n  ],\r\n  declarations: [WelcomeWindowComponent],\r\n  exports: [WelcomeWindowComponent]\r\n})\r\nexport class IgoWelcomeWindowModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\nimport { IgoCoreModule } from '@igo2/core';\r\nimport {\r\n  IgoActionModule,\r\n  IgoWorkspaceModule,\r\n  IgoEntityModule,\r\n  IgoPanelModule,\r\n  IgoBackdropModule,\r\n  IgoFlexibleModule,\r\n  IgoContextMenuModule,\r\n  IgoToolModule,\r\n  IgoEntityTableModule,\r\n  IgoEntityTablePaginatorModule,\r\n  IgoInteractiveTourModule\r\n} from '@igo2/common';\r\n\r\nimport {\r\n  IgoGeoWorkspaceModule,\r\n  IgoFeatureModule,\r\n  IgoImportExportModule,\r\n  IgoMapModule,\r\n  IgoQueryModule,\r\n  IgoSearchModule\r\n} from '@igo2/geo';\r\nimport {\r\n  IgoContextManagerModule,\r\n  IgoContextMapButtonModule\r\n} from '@igo2/context';\r\n\r\nimport { IgoIntegrationModule } from '@igo2/integration';\r\n\r\nimport { MapOverlayModule } from './map-overlay/map-overlay.module';\r\nimport { AppExpansionPanelModule } from './expansion-panel/expansion-panel.module';\r\nimport { AppToastPanelModule } from './toast-panel/toast-panel.module';\r\nimport { AppSidenavModule } from './sidenav/sidenav.module';\r\n\r\nimport { PortalComponent } from './portal.component';\r\nimport { AppToastPanelForExpansionModule } from './toast-panel-for-expansion/toast-panel-for-expansion.module';\r\n\r\nimport { WelcomeWindowComponent } from './welcome-window/welcome-window.component';\r\nimport { IgoWelcomeWindowModule } from './welcome-window/welcome-window.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatDialogModule,\r\n    IgoCoreModule,\r\n    IgoFeatureModule,\r\n    IgoImportExportModule,\r\n    IgoMapModule,\r\n    IgoQueryModule.forRoot(),\r\n    IgoSearchModule.forRoot(),\r\n    IgoActionModule,\r\n    IgoWorkspaceModule,\r\n    IgoEntityModule,\r\n    IgoGeoWorkspaceModule,\r\n    IgoPanelModule,\r\n    IgoToolModule,\r\n    IgoContextMenuModule,\r\n    IgoBackdropModule,\r\n    IgoFlexibleModule,\r\n    IgoIntegrationModule,\r\n    AppExpansionPanelModule,\r\n    AppToastPanelModule,\r\n    AppToastPanelForExpansionModule,\r\n    AppSidenavModule,\r\n    MapOverlayModule,\r\n    IgoContextManagerModule,\r\n    IgoContextMapButtonModule,\r\n    IgoEntityTableModule,\r\n    IgoEntityTablePaginatorModule,\r\n    IgoInteractiveTourModule,\r\n    IgoWelcomeWindowModule\r\n  ],\r\n  exports: [PortalComponent],\r\n  declarations: [PortalComponent],\r\n  entryComponents: [WelcomeWindowComponent]\r\n})\r\nexport class PortalModule {}\r\n","<igo-spinner igoSpinnerActivity></igo-spinner>\r\n<igo-message-center></igo-message-center>\r\n<igo-auth-form *ngIf=\"authConfig && authConfig.url\"></igo-auth-form>\r\n\r\n<app-portal igoStopDropPropagation></app-portal>\r\n","import { Component, Renderer2 } from '@angular/core';\r\nimport { Title, Meta } from '@angular/platform-browser';\r\nimport { zip } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { userAgent } from '@igo2/utils';\r\nimport {\r\n  LanguageService,\r\n  ConfigService,\r\n  AnalyticsService,\r\n  MessageService\r\n} from '@igo2/core';\r\nimport { AuthOptions } from '@igo2/auth';\r\nimport { AnalyticsListenerService } from '@igo2/integration';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  public authConfig: AuthOptions;\r\n  private themeClass = 'blue-theme';\r\n\r\n  constructor(\r\n    protected languageService: LanguageService,\r\n    private configService: ConfigService,\r\n    private analyticsService: AnalyticsService,\r\n    private analyticsListenerService: AnalyticsListenerService,\r\n    private renderer: Renderer2,\r\n    private titleService: Title,\r\n    private metaService: Meta,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.authConfig = this.configService.getConfig('auth');\r\n\r\n    this.readTitleConfig();\r\n    this.readThemeConfig();\r\n    this.readDescriptionConfig();\r\n\r\n    this.analyticsListenerService.listen();\r\n\r\n    this.detectOldBrowser();\r\n  }\r\n\r\n  private readTitleConfig() {\r\n    this.languageService.translate.get(this.configService.getConfig('title')).subscribe(title => {\r\n      if (title) {\r\n        this.titleService.setTitle(title);\r\n        this.metaService.addTag({ name: 'title', content: title });\r\n      }\r\n    });\r\n  }\r\n\r\n  private readThemeConfig() {\r\n    const theme = this.configService.getConfig('theme') || this.themeClass;\r\n    if (theme) {\r\n      this.renderer.addClass(document.body, theme);\r\n    }\r\n  }\r\n\r\n  private readDescriptionConfig() {\r\n    const description = this.configService.getConfig('description');\r\n    if (description) {\r\n      this.metaService.addTag({ name: 'description', content: description });\r\n    }\r\n  }\r\n\r\n  private detectOldBrowser() {\r\n    const oldBrowser = userAgent.satisfies({\r\n      ie: '<11',\r\n      chrome: '<64',\r\n      firefox: '<60'\r\n    });\r\n\r\n    if (oldBrowser) {\r\n      const translate = this.languageService.translate;\r\n      const title$ = translate.get('oldBrowser.title');\r\n      const message$ = translate.get('oldBrowser.message');\r\n      zip(title$, message$)\r\n        .pipe(\r\n          map(([title, message]) => ({\r\n            title,\r\n            message\r\n          }))\r\n        )\r\n        .subscribe((rep) =>\r\n          this.messageService.alert(rep.message, rep.title, {\r\n            timeOut: 15000\r\n          })\r\n        );\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule, HammerModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {\r\n  provideConfigOptions,\r\n  IgoMessageModule,\r\n  IgoGestureModule,\r\n  RouteService\r\n} from '@igo2/core';\r\nimport { IgoSpinnerModule, IgoStopPropagationModule } from '@igo2/common';\r\nimport { IgoAuthModule } from '@igo2/auth';\r\nimport {\r\n  provideIChercheSearchSource,\r\n  provideIChercheReverseSearchSource,\r\n  provideNominatimSearchSource,\r\n  provideCoordinatesReverseSearchSource,\r\n  provideILayerSearchSource,\r\n  provideStoredQueriesSearchSource,\r\n  provideOsrmDirectionsSource,\r\n  provideOptionsApi,\r\n  provideCadastreSearchSource\r\n} from '@igo2/geo';\r\n\r\nimport { environment } from '../environments/environment';\r\nimport { PortalModule } from './pages';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot([]),\r\n    IgoAuthModule.forRoot(),\r\n    IgoGestureModule.forRoot(),\r\n    IgoMessageModule,\r\n    IgoSpinnerModule,\r\n    IgoStopPropagationModule,\r\n    PortalModule,\r\n    HammerModule\r\n  ],\r\n  providers: [\r\n    provideConfigOptions({\r\n      default: environment.igo,\r\n      path: './config/config.json'\r\n    }),\r\n    RouteService,\r\n    provideNominatimSearchSource(),\r\n    provideIChercheSearchSource(),\r\n    provideIChercheReverseSearchSource(),\r\n    provideCoordinatesReverseSearchSource(),\r\n    provideILayerSearchSource(),\r\n    provideStoredQueriesSearchSource(),\r\n    provideOsrmDirectionsSource(),\r\n    provideOptionsApi(),\r\n    provideCadastreSearchSource()\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"]}